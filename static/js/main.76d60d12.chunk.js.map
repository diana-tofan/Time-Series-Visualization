{"version":3,"sources":["helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/Bars.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/BarChart.js","components/App.js","serviceWorker.js","index.js","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd.csv","data/data.csv"],"names":["parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","reduce","r","a","push","parseDayInsights","dayInsights","Object","keys","acc","days","roundedHours","hour","m","minute","second","millisecond","parseInt","add","startOf","occurrences","obj","d3","values","i","parseData","x","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","allDays","showTooltip","isSpinnerVisible","isEmptyContainerVisible","showSpinner","val","type","showEmptyContainer","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","isRadialChartVisible","selectedDay","isBarChartVisible","showBarChart","selectDay","rootReducer","combineReducers","app","state","arguments","length","undefined","action","moments","d","objectSpread","min","max","calendar","radialChart","barChart","weekArray","Array","apply","_","isoWeekday","DayLabels","react_default","createElement","className","day","key","connect","dispatch","changeYear","props","previousYear","subtract","nextYear","showPreviousArrow","showNextArrow","classNames","disabled","onClick","Day","nextProps","nextState","formatDate","this","isCurrentDay","getDay","week","month","count","Date","getFullYear","getMonth","find","setHours","filter","j","value","Math","toConsumableArray","fillColor","fill","width","height","rx","ry","y","ev","preventDefault","stopPropagation","formattedDay","data-tip","data-for","React","Component","Month","weeksInMonth","floor","offset","monthName","lastDay","endOf","firstDay","extraSpace","textAnchor","calendar_Day","PureComponent","Year","target","size","months","range","monthsArr","memo","index","hidden","calendar_Month","Card","id","children","Heatmap","components_widget_Card","calendar_DayLabels","calendar_YearLabel","calendar_Year","react_tooltip_dist_default","multiline","class","DayLabel","_this$props","previousDay","nextDay","isAfter","isBefore","Bars","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderBars","current","refs","bars","datum","plotData","selectAll","interrupt","transition","attr","enter","append","classed","plotHeight","hoverIndex","on","setState","exit","remove","merge","select","duration","ref","XAxis","renderAxis","xAxis","xScale","transform","fontSize","YAxis","yAxis","yScale","ticks","nrOfTicks","tickFormat","BarChart","updateScale","nice","xDomain","yDomain","domain","paddingInner","paddingOuter","margin","top","bottom","updatePlotSize","plotWidth","left","right","circleHoverIndex","isChecked","document","getElementById","clientWidth","addEventListener","resize","bind","assertThisInitialized","t","_this2","event","clearTimeout","setTimeout","assign","ReactTooltip","rebuild","_this3","onCheckboxChange","_this$updateScale","_this$updatePlotSize","metaData","bandwidth","bar_chart_DayLabel","checked","defaultChecked","onChange","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","uploadFile","showCalendar","setData","setDatasetName","file","name","bytes","log","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","components_bar_chart_BarChart","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.76d60d12.chunk.js","sourcesContent":["import moment from 'moment';\nimport * as d3 from \"d3\";\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    // debugger\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    const max = d3.max(Object.values(occurrences));\n    const nrOfTicks = max < 10 ? max : max / 2;\n    let obj = {};\n    for (let i = 1; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    // acc.push(occurrences);\n    return acc;\n  }, {});\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SHOW_EMPTY_CONTAINER = 'SHOW_EMPTY_CONTAINER';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false,\n  isEmptyContainerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SHOW_EMPTY_CONTAINER:\n      return {\n        ...state,\n        isEmptyContainerVisible: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const showEmptyContainer = val => ({ type: SHOW_EMPTY_CONTAINER, val });\n","const SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","const SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isBarChartVisible: false,\n  selectedDay: null,\n  dayInsights: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport moment from 'moment';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = () =>\n  <div className='dayLabelsContainer'>\n    <span>\n      {\n        weekArray.map(day =>\n          <text\n            key={day}\n            className='dayLabels'\n          >\n            {day}\n          </text>\n        )\n      }\n    </span>\n  </div>;\n\nexport default DayLabels;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='yearLabel'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport { showEmptyContainer } from '../../reducers/app';\nimport { selectDay, showBarChart } from '../../reducers/barChart';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay);\n  }\n\n  render() {\n    const props = this.props;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const month = props.month;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(props.data).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n    const item = Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    const fillColor = !!props.data[item] ? d3.interpolatePurples(value) : '#ececec';\n\n    const onDayClick = ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      props.selectDay(d);\n      const formattedDay = moment(d).format('YYYY-MM-DD');\n      if (!!props.dayInsights[formattedDay]) {\n        props.showEmptyContainer(false);\n        props.showBarChart(true);\n      } else {\n        props.showBarChart(false);\n        props.showEmptyContainer(true);\n      }\n    };\n    return (\n      <rect\n        key={d}\n        className={classNames('day', {'fill': isCurrentDay})}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={onDayClick}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.barChart.selectedDay,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showEmptyContainer: val => dispatch(showEmptyContainer(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\n\nclass Month extends React.PureComponent {\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className='month-name'\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n          >\n            { monthName(month) }\n          </text>\n          { days.map(d => <Day day={d} month={month} key={d} />) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nexport default connect(mapStateToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD'); // new Date(2016, 0, 1);\n    const maxDate = props.maxDate.format('YYYY-MM-DD'); // new Date(2020, 11, 31);\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    return (\n      <div>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map(month =>\n                  <Month\n                    key={month}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\n\nclass Heatmap extends React.PureComponent {\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Card>\n        <DayLabels />\n        <YearLabel />\n        <div className='months'>\n          <Year />\n        </div>\n        <ReactTooltip id='svgTooltip' multiline class='tooltipx'/>\n      </Card>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { selectDay } from '../../reducers/barChart';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay;\n  }\n\n  render() {\n    const { selectedDay, minDate, maxDate, selectDay } = this.props;\n    const previousDay = moment(selectedDay).subtract(1, 'days');\n    const nextDay = moment(selectedDay).add(1, 'days');\n    const showPreviousArrow = previousDay.isAfter(minDate.startOf('year'));\n    const showNextArrow = nextDay.isBefore(maxDate.endOf('year'));\n\n    return (\n      <div className='yearLabel'>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => {showPreviousArrow && selectDay(moment(selectedDay).add(-1, 'days'))}}\n        />\n        { moment(selectedDay).format('dddd, MMMM DD YYYY') }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showNextArrow && selectDay(moment(selectedDay).add(1, 'days'))}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.barChart.selectedDay\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n\n    current.interrupt();\n\n    current.transition()\n      .attr('fill', '#6595ec');\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter.attr('fill', '#6595ec');\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('data-tip', d => `Time - ${d.data}:00 <br> Occurrences - ${d.occurrences}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hover', (d, i) => i === this.state.hoverIndex)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', '#6595ec')\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    const rect = current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nexport default Bars;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale);\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={`translate(0,${this.props.plotHeight - 50})`}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale).ticks(this.props.nrOfTicks).tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\n\nimport Card from '../widget/Card';\n\nimport DayLabel from './DayLabel';\nimport Bars from './Bars';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\n\nimport './BarChart.scss';\n\nclass BarChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1,\n      isChecked: false,\n      width: document.getElementById('card').clientWidth - props.margin.left - props.margin.right\n    };\n    window.addEventListener('resize', this.resize().bind(this));\n  }\n\n  resize() {\n    let t;\n\n    return event => {\n      if (t !== false) {\n        clearTimeout(t);\n      }\n      t = setTimeout(() => {\n        const state = Object.assign(this.state, {\n          width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n        });\n        this.setState(state);\n      }, 100);\n    };\n  }\n\n  updateScale = props => {\n    const data = props.data;\n\n    const xScale = d3.scaleBand();\n    const yScale = d3.scaleLinear().nice();\n\n    const xDomain = [...Array(24).keys()].map(key => key + 1);\n    const yDomain = [0, d3.max(Object.values(data))];\n\n    xScale\n      .domain(xDomain)\n      .range([0, this.state.width])\n      .paddingInner(props.paddingInner)\n      .paddingOuter(props.paddingOuter);\n\n    yScale\n      .domain(yDomain)\n      .range([props.height - props.margin.top - props.margin.bottom, 0]);\n\n    return {xScale, yScale};\n  };\n\n  updatePlotSize = props => {\n    const plotWidth = this.state.width - (props.margin.left + props.margin.right);\n    const plotHeight = props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  // renderAxis = nrOfTicks => {\n  //   const xAxis = d3.axisBottom(this.state.xScale);\n  //   const yAxis = d3.axisLeft(this.state.yScale).ticks(nrOfTicks).tickFormat(d3.format('d'));\n  //   d3.select(this.refs.xAxis)\n  //     .call(xAxis);\n  //   d3.select(this.refs.yAxis)\n  //     .call(yAxis);\n  // };\n  //\n  // componentDidMount() {\n  //   const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  //   const width = this.refs.barChart.clientWidth - margin.left - margin.right;\n  //   const height = this.refs.barChart.clientHeight - margin.top - margin.bottom;\n  //   const occurrences = this.props.allDays[this.props.selectedDay];\n  //   const max = d3.max(Object.values(occurrences));\n  //   const nrOfTicks = max < 10 ? max : max / 2;\n  //   let obj = {};\n  //   for (let i = 1; i <= 24; i++) {\n  //     obj[i] = occurrences[i] || 0\n  //   }\n  //   this.setState({\n  //     margin,\n  //     width,\n  //     height,\n  //     xScale: d3.scaleBand().padding(0.1)\n  //       .domain(Object.keys(obj))\n  //       .range([0, width]),\n  //     yScale: d3.scaleLinear()\n  //       .domain([0, max])\n  //       .range([height, 0])\n  //   }, () => {\n  //     this.renderAxis(nrOfTicks);\n  //   });\n  // }\n\n  // componentDidUpdate() {\n  //   this.renderAxis();\n  //   ReactTooltip.rebuild();\n  //   // let line = d3.selectAll('.line');\n  //   // if (line.node()) {\n  //   //   const totalLength = line.node().getTotalLength();\n  //   //   line\n  //   //     .attr('stroke-dasharray', totalLength)\n  //   //     .attr('stroke-dashoffset', totalLength)\n  //   //     .attr('stroke-width', 6)\n  //   //     .attr('stroke', '#7888BF')\n  //   //     .transition()\n  //   //     .duration(3000)\n  //   //     .attr('stroke-width', 0)\n  //   //     .attr('stroke-dashoffset', 0);\n  //   // }\n  //   // let area = d3.selectAll('.area');\n  //   // area\n  //   //   .attr('transform', 'translate(0,300)')\n  //   //   .transition()\n  //   //   .duration(3000)\n  //   //   .attr('transform', 'translate(0,0)')\n  // }\n\n\n  render() {\n    // const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n    //\n    // const occurrences = this.props.allDays[this.props.selectedDay];\n    //\n    // const transform = `translate(${margin.left},${margin.top})`;\n    //\n    //\n    // const svgHeight = 300;\n    //\n    // const startDate = moment(this.props.selectedDay).isoWeekday(1);\n    // const endDate = moment(this.props.selectedDay).isoWeekday(8);\n    // let days = [];\n    // let day = startDate;\n    // while (day.isBefore(endDate)) {\n    //   days.push(day.toDate());\n    //   day = day.clone().add(1, 'd');\n    // }\n    // const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n    //\n    // const weekArray = Object.keys(this.props.data).filter(key => formattedDays.includes(key));\n    // let weekInsights = weekArray.reduce((acc, item) => {\n    //   acc.push({ day: item, occurrences: this.props.dayInsights[item] });\n    //   return acc;\n    // }, []);\n    // weekInsights = weekInsights.map(week =>\n    //   week.occurrences.map(item => {\n    //     const m = moment(`${week.day} ${item}`);\n    //     return m.minute() || m.second() || m.millisecond()\n    //       ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n    //       : parseInt(m.startOf('hour').format('HH'))\n    //   })\n    // );\n    //\n    // const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    //   acc[item] = (acc[item] || 0) + 1;\n    //   return acc;\n    // }, {});\n    //\n    // let weekObj = {};\n    // for (let i = 1; i <= 24; i++) {\n    //   weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i]/7).toFixed(2) : 0\n    // }\n    //\n    // const max = d3.max(Object.values(occurrences));\n    //\n    // let obj = {};\n    // for (let i = 1; i <= 24; i++) {\n    //   obj[i] = occurrences[i] || 0\n    // }\n    //\n    // const xScale = d3.scaleBand().padding(0.1)\n    //   .domain(Object.keys(obj))\n    //   .range([0, this.state.width]);\n    // const yScale = d3.scaleLinear()\n    //   .domain([0, max])\n    //   .range([this.state.height, 0]);\n    //\n    // // define the area\n    // const area = d3.area()\n    //   .x(function(d) { return xScale(d)+25; })\n    //   .y0(svgHeight - margin.top - margin.bottom)\n    //   .y1(function(d) { return yScale(weekObj[d]) || 0; })\n    //   .curve(d3.curveCardinal);\n    //\n    // const valueline = d3.line()\n    //   .x(function(d) { return xScale(d)+25; })\n    //   .y(function(d) { return yScale(weekObj[d]); })\n    //   .curve(d3.curveCardinal);\n    //\n    const onCheckboxChange = () => {\n      this.setState({\n        isChecked: !this.state.isChecked\n      })\n    };\n\n    const { xScale, yScale } =  this.updateScale(this.props);\n    const { plotWidth, plotHeight } = this.updatePlotSize(this.props);\n\n    const max = d3.max(Object.values(this.props.data));\n    const nrOfTicks = max < 10 ? max : max / 2;\n\n    const metaData = {\n      xScale,\n      yScale,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(this.props.data).map((item, i) => {\n        return {\n          id: i,\n          data: item,\n          x: xScale(item),\n          y: yScale(this.props.data[item]),\n          width: xScale.bandwidth(),\n          height: plotHeight - yScale(this.props.data[item]) - this.props.margin.top - this.props.margin.bottom,\n          occurrences: this.props.data[item]\n        };\n      })\n    };\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n    return (\n      <Card>\n        <DayLabel selectedDay={this.props.selectedDay} />\n          /*\n          <span className='checkbox' onClick={onCheckboxChange}>\n            Show week overview <input type='checkbox' checked={this.state.isChecked} defaultChecked={false} onChange={onCheckboxChange}/>\n          </span>\n          */\n        <div className='barChart'>\n          <svg width='100%' height={this.props.height} ref='barChart'>\n            <g transform={transform} width={plotWidth} height={plotHeight}>\n              <XAxis {...metaData} transform={`translate(0,${plotHeight})`}/>\n              <YAxis {...metaData} />\n              <Bars {...metaData} {...plotData} />\n            </g>\n          </svg>\n          <ReactTooltip id='rectTooltip' multiline class='tooltipx'/>\n        </div>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(BarChart);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, uploadFile, setDatasetName, showSpinner, showEmptyContainer } from '../reducers/app';\nimport { showCalendar } from '../reducers/calendar';\nimport { showBarChart } from '../reducers/barChart';\n\nimport { parseDayInsights } from '../helpers/parser';\n\nimport Heatmap from './calendar/Heatmap';\nimport BarChart from './bar-chart/BarChart';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd.csv';\nimport dataset4 from '../data/data.csv';\n\nimport { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showEmptyContainer(false);\n    props.showCalendar(false);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = false;\n\n  // whyDidYouUpdate(React);\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        {\n          showDropzone &&\n          <section>\n          <p>Upload file</p>\n          <Dropzone\n            accept='text/csv'\n            onDrop={onDrop}\n          >\n            {({getRootProps, getInputProps, isDragActive}) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n                >\n                  <input {...getInputProps()} />\n                  {\n                    !!files.length\n                      ? <span className='file-name'>\n                          <i className=\"fa fa-remove\" />\n                        {files}\n                        </span>\n                      : <span className='upload-message'>\n                          <i className=\"fa fa-upload\" />\n                            Drag & Drop your file or <u>Browse</u>\n                        </span>\n                  }\n                </div>\n              )\n            }}\n          </Dropzone>\n        </section>\n        }\n        <section>\n          <p>Select dataset</p>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </section>\n        {\n          props.isCalendarVisible &&\n          <section>\n            <p>Calendar heatmap</p>\n            <Heatmap />\n          </section>\n        }\n        {\n          props.isBarChartVisible &&\n          <section>\n            <p>Day overview</p>\n            <BarChart\n              data={props.allDays[props.selectedDay]}\n              margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n              height={300}\n              paddingInner={0.1}\n              paddingOuter={0.1}\n            />\n          </section>\n        }\n        {\n          props.isEmptyContainerVisible &&\n          <section>\n            <p>Day overview</p>\n            <div className='container'>\n              <div className='dayLabel'>\n                { moment(props.selectedDay).format('dddd, MMMM DD YYYY') }\n              </div>\n              <div className='emptyString'>No data recorded</div>\n            </div>\n          </section>\n        }\n        {\n          props.isSpinnerVisible &&\n          <div className='spinner'>\n            <div className=\"double-bounce1\" />\n            <div className=\"double-bounce2\" />\n          </div>\n        }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD'),\n  files: state.app.files,\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showEmptyContainer: val => dispatch(showEmptyContainer(val)),\n  showSpinner: val => dispatch(showSpinner(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.9f78b97e.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd.553964c1.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";"],"sourceRoot":""}