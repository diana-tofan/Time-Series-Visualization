{"version":3,"sources":["data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd.csv","data/data.csv","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/calendar/Heatmap.js","components/bar-chart/BarChart.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTimestamp","timeStamp","dateString","split","timeString","slice","moment","concat","toDate","parseTime","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","push","reduce","r","a","Object","create","parseData","replace","timestamp","x","obj","initialState","minDate","maxDate","dayInsights","datasetName","files","showTooltip","isSpinnerVisible","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","isRadialChartVisible","selectedDay","isBarChartVisible","showBarChart","val","type","rootReducer","combineReducers","app","state","arguments","length","undefined","action","moments","keys","d","objectSpread","min","max","calendar","radialChart","barChart","weekArray","Array","apply","_","i","startOf","isoWeekday","DayLabels","react_default","createElement","className","day","key","connect","dispatch","changeYear","props","previousYear","subtract","nextYear","add","showPreviousArrow","showNextArrow","classNames","disabled","onClick","selectDay","isCurrentDay","getDay","week","d3","month","count","Date","getFullYear","getMonth","find","setHours","filter","j","value","Math","toConsumableArray","fillColor","current-day","width","height","rx","ry","fill","y","data-tip","data-for","weeksInMonth","m","floor","offset","monthName","days","lastDay","endOf","firstDay","extraSpace","textAnchor","calendar_Day","target","size","months","range","parseInt","monthsArr","memo","index","hidden","calendar_Month","Heatmap","this","id","ref","calendar_DayLabels","calendar_YearLabel","calendar_Year","react_tooltip_dist_default","multiline","class","React","Component","BarChart","renderAxis","hours","unshift","_this","roundedHours","hour","minute","second","millisecond","occurrences","acc","values","margin","refs","clientWidth","clientHeight","midnight","xScale","domain","xAxis","ticks","tickFormat","yScale","yAxis","call","transform","padding","fontSize","uploadFile","showCalendar","setData","setDatasetName","showSpinner","file","name","bytes","log","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","forEach","reader","FileReader","onload","result","parsed","onabort","console","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","assign","dropzone--isActive","dropzone--isDone","dist_default","options","placeholder","onChange","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","bar_chart_BarChart","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1520f2a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.9f78b97e.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd.553964c1.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","import moment from 'moment';\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, Object.create(null));\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport default parseData;\n","import parseData, { getDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\n\nconst initialState = {\n  data: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  datasetName: '',\n  files: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\n","const SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","const SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isBarChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport moment from 'moment';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = () =>\n  <div className='dayLabelsContainer'>\n    <span>\n      {\n        weekArray.map(day =>\n          <text\n            key={day}\n            className='dayLabels'\n          >\n            {day}\n          </text>\n        )\n      }\n    </span>\n  </div>;\n\nexport default DayLabels;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='yearLabel'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport { selectDay, showBarChart } from '../../reducers/barChart';\n\nconst Day = props => {\n  const cellMargin = props.cellMargin,\n    cellSize = props.cellSize;\n  const d = props.day;\n\n  let isCurrentDay = false;\n  if (moment(d).format('DD-MM-YY') === moment().format('DD-MM-YY')) {\n    isCurrentDay = true;\n  }\n\n  const day = d => (d.getDay() + 6) % 7,\n    week = d3.timeFormat('%W');\n\n  const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n  const month = props.month;\n\n  const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n  let filters = days.map(d =>\n    Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n  );\n  const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n  const item = Object.keys(props.data).find(key =>\n    new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n  const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n  const fillColor = !!props.data[item] ? d3.interpolatePurples(value) : '#ececec';\n\n  const showBarChart = () => {\n    props.selectDay(d);\n    props.showBarChart(true);\n  };\n  return (\n    <rect\n      key={d}\n      className={classNames('day', {'current-day': isCurrentDay})}\n      width={cellSize}\n      height={cellSize}\n      rx={50}\n      ry={50}\n      fill={fillColor}\n      y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n      x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n      onClick={showBarChart}\n      data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n      data-for='svgTooltip'\n    >\n    </rect>\n  )\n};\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\n\nconst Month = props => {\n  const month = props.month;\n\n  const weeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  const cellMargin = props.cellMargin,\n    cellSize = props.cellSize;\n\n  const monthName = d3.timeFormat('%B');\n\n  const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n  const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n  const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n  let extraSpace = 0;\n  if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n    extraSpace += 10;\n  }\n\n  return (\n    <svg\n      className='month'\n      height={((cellSize * 7) + (cellMargin * 8) + 20)}\n      width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n      key={month}\n    >\n      <g>\n        <text\n          className='month-name'\n          y={(cellSize * 7) + (cellMargin * 8) + 15}\n          x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n          textAnchor='middle'\n        >\n          { monthName(month) }\n        </text>\n        { days.map(d => <Day day={d} month={month} key={d} />) }\n      </g>\n    </svg>\n  )\n};\n\nconst mapStateToProps = state => ({\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nexport default connect(mapStateToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nconst Year = props => {\n  const minDate = props.minDate.format('YYYY-MM-DD'); // new Date(2016, 0, 1);\n  const maxDate = props.maxDate.format('YYYY-MM-DD'); // new Date(2020, 11, 31);\n\n  const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n    new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n  const chunk = (target, size) => {\n    return target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]])\n  };\n  const monthsArr = chunk(months, months.length / 12);\n\n  return (\n    <div>\n      {\n        monthsArr.map((months, i) =>\n          <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n            {\n              months.map(month =>\n                <Month\n                  key={month}\n                  month={month}\n                />\n              )\n            }\n          </div>\n        )\n      }\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\n\nimport '../Spinner.scss';\n\nclass Heatmap extends React.Component {\n  render () {\n    return (\n      this.props.isSpinnerVisible\n        ? <div className='spinner'>\n            <div className=\"double-bounce1\" />\n            <div className=\"double-bounce2\" />\n          </div>\n        : <div id='calendar' ref='calendar'>\n            <DayLabels />\n            <YearLabel />\n            <div className='months'>\n              <Year />\n            </div>\n            <ReactTooltip id='svgTooltip' multiline class='tooltipx'/>\n          </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nexport default connect(mapStateToProps)(Heatmap);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\n\nclass BarChart extends React.Component {\n  renderAxis = () => {\n    let hours = [];\n    for (let i = 0; i < 25; i++) {\n      hours.unshift(moment().subtract(i, 'hours').format('hh'));\n    }\n    const dayInsights = this.props.dayInsights[this.props.selectedDay];\n    const roundedHours = dayInsights && dayInsights.map(hour => {\n        const m = moment(`${this.props.selectedDay} ${hour}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    const max = d3.max(Object.values(occurrences));\n    const nrOfTicks = max < 10 ? max : max / 2;\n    const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n    const width = this.refs.barChart.clientWidth - margin.left - margin.right;\n    const height = this.refs.barChart.clientHeight - margin.top - margin.bottom;\n    const parseTime = d3.timeParse(\"%H:%M\");\n    const midnight = parseTime(\"00:00\"); // \"Mon, 01 Jan 1900 00:00:00 GMT\"\n\n    const xScale = d3.scaleTime()\n      .domain([midnight, d3.timeDay.offset(midnight, 1)])\n      .range([0, width]);\n    const xAxis = d3.axisBottom(xScale).ticks(24).tickFormat(d3.timeFormat('%H'));\n    const yScale = d3.scaleLinear()\n      .domain([0, max])\n      .range([height, 0]);\n    const yAxis = d3.axisLeft(yScale).ticks(max).tickFormat(d3.format('d'));\n    d3.select(this.refs.xAxis)\n      .call(xAxis);\n    d3.select(this.refs.yAxis)\n      .call(yAxis);\n  };\n\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  render() {\n    // let hours = [...Array(24)];\n    // hours = hours.map((hour, i) => moment().subtract(i, 'hours').format('HH'));\n    let hours = [];\n    for (let i = 0; i < 25; i++) {\n      hours.unshift(moment().subtract(i, 'hours').format('HH'));\n    }\n    const margin = { top: 20, right: 20, bottom: 30, left: 40 },\n      x = d3.scaleBand().padding(0.1),\n      y = d3.scaleLinear();\n    const transform = `translate(${margin.left},${margin.top})`;\n    return (\n      <div className='container'>\n        <div className='dayLabel'>\n          { moment(this.props.selectedDay).format('dddd, MMMM DD YYYY') }\n        </div>\n        <div className='barChart'>\n          <svg width='100%' height={500} ref='barChart'>\n            <g transform={transform}>\n              <g className='axis axis-x' transform='translate(0,450)' ref='xAxis' fill='none' fontSize={10} textAnchor='middle' />\n              <g className='axis axis-y' ref='yAxis' />\n             </g>\n          </svg>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(BarChart);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, uploadFile, setDatasetName, showSpinner } from '../reducers/app';\nimport { showCalendar } from '../reducers/calendar';\nimport { showBarChart } from '../reducers/barChart';\n\nimport Heatmap from './calendar/Heatmap';\nimport BarChart from './bar-chart/BarChart';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd.csv';\nimport dataset4 from '../data/data.csv';\n\nconst App = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n      props.showSpinner(false);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const onSelect = item => {\n    const value = item.value;\n    props.setDatasetName(value);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        <section>\n          <p>Upload file</p>\n          <Dropzone\n            accept='text/csv'\n            onDrop={onDrop}\n          >\n            {({getRootProps, getInputProps, isDragActive}) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n                >\n                  <input {...getInputProps()} />\n                  {\n                    !!files.length\n                      ? <span className='file-name'>\n                          <i className=\"fa fa-remove\" />\n                        {files}\n                        </span>\n                      : <span className='upload-message'>\n                          <i className=\"fa fa-upload\" />\n                            Drag & Drop your file or <u>Browse</u>\n                        </span>\n                  }\n                </div>\n              )\n            }}\n          </Dropzone>\n        </section>\n        <section>\n          <p>Select dataset</p>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </section>\n        {\n          props.isCalendarVisible &&\n          <section>\n            <p>Calendar heatmap</p>\n            <Heatmap\n              data={props.data}\n              dayInsights={props.dayInsights}\n            />\n          </section>\n        }\n        {\n          props.isBarChartVisible &&\n          <section>\n            <p>Day overview</p>\n            <BarChart\n              key={props.data}\n            />\n          </section>\n        }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  files: state.app.files,\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  showBarChart: val => dispatch(showBarChart(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}