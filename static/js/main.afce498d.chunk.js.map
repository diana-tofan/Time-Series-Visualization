{"version":3,"sources":["icons/github-logo.svg","icons/pdf-logo.svg","icons/clock.svg","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv","icons/github-logo-hover.svg","icons/pdf-logo-hover.svg","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","helpers/colors.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/widget/Modal.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","components/bar-chart/Container.js","components/radial-chart/RadialChart.js","components/radial-chart/RadialChartContainer.js","components/widget/Upload.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","countOccurrences","arr","reduce","obj","item","getDayInsights","data","newData","map","date","columns","time","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekInsights","week","weekInsights","isoWeekday","toString","allDaysOfWeek","isoWeek","selectedWeek","daysOfWeek","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","getShiftSelectionInsights","shiftSelection","shiftInsights","indexOf","allSelectedDays","selectedDaysObj","selectedDays","selectedDaysInsights","parseDayInsights","days","roundedHours","hour","m","parseInt","startOf","occurrences","getCurrentWeekInsights","selectedDay","Array","from","x","add","includes","weekOccurrences","apply","weekObj","getCurrentMonthInsights","daysInMonth","monthOccurrences","monthObj","contains","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","clone","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","array","toConsumableArray","Set","getExactTimes","selectedHour","exactTimes","parseData","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","showSpinner","type","setMonthInsights","setWeekInsights","setWeekdayInsights","onShiftClick","resetShiftSelection","removeItem","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","selectDay","saveColor","isRadialChartVisible","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","modalData","timeArray","showBarChart","openModal","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","value","radialChart","barChart","DayLabels","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onWeekdayClick","ev","shiftKey","setState","toggle","_this2","weekArray","_","react_default","createElement","className","classNames","bold","onClick","React","Component","connect","dispatch","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","getAverageColor","rgb","g","b","filteredColors","insertMissingColors","daysArray","forEach","find","d3","getValue","year","arrDays","_loop","current","getDaysArrayByMonth","count","Math","showOverview","getAdjacentDayColor","monthVal","Day","isEqual","nextProps","isCurrentWeek","isCurrentMonth","isCurrentWeekday","onDayClick","preventDefault","stopPropagation","formattedDay","previousDay","nextDay","isColorSaved","isPreviousColorSaved","isNextColorSaved","nextState","formatDate","fill","_this$props","isCurrentDay","getDay","Date","setHours","isSelected","interpolateColor","fillColor","getDayColor","showStroke","ref","stroke","strokeWidth","width","height","rx","ry","y","getFullYear","getMonth","data-tip","data-for","Month","showMoreData","requestAnimationFrame","getWeeksInMonth","floor","offset","getChunk","target","size","memo","index","renderMonthOverview","renderWeekOverview","renderDays","renderList","calendar_Day","getWeekIndices","firstDayOfMonth","lastDayOfMonth","weekIndices","currentDay","pop","renderWeekLabels","nrOfWeeks","offsets","textAnchor","monthName","console","log","lastDay","firstDay","extraSpace","endReached","PureComponent","Year","months","range","monthsArr","hidden","calendar_Month","Card","id","children","Section","onKeyDown","tabIndex","title","Heatmap","selectAll","addEventListener","onScreenResize","components_widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","dist_default","multiline","class","DayLabel","pickDay","pickWeek","pickMonth","pickWeekday","getUnit","getString","selectedItem","select","unit","showArrows","previousItem","nextItem","prev","next","previous","isSameOrAfter","isSameOrBefore","XAxis","renderAxis","xAxis","xScale","ticks","tickFormat","refs","transition","transform","fontSize","YAxis","yAxis","yScale","nrOfTicks","Bars","renderBars","bars","datum","plotData","interrupt","attr","hoverIndex","darker","enter","append","classed","plotHeight","on","exit","remove","merge","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","xScaleArea","getPosition","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","text","invert","formatTime","hide","style","setLineOpacity","plotWidth","_this$props2","margin","insights","area","y0","top","bottom","y1","curve","x1","x2","y2","spreadMethod","stopColor","stopOpacity","strokeDasharray","opacity","pointerEvents","onMouseLeave","onMouseOver","onMouseMove","nativeEvent","offsetX","offsetY","Modal","hideModal","convertRange","r1","r2","display-block","display-none","src","clock","alt","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","left","right","getData","getInsights","showAreaChart","updateScale","nice","ceil","yDomain","midnight","domain","updatePlotSize","_this3","removeEventListener","ReactTooltip","rebuild","_this4","_this$updateScale","_this$updatePlotSize","metaData","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","components_widget_Modal","barChartProps","bar_chart_DayLabel","bar_chart_BarChart","RadialChart","normalize","getPercentage","toggleFadeCss","blocks","out","visible","renderArcs","svg","sort","defaultValue","label","arcs","innerRadius","arcSize","outerRadius","arcsGrey","pieData","arc","object","pie","gText","j","attrTween","startAngle","endAngle","t","each","labelObj","centroidText","centroid","components_radial_chart_RadialChart","getDatasetOverview","uploadFile","setData","setDatasetName","showCalendar","resetColors","file","name","bytes","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","react_dropdown_dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","href","rel","githubLogo","currentTarget","githubLogoHover","pdfLogo","pdfLogoHover","widget_Upload","calendar_Heatmap","bar_chart_Container","radial_chart_RadialChartContainer","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.afce498d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.7338f8ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo.eb8752b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.d668b059.svg\";","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","module.exports = __webpack_public_path__ + \"static/media/github-logo-hover.b2035e53.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo-hover.eebd97c5.svg\";","import moment from 'moment';\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx').utc()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekInsights = (week, dayInsights, allDays) => {\n  const weekInsights = Object.keys(dayInsights)\n    .filter(key => {\n      return moment(key).isoWeekday(1).format('w') === week.toString()\n    })\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekInsights).reduce((acc, key) => {\n    acc.push(weekInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfWeek = Object.keys(allDays)\n    .filter(key => moment(key).isoWeek() === week)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfWeek).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedWeek: week,\n    daysOfWeek: mergedDays,\n    weekInsights: mergedData.flat()\n  };\n};\n\nexport const getDatasetOverview = (allDays, data, dayInsights) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .reduce((obj, key) => {\n      const weekday = moment(key, 'YYYY-MM-DD').format('ddd');\n      obj[weekday] = obj[weekday] || [];\n      obj[weekday].push(dayInsights[key]);\n      return obj;\n    }, {});\n  return Object.keys(weekdayInsights)\n    .reduce((obj, key) => {\n      obj[key] = weekdayInsights[key].flat().length;\n      return obj;\n    }, {});\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const getShiftSelectionInsights = (shiftSelection, data, dayInsights, allDays) => {\n  const shiftInsights = Object.keys(dayInsights)\n    .filter(key => shiftSelection.indexOf(moment(key).format('MMMM')) > -1 ||\n      shiftSelection.indexOf(moment(key).isoWeek()) > -1 ||\n      shiftSelection.indexOf(moment(key).format('ddd')) > -1 ||\n      shiftSelection.indexOf(key) > -1 ||\n      shiftSelection.indexOf('all') > -1)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n\n  const mergedData = Object.keys(shiftInsights).reduce((acc, key) => {\n    acc.push(shiftInsights[key]);\n    return acc;\n  }, []);\n\n  const allSelectedDays = Object.keys(allDays)\n    .filter(key => shiftSelection.indexOf(moment(key).format('MMMM')) > -1 ||\n      shiftSelection.indexOf(moment(key).isoWeek()) > -1 ||\n      shiftSelection.indexOf(moment(key).format('ddd')) > -1 ||\n      shiftSelection.indexOf(key) > -1 ||\n      shiftSelection.indexOf('all') > -1)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n\n  const mergedDays = Object.values(allSelectedDays).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  let selectedDaysObj = {};\n  for (let i = 0; i < 24; i++) {\n    selectedDaysObj[i] = mergedDays[i] ? Number(mergedDays[i] / shiftSelection.length).toFixed(2) : 0\n  }\n\n  return {\n    shiftSelection,\n    selectedDays: mergedDays,\n    selectedDaysInsights: mergedData.flat(),\n    selectedDaysObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return parseInt(m.startOf('hour').format('HH'));\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 0; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: 7}, (x, i) => moment(selectedDay).startOf('isoWeek').add(i, 'days').format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => days.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let weekObj = {};\n\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: moment(selectedDay).daysInMonth()}, (x, i) => moment(selectedDay).startOf('isoMonth').add(i, 'days').format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => days.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n  return monthObj;\n};\n\n\nconst contains = (item, arr) => {\n  let i = arr.length;\n  while (i--) {\n    if (arr[i] === item) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getCurrentWeek = (selectedDay, data) => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = (selectedDay, data) => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = (selectedDay, data) => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    contains(moment(dayItem1).format('YYYY-MM-DD'), Object.keys(data)) && daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  const array = [...new Set(daysArr.concat(daysArr1))];\n\n  return {\n    daysArr: array,\n    length: array.length\n  }\n};\n\nexport const getExactTimes = (selectedHour, arr) => {\n  const exactTimes = arr.filter(i => moment(i, 'HH:mm:ss').format('HH') === moment(selectedHour.data, 'H').format('HH'));\n  return countOccurrences(exactTimes.map(i => moment(i, 'HH:mm:ss').format('HH:mm')));\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_WEEK_INSIGHTS = 'SET_WEEK_INSIGHTS';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\nconst ON_SHIFT_CLICK = 'ON_SHIFT_CLICK';\nconst REMOVE_ITEM = 'REMOVE_ITEM';\nconst RESET_SHIFT_SELECTION = 'RESET_SHIFT_SELECTION';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  weekInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedWeek: null,\n  selectedMonth: null,\n  shiftSelection: [],\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  daysOfWeek: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    case SET_WEEK_INSIGHTS:\n      return {\n        ...state,\n        weekInsights: action.val.weekInsights,\n        daysOfWeek: action.val.daysOfWeek,\n        selectedWeek: action.val.selectedWeek\n      };\n    case ON_SHIFT_CLICK:\n      return {\n        ...state,\n        shiftSelection: [...new Set(state.shiftSelection.concat(action.val))]\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        shiftSelection: state.shiftSelection.filter(item => item !== action.val)\n      };\n    case RESET_SHIFT_SELECTION:\n      return {\n        ...state,\n        shiftSelection: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekInsights = val => ({ type: SET_WEEK_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\nexport const onShiftClick = val => ({ type: ON_SHIFT_CLICK, val });\nexport const resetShiftSelection = val => ({ type: RESET_SHIFT_SELECTION, val });\nexport const removeItem = val => ({ type: REMOVE_ITEM, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\nconst RESET_COLORS = 'RESET_COLORS';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      const data = action.val && action.val.data;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay, data),\n        currentMonth: getCurrentMonth(selectedDay, data),\n        currentWeekdays: getCurrentWeekdays(selectedDay, data)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: [...new Set(state.colors.concat({\n            day: action.val.day,\n            value: action.val.value\n        }))]\n      });\n    case RESET_COLORS:\n      return {\n      ...state,\n        colors: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\nexport const resetColors = val => ({ type: RESET_COLORS, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { getExactTimes } from '../helpers/parser';\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst OPEN_MODAL = 'OPEN_MODAL';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false,\n  modalData: null,\n  timeArray: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalData: action.val && action.val.data,\n        timeArray: action.val ? getExactTimes(action.val.data, action.val.arr) : []\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const openModal = val => ({ type: OPEN_MODAL, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport {setWeekdayInsights, setMonthInsights, onShiftClick, resetShiftSelection, removeItem} from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nclass DayLabels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  onWeekdayClick = (ev, day) => {\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      });\n      this.state.toggle ? this.props.onShiftClick(day) : this.props.removeItem(day);\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      const weekdayInsights = getWeekdayInsights(day, this.props.dayInsights, this.props.allDays);\n      this.props.setWeekdayInsights({\n        selectedWeekday: weekdayInsights.selectedWeekday,\n        daysOfWeekday: weekdayInsights.daysOfWeekday,\n        weekdayInsights: weekdayInsights.weekdayInsights\n      });\n      this.props.showBarChart(true);\n      this.setState({\n        toggle: false\n      });\n    }\n  };\n\n  render() {\n    const weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n      return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n    });\n\n    return (\n      <div className='day-labels-container'>\n        {\n          weekArray.map(day =>\n            <text\n              key={day}\n              className={classNames('day-labels', {'bold': this.props.selectedWeekday === day})}\n              onClick={ev => this.onWeekdayClick(ev, day)}\n            >\n              {day}\n            </text>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\nconst getDaysArrayByMonth = (month, year, data) => {\n  let daysInMonth = moment(month, 'M').daysInMonth();\n  const arrDays = [];\n\n  while(daysInMonth) {\n    const current = moment(month, 'M').date(daysInMonth).format(`${year}-MM-DD`);\n    Object.keys(data).find(key => key === current) && arrDays.push(current);\n    daysInMonth--;\n  }\n  return arrDays;\n};\n\nexport const getAverageColor = props => {\n  let rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  let filteredColors = [];\n  const insertMissingColors = daysArray => {\n    daysArray.forEach(day => {\n      if (!filteredColors.find(color => moment(color.day, 'DD-MM-YYYY').format('YYYY-MM-DD') === day)) {\n        const value = d3.color(d3.interpolateOranges(getValue(props.data, day, moment(day).startOf('month'))));\n        filteredColors.push({\n          day,\n          value\n        });\n        // props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value });\n      }\n    })\n  };\n  if (props.selectedWeek) {\n    filteredColors = props.colors.filter(color => moment(color.day).isoWeek() === props.selectedWeek && d3.rgb(color));\n    const daysArray = Object.keys(props.allDays).filter(key => moment(key).isoWeek() === props.selectedWeek);\n    insertMissingColors(daysArray);\n  }\n\n  if (props.selectedMonth) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('M') === props.selectedMonth && d3.rgb(color));\n    const daysArray = getDaysArrayByMonth(props.selectedMonth, moment(props.minDate).format('YYYY'), props.data);\n    insertMissingColors(daysArray);\n  }\n\n  if (props.selectedWeekday) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('ddd') === props.selectedWeekday && d3.rgb(color));\n    const daysArray = Object.keys(props.allDays).filter(key => moment(key).isoWeekday() === moment(props.selectedWeekday, 'ddd').isoWeekday());\n    insertMissingColors(daysArray);\n  }\n\n  filteredColors.forEach(color => {\n    rgb.r += color.value.r;\n    rgb.g += color.value.g;\n    rgb.b += color.value.b;\n  });\n\n  return d3.rgb(rgb.r / filteredColors.length, rgb.g / filteredColors.length, rgb.b / filteredColors.length);\n};\n\nconst normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\nconst getValue = (data, item, month) => {\n  const daysArr = Array.from({length: moment(month).daysInMonth()}, (x, i) => moment(month).startOf('month').add(i, 'days').format('YYYY-MM-DD'));\n\n  const count = Object.keys(data).reduce((acc, item) => {\n    daysArr.includes(item) && acc.push(data[item]);\n    return acc;\n  }, []);\n\n  return !!data[item] && normalize(data[item], Math.max(...count), Math.min(...count));\n};\n\nconst contains = (arr, showOverview, item) => {\n  if (arr && showOverview) {\n    let i = arr.length;\n    while (i--) {\n      if (arr[i] === item) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\nexport const getAdjacentDayColor = (props, day, monthVal) => {\n  const item = Object.keys(props.data).find(key => moment(key, 'YYYY-MM-DD').format('DD-MM-YYYY') === day);\n  const month = monthVal ? monthVal : props.month;\n  if (item) {\n    const value = getValue(props.data, item, month);\n    return d3.color(d3.interpolateOranges(value));\n  }\n  return '#ececec';\n};\n\nexport const getDayColor = (props, isCurrentDay) => {\n  const item = Object.keys(props.data).find(key => new Date(key).setHours(0,0,0,0) === props.day.setHours(0,0,0,0));\n\n  if (item) {\n    const day = moment(props.day).format('DD-MM-YYYY');\n\n    const isCurrentWeek = contains(props.currentWeek, props.showWeekOverview, day) ||\n      (props.selectedWeek && props.selectedWeek === moment(props.day).isoWeek()) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).isoWeek()) > -1);\n    const isCurrentMonth = contains(props.currentMonth, props.showMonthOverview, day) ||\n      (props.selectedMonth && props.selectedMonth === moment(props.day).format('M')) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).format('MMMM')) > -1);\n    const isCurrentWeekday = contains(props.currentWeekdays.daysArr, props.showWeekdayOverview, day) ||\n      (props.selectedWeekday && props.selectedWeekday === moment(props.day).format('ddd')) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).format('ddd')) > -1);\n    const isSelected = !!props.shiftSelection.length &&\n      (props.shiftSelection.indexOf(moment(props.day).format('YYYY-MM-DD')) > -1 ||\n        props.shiftSelection.indexOf('all') > -1);\n\n    const value = getValue(props.data, item, props.month);\n    const interpolateColor = (isCurrentDay || isSelected || isCurrentWeek || isCurrentMonth || isCurrentWeekday) ? d3.interpolateOranges(value) : d3.interpolatePurples(value);\n\n    return {\n      value,\n      count: props.data[item],\n      fillColor: interpolateColor\n    }\n  }\n\n  return {\n    fillColor: '#ececec',\n    count: 0\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {\n  onShiftClick, removeItem,\n  resetShiftSelection,\n  setMonthInsights,\n  setWeekdayInsights,\n  setWeekInsights\n} from '../../reducers/app';\nimport {getAdjacentDayColor, getDayColor} from '../../helpers/colors';\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.selectedWeek !== nextProps.selectedWeek ||\n      this.isEqual(nextProps) ||\n      this.props.fill !== nextProps.fill ||\n      this.props.shiftSelection !== nextProps.shiftSelection ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  isEqual = nextProps => {\n    const isCurrentWeek = (nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentMonth = (nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentWeekday = (nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    return isCurrentWeek || isCurrentMonth || isCurrentWeekday;\n  };\n\n  onDayClick = (ev, day, color) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      });\n      const formattedDay = moment(day).format('YYYY-MM-DD');\n      this.state.toggle ? this.props.onShiftClick(formattedDay) : this.props.removeItem(formattedDay);\n    } else {\n      this.props.setMonthInsights({\n        selectedMonth: null,\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setWeekInsights({\n        selectedWeek: null,\n        daysOfWeek: [],\n        weekInsights: []\n      });\n      this.props.resetShiftSelection();\n      this.props.selectDay({ day, color: d3.interpolateOranges(color.value), data: this.props.data });\n      this.props.showBarChart(true);\n      const previousDay = moment(day).subtract(1, 'd').format('DD-MM-YYYY');\n      const nextDay = moment(day).add(1, 'd').format('DD-MM-YYYY');\n      const isColorSaved = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n      const isPreviousColorSaved = this.props.colors.find(color => color.day === previousDay);\n      const isNextColorSaved =this.props.colors.find(color => color.day === nextDay);\n      !isColorSaved && this.props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value: d3.color(d3.interpolateOranges(color.value)) });\n      !isPreviousColorSaved && this.props.saveColor({ day: previousDay, value: getAdjacentDayColor(this.props, previousDay) });\n      !isNextColorSaved && this.props.saveColor({ day: nextDay, value: getAdjacentDayColor(this.props, nextDay) });\n    }\n  };\n\n  render() {\n    const props = this.props;\n    const { cellMargin, cellSize } = this.props;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const color = getDayColor(props, isCurrentDay);\n\n    const isSelected = !!props.shiftSelection.length &&\n      (moment(d).format('M') === props.selectedMonth ||\n        moment(d).isoWeek() === props.selectedWeek ||\n        moment(d).format('ddd') === props.selectedWeekday ||\n        moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY'));\n\n    const showStroke = isCurrentDay || isSelected;\n\n    return (\n      <rect ref='day'\n        key={d}\n        className='day fade-in'\n        stroke={showStroke ? '#000' : ''}\n        strokeWidth={showStroke ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={color.fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin + 20}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={ev => this.onDayClick(ev, d, color)}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${color.count}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeek: state.app.selectedWeek,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights, getWeekInsights } from '../../helpers/parser';\nimport { setWeekInsights, setMonthInsights, setWeekdayInsights, onShiftClick, resetShiftSelection, removeItem } from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\n\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1,\n      toggle: false\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    let { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth() + 1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count + 2 }));\n    }\n  };\n\n  getWeeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  renderMonthOverview = (ev, month) => {\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      });\n      this.state.toggle ? this.props.onShiftClick(month) : this.props.removeItem(month);\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setWeekInsights({\n        selectedWeek: null,\n        daysOfWeek: [],\n        weekInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), this.props.dayInsights, this.props.allDays);\n      this.props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      this.props.showBarChart(true);\n    }\n  };\n\n  renderWeekOverview = (ev, week) => {\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      });\n      this.state.toggle ? this.props.onShiftClick(week) : this.props.removeItem(week);\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setMonthInsights({\n        selectedMonth: null,\n        daysOfMonth: [],\n        monthInsights: []\n      });\n      const weekInsights = getWeekInsights(week, this.props.dayInsights, this.props.allDays);\n      this.props.setWeekInsights({\n        selectedWeek: weekInsights.selectedWeek,\n        daysOfWeek: weekInsights.daysOfWeek,\n        weekInsights: weekInsights.weekInsights\n      });\n      this.props.showBarChart(true);\n    }\n  };\n\n  renderDays = (renderList, isCurrentMonth) =>\n    renderList.map(d =>\n      <Day fill={isCurrentMonth || moment(d).format('ddd') === this.props.selectedWeekday}\n           day={d} month={this.props.month}\n           key={d} />\n      );\n\n  getWeekIndices = month => {\n    const firstDayOfMonth = moment(month).startOf('month');\n    const lastDayOfMonth = moment(month).endOf('month');\n    let weekIndices = [];\n\n    let currentDay = moment(firstDayOfMonth);\n    weekIndices.push(currentDay.isoWeek());\n\n    while(currentDay.month() === firstDayOfMonth.month()) {\n      currentDay.add(1, 'weeks');\n      weekIndices.push(currentDay.isoWeek());\n    }\n\n    if (currentDay.isoWeek() !== lastDayOfMonth.isoWeek()) {\n      weekIndices.pop();\n    }\n\n    return weekIndices;\n  };\n\n  renderWeekLabels = (cellSize, cellMargin, month) => {\n    const arr = this.getWeekIndices(month);\n    const nrOfWeeks = arr.length;\n    let offsets = [0.1, 0.3, 0.5, 0.7, 0.9, 1.1].slice(0, nrOfWeeks);\n    return arr.map((week, i) =>\n      <text\n        className={classNames('week slow-fade-in', {'bold': this.props.selectedWeek === week})}\n        key={week}\n        y={cellSize}\n        x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month)))) * offsets[i]}\n        textAnchor='middle'\n        onClick={ev => this.renderWeekOverview(ev, week)}\n      >\n        { week }\n      </text>\n    )\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    console.log(props)\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 50)}\n        width={(cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          {\n          endReached &&\n            <text\n              className={classNames('month-name', 'slow-fade-in', {'bold': isCurrentMonth})}\n              y={(cellSize * 7) + (cellMargin * 8) + 35}\n              x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 1))) / 2}\n              textAnchor='middle'\n              onClick={ev => this.renderMonthOverview(ev, monthName(month))}\n            >\n              { monthName(month) }\n            </text>\n          }\n          { endReached && this.renderWeekLabels(cellSize, cellMargin, month) }\n          {\n            this.renderDays(renderList, isCurrentMonth)\n          }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    const monthsArr = this.getChunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper'>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\n\nimport './Section.scss';\n\nconst Section = props =>\n  <section className={`section ${props.className || ''}`} onKeyDown={props.onKeyDown} tabIndex={props.tabIndex}>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport {onShiftClick, showSpinner} from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  selectAll = ev => {\n    if (ev.key === 'A' && ev.shiftKey) {\n      this.props.onShiftClick('all');\n    }\n  };\n\n  render () {\n    return (\n      <Section title='Calendar heatmap' tabIndex={0} onKeyDown={ev => this.selectAll(ev)}>\n        <Card>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n          </div>\n          <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val)),\n  onShiftClick: val => dispatch(onShiftClick(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {saveColor, selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights, setWeekInsights} from '../../reducers/app';\nimport {getMonthInsights, getWeekdayInsights, getWeekInsights} from '../../helpers/parser';\nimport * as d3 from 'd3';\nimport {getAdjacentDayColor} from \"../../helpers/colors\";\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeek !== this.props.selectedWeek ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  pickDay = day => {\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.setWeekInsights({\n      weekInsights: [],\n      daysOfWeek: [],\n      selectedWeek: null\n    });\n    const color = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n    let value = color && d3.color(color.value);\n    if (!value) {\n      value = getAdjacentDayColor(this.props, moment(day).format('DD-MM-YYYY'), moment(day).startOf('month'));\n      this.props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value });\n    }\n    this.props.selectDay({ day, color: value, data: this.props.data });\n    this.props.showBarChart(true);\n  };\n\n  pickWeek = week => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    const weekInsights = getWeekInsights(week, this.props.dayInsights, this.props.allDays);\n    this.props.setWeekInsights({\n      selectedWeek: weekInsights.selectedWeek,\n      daysOfWeek: weekInsights.daysOfWeek,\n      weekInsights: weekInsights.weekInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  pickMonth = month => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.setWeekInsights({\n      weekInsights: [],\n      daysOfWeek: [],\n      selectedWeek: null\n    });\n    const monthInsights = getMonthInsights(month.toString(), this.props.dayInsights, this.props.allDays);\n    this.props.setMonthInsights({\n      selectedMonth: monthInsights.selectedMonth,\n      daysOfMonth: monthInsights.daysOfMonth,\n      monthInsights: monthInsights.monthInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  pickWeekday = weekday => {\n    this.props.selectDay(null);\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    const weekdayInsights = getWeekdayInsights(weekday, this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.data);\n    this.props.setWeekdayInsights({\n      weekdayInsights: weekdayInsights.weekdayInsights,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      selectedWeekday: weekdayInsights.selectedWeekday\n    });\n    this.props.showBarChart(true);\n  };\n\n  getUnit = () => {\n    if (this.props.selectedMonth) {\n      return 'months';\n    } else if (this.props.selectedWeekday || this.props.selectedWeek) {\n      return 'weeks';\n    } else {\n      return 'days';\n    }\n  };\n\n  getString = selectedItem => {\n    if (this.props.selectedMonth) {\n      return moment(this.props.selectedMonth, 'M').format('MMMM');\n    } else if (this.props.selectedWeek) {\n      return `Week ${this.props.selectedWeek}`;\n    } else if (this.props.selectedWeekday) {\n      return `${moment(this.props.selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      return moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n  };\n\n  select = (selectedItem, val, unit) => {\n    if (this.props.selectedDay) {\n      this.pickDay(moment(selectedItem).add(val, unit));\n    } else if (this.props.selectedWeek) {\n      this.pickWeek(parseInt(this.props.selectedWeek) + val);\n    } else if (this.props.selectedMonth) {\n      this.pickMonth(parseInt(selectedItem) + val);\n    } else if (this.props.selectedWeekday) {\n      const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n      this.pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + val)).format('ddd'));\n    }\n  };\n\n  showArrows = (selectedItem, unit, minDate, maxDate) => {\n    if (selectedItem) {\n      const previousItem = moment(selectedItem).subtract(1, unit);\n      const nextItem = moment(selectedItem).add(1, unit);\n      const prev = previousItem.format(`${moment(minDate).year()}-MM-DD`);\n      const min = minDate.startOf('year').format('YYYY-MM-DD');\n      const next = nextItem.format(`${moment(maxDate).year()}-MM-DD`);\n      const max = maxDate.startOf('year').format('YYYY-MM-DD');\n      return {\n        previous: moment(prev).isSameOrAfter(moment(min)),\n        next: moment(next).isSameOrBefore(moment(max))\n      }\n    }\n  };\n\n  render() {\n    const { minDate, maxDate, selectedMonth, selectedDay, selectedWeekday, selectedWeek } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay || selectedWeek;\n    const unit = this.getUnit();\n\n    const showArrows = this.showArrows(selectedItem, unit, minDate, maxDate);\n    const showPreviousArrow = showArrows && showArrows.previous;\n    const showNextArrow = showArrows && showArrows.next;\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}\n           onKeyDown={ev =>\n             (ev.key === 'ArrowLeft' && this.select(selectedItem, -1, unit)) ||\n             (ev.key === 'ArrowRight' && this.select(selectedItem, 1, unit))\n           }>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => showPreviousArrow && this.select(selectedItem, -1, unit)}\n        />\n        { this.getString(selectedItem) }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showNextArrow && this.select(selectedItem, 1, unit)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale)\n      .ticks(24)\n      .tickFormat(d3.timeFormat('%H'));\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale)\n      .ticks(this.props.nrOfTicks)\n      .tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { openModal } from '../../reducers/barChart';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  openModal = d => {\n    this.props.openModal({ data: d, arr: this.props.dayInsights[this.props.selectedDay] });\n  };\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n\n    current.interrupt();\n\n    const color = this.props.color;\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('id', (d, i) => `bar-${i}`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => this.openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `${d.occurrences} occurrences<br>between ${moment(d.data, 'hh').format('H:mm')} - ${moment(parseInt(d.data)+1, 'hh').format('H:mm')}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bars);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport {openModal} from \"../../reducers/barChart\";\n\nclass AreaChart extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { xScaleArea, yScale, plotHeight, color, plotData, openModal, dayInsights, selectedDay } = this.props;\n\n    const getPosition = i => {\n      const lines = document.getElementsByClassName('line');\n      let pos;\n\n      let beginning = 0,\n        end = lines && lines[i].getTotalLength(),\n        target = null;\n\n      while (end){\n        target = Math.floor((beginning + end) / 2);\n        pos = lines[i].getPointAtLength(target);\n        if ((target === end || target === beginning) && pos.x !== mouseX) {\n          break;\n        }\n        if (pos.x > mouseX)      end = target;\n        else if (pos.x < mouseX) beginning = target;\n        else break; //position found\n      }\n\n      d3.select('.line-text')\n        .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n      return pos;\n    };\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const formatTime = d3.timeFormat('%H');\n    const parseTime = d3.timeParse('%H');\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        const pos = getPosition(i);\n        const x = xScaleArea.invert(pos.x);\n\n        d3.selectAll('.bar')\n          .attr('fill', d =>  formatTime(parseTime(d.data)) === formatTime(x) ? d3.rgb(color).darker() : color);\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n\n    const hide = () => {\n      d3.select('.bar-text')\n        .style('opacity', 0);\n      d3.select('.bar-circle')\n        .style('opacity', 0);\n    };\n\n    d3.selectAll('.mouse-per-bar')\n      .attr('transform', function(d, i) {\n\n        const bars = plotData.map(i => moment(i.data, 'H').format('HH'));\n\n        const x = xScaleArea.invert(getPosition(i).x);\n\n        if (bars.indexOf(formatTime(x)) > -1) {\n          const item = plotData.find(i => moment(i.data, 'H').format('HH') === formatTime(x));\n          d3.select('.mouse-over-effects')\n            .style('cursor', 'pointer')\n            .on('click', () => {\n              openModal({ data: item, arr: dayInsights[moment(selectedDay).format('YYYY-MM-DD')] });\n              hide();\n            });\n\n          d3.select('.bar-text')\n            .style('opacity', 1)\n            .text(item.occurrences);\n          d3.select('.bar-circle')\n            .style('opacity', 1);\n          return `translate(${mouseX},${item.y - 3.8})`\n        }\n        d3.select('.mouse-over-effects')\n          .style('cursor', 'auto')\n          .on('click', null);\n        hide();\n      });\n  };\n\n  setLineOpacity = val => {\n    d3.select('.mouse-line')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-circle')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-text')\n      .style('opacity', val);\n  };\n\n  render() {\n    const { xScaleArea, plotWidth, plotHeight, margin, yScale, insights } = this.props;\n\n    const parseTime = d3.timeParse('%H:%M');\n\n    const area = d3.area()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(insights[d]))\n      .curve(d3.curveMonotoneX);\n\n    const line = d3.line()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y(d => yScale(insights[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(insights))}\n        />\n        <path className='line shadow'\n              d={line(Object.keys(insights))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#777'\n            strokeWidth={1}\n            strokeDasharray='3,3'\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              className='line-circle'\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='line-text'\n              transform='translate(10,3)'\n              fontSize={14}\n            />\n          </g>\n          <g className='mouse-per-bar'>\n            <circle\n              className='bar-circle'\n              r={5}\n              fill={d3.rgb(this.props.color).darker()}\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='bar-text'\n              transform='translate(-17,3)'\n              fontSize={14}\n              opacity={0}\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            transform='translate(0,0)'\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => this.setLineOpacity('0')}\n            onMouseOver={() => this.setLineOpacity('1')}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './Modal.scss';\n\nimport { openModal } from \"../../reducers/barChart\";\nimport moment from 'moment';\nimport clock from \"../../icons/clock.svg\";\n\nclass Modal extends React.PureComponent {\n\n  hideModal = () => {\n    this.props.openModal(null);\n  };\n\n  convertRange = (val, r1, r2 )=> (val - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\n  render() {\n    const { selectedDay, modalData, timeArray } = this.props;\n      return (\n      <div className={classNames('modal', 'fade-in', {'display-block': modalData}, {'display-none': !modalData})} onClick={this.hideModal}>\n        <section className='modal-main' onClick={ev => ev.stopPropagation()}>\n          <i className='fas fa-times' onClick={this.hideModal} />\n          <div className='modal-title'>{selectedDay}</div>\n          {modalData && <div>between {moment(modalData.data, 'hh').format('H:mm')} - {moment(parseInt(modalData.data)+1, 'hh').format('H:mm')}</div>}\n          <div className='clock-icon'>\n            <img src={clock} alt='' width={50} height={50} />\n          </div>\n          <div className='time-container'>\n            {\n              Object.keys(timeArray).map(key =>\n                  <span className='time' style={{ fontSize: this.convertRange(timeArray[key], [1,20], [15,50]) }}>\n              {key}\n            </span>\n              )\n            }\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  modalData: state.barChart.modalData,\n  selectedDay: moment(state.calendar.selectedDay).format('dddd, MMMM DD YYYY'),\n  timeArray: state.barChart.timeArray\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.onReset();\n  };\n  const renderCheckboxes = () =>\n    <div className='checkboxes'>\n       <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n         Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n         Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n         Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n       </span>\n    </div>;\n\n  return (\n    <div className='footer year-label'>\n      { renderCheckboxes() }\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights, getShiftSelectionInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport Modal from '../widget/Modal';\nimport { showBarChart, showMonthOverview, showWeekdayOverview, showWeekOverview } from '../../reducers/barChart';\nimport {saveColor} from '../../reducers/calendar';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\nimport {getAverageColor} from \"../../helpers/colors\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: (document.getElementById('card').clientWidth - props.margin.left - props.margin.right) * 0.66\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    this.setState({\n      width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n    });\n  };\n\n  getData = () => {\n    if (!!this.props.weekInsights.length) {\n      return this.props.daysOfWeek;\n    }\n    if (!!this.props.monthInsights.length) {\n      return this.props.daysOfMonth;\n    }\n    if (!!this.props.weekdayInsights.length) {\n      return this.props.daysOfWeekday;\n    }\n    return this.props.plotData;\n  };\n\n  getInsights = () => {\n    if (this.props.isWeekOverviewChecked) {\n      return getCurrentWeekInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isMonthOverviewChecked) {\n      return getCurrentMonthInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      return getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.data).weekdayObj;\n    }\n    if (!!this.props.shiftSelection.length) {\n      return getShiftSelectionInsights(this.props.shiftSelection, this.props.data, this.props.dayInsights, this.props.allDays).selectedDaysObj\n    }\n  };\n\n  showAreaChart = () => this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked || !!this.props.shiftSelection.length;\n\n  updateScale = data => {\n    const xScale = d3.scaleTime();\n    const xScaleArea = d3.scaleTime();\n    const yScale = d3.scaleLinear().nice();\n\n    const insights = this.getInsights();\n\n    const max = insights ?\n      Math.ceil(Math.max(d3.max(Object.values(insights).map(i => parseInt(i))), d3.max(Object.values(data).map(i => parseInt(i))))) :\n      d3.max(Object.values(data));\n\n    const yDomain = [0, this.showAreaChart() ? max + max / 20 : max];\n\n    const parseTime = d3.timeParse('%H:%M');\n    const midnight = parseTime('00:00');\n\n    xScale\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    xScaleArea\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([this.props.height - this.props.margin.top - this.props.margin.bottom, 0]);\n\n    return {xScale, yScale, xScaleArea};\n  };\n\n  updatePlotSize = () => {\n    const plotWidth = this.state.width - (this.props.margin.left + this.props.margin.right);\n    const plotHeight = this.props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    const data = this.getData();\n\n    const { xScale, yScale, xScaleArea } =  this.updateScale(data);\n    const { plotWidth, plotHeight } = this.updatePlotSize();\n\n    const max = d3.max(Object.values(data));\n    const nrOfTicks = max < 10 ? max : (max > 20 ? max / 4 : max / 2);\n\n    const parseTime = d3.timeParse('%H');\n\n    const metaData = {\n      xScale,\n      yScale,\n      xScaleArea,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n    const color = this.props.color || getAverageColor(this.props);\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight - 50})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} color={color}/>\n            {this.showAreaChart() &&\n            <AreaChart {...metaData} {...plotData} margin={this.props.margin} insights={this.getInsights()} color={color}/>}\n          </g>\n        </svg>\n        <Footer />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n        <Modal />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfWeek: state.app.daysOfWeek,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedWeek: state.app.selectedWeek,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection,\n  selectedDays: state.app.selectedDays,\n  data: state.app.data,\n  allDays: state.app.allDays,\n  minDate: state.app.minDate,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[props.selectedDay] ||\n    !!props.weekInsights.length ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    plotData: props.data,\n    margin: props.margin,\n    height: props.height\n  };\n\n  return (\n    <Section className='section-two-thirds'>\n      <Card>\n        <DayLabel selectedDay={props.selectedDay} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport './RadialChart.scss';\n\nclass RadialChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true\n    }\n  }\n\n  componentDidMount() {\n    this.renderArcs();\n  }\n\n  componentDidUpdate() {\n    this.renderArcs();\n  }\n\n  normalize = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n  };\n\n  getPercentage = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (80 - 5) * ((val - min) / (max - min)) + 5;\n  };\n\n  toggleFadeCss = blocks => {\n    blocks\n      .style('opacity', undefined)\n      .classed({ out: this.state.visible });\n    this.setState({\n      visible: !this.state.visible\n    })\n  };\n\n  renderArcs = () => {\n    const svg = d3.select(this.refs.radialChart);\n\n    const width = 350;\n    const arcSize = (5 * width / 100);\n    const innerRadius = arcSize * 2;\n\n    const keysArray = Object.keys(this.props.data)\n      .sort((a, b) => moment(a, 'ddd').isoWeekday() - moment(b, 'ddd').isoWeekday());\n\n    const data = keysArray.map(key => {\n      return {\n        defaultValue: this.props.data[key],\n        value: this.getPercentage(this.props.data[key]),\n        label: key,\n        color: d3.interpolateBlues(this.normalize(this.props.data[key]))\n      }\n    });\n\n    const arcs = data.map((obj, i) => {\n      return d3.arc().innerRadius(i * arcSize + innerRadius).outerRadius((i + 1) * arcSize - (width / 100) + innerRadius);\n    });\n\n    const arcsGrey = data.map(function (obj, i) {\n      return d3.arc().innerRadius(i * arcSize + (innerRadius + ((arcSize / 2) - 2))).outerRadius((i + 1) * arcSize - ((arcSize / 2)) + (innerRadius));\n    });\n\n    const pieData = data.map(function (obj, i) {\n      return [\n        {value: obj.value * 0.75, arc: arcs[i], object: obj},\n        {value: (100 - obj.value) * 0.75, arc: arcsGrey[i], object: obj},\n        {value: 100 * 0.25, arc: arcs[i], object: obj}];\n    });\n\n    const pie = d3.pie()\n      .sort(null)\n      .value(d => d.value);\n\n    const g = svg.selectAll('g').data(pieData)\n      .enter()\n      .append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    const gText = svg.selectAll('g.textClass').data([{}]).enter()\n      .append('g')\n      .classed('textClass', true)\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    g.selectAll('path').data(function (d) {\n      return pie(d);\n    })\n      .enter()\n      .append('path')\n      .attr('id', function (d, i) {\n        if (i === 0) {\n          return 'Arc' + d.data.object.label;\n        }\n        if (i === 1) {\n          return 'Text' + d.data.object.label;\n        }\n      })\n      .style('cursor', 'pointer')\n      .on('mouseover', function (d, i) {\n        if (i === 0) {\n          const id = d3.select(this).attr('id');\n          d3.selectAll('path')\n            .transition()\n            .filter(function () {\n              return d3.select(this).attr('id') !== id;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n\n          d3.selectAll('.textClass text')\n            .transition()\n            .filter(function () {\n              return d3.select(this).text() !== d.data.object.label;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n        }\n      })\n      .on('mouseleave', (d, i) => {\n        d3.selectAll('path').attr('opacity', 1);\n        d3.selectAll('.textClass text').attr('opacity', 1);\n      })\n      .attr('fill', (d, i) => i === 0 ? d.data.object.color : i === 1 ? '#F1F1F1' : 'none')\n      .transition()\n      .duration(1000)\n        .attrTween('d', function (d) {\n          const i = d3.interpolate(d.startAngle+0.1, d.endAngle);\n          return function(t) {\n            d.endAngle = i(t);\n            return d.data.arc(d);\n          }\n      });\n\n    svg.selectAll('g').each(function (d, index) {\n      const el = d3.select(this);\n      el.selectAll('path').each(function (r, i) {\n        if (i === 1) {\n          const labelObj = r.data.object;\n          g.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', '#777')\n            .attr('dominant-baseline', 'central')\n            .append('textPath')\n            .attr('textLength', function (d, i) {\n              return 0;\n            })\n            .attr('xlink:href', '#Text' + labelObj.label)\n            .attr('startOffset', '5')\n            .attr('dy', '-3em')\n            .transition()\n            .delay(1000)\n              .text(labelObj.defaultValue);\n        }\n        if (i === 0) {\n          const centroidText = r.data.arc.centroid({\n            startAngle: r.startAngle,\n            endAngle: r.startAngle\n          });\n          const labelObj = r.data.object;\n          gText.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', () => labelObj.color)\n            .attr('font-weight', '600')\n            .transition()\n            .delay(1000)\n              .text(labelObj.label)\n            .attr('transform', 'translate(' + (centroidText[0] - ((1.5 * width) / 100)) + ',' + (centroidText[1] + ') rotate(' + (180) + ')'))\n            .attr('dominant-baseline', 'central');\n        }\n      })\n    });\n  };\n\n  render() {\n    return (\n      <svg className='radial-chart' ref='radialChart' width='100%' height={350} />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(RadialChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../bar-chart/BarChart.scss';\nimport RadialChart from \"./RadialChart\";\nimport { getDatasetOverview} from \"../../helpers/parser\";\n\nconst RadialChartContainer = props => {\n  const getInsights = () => getDatasetOverview(props.allDays, props.data, props.dayInsights);\n\n  return (\n    <Section className='section-one-third'>\n      <Card>\n        <div className='year-label dayTitle dataset-overview-title'>Weekdays vs. weekends</div>\n        <div className='barChart'>\n          <RadialChart data={getInsights()} />\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  data: state.app.data,\n  allDays: state.app.allDays\n});\n\nexport default connect(mapStateToProps)(RadialChartContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekInsights, setWeekdayInsights, uploadFile } from '../../reducers/app';\nimport { showCalendar, selectDay, resetColors } from '../../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../../reducers/barChart';\n\nimport Section from './Section';\n\nimport dataset1 from '../../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../../data/itch_tbc.csv';\nimport dataset3 from '../../data/ptsd_filtered.csv';\nimport dataset4 from '../../data/data.csv';\n\nconst Upload = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.setWeekInsights({\n      selectedWeek: null,\n      daysOfWeek: [],\n      weekInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n    props.resetColors();\n  };\n\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n\n  return (\n    <Section title='Select dataset' className='upload-section'>\n      <div className='upload-dataset'>\n        <Dropdown\n          className='dropdown'\n          options={options}\n          placeholder='Choose...'\n          value={props.datasetName}\n          onChange={onSelect}\n        />\n        <Dropzone\n          accept='text/csv'\n          onDrop={onDrop}\n        >\n          {({getRootProps, getInputProps, isDragActive}) => {\n            return (\n              <div\n                {...getRootProps()}\n                className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n              >\n                <input {...getInputProps()} />\n                {\n                  !!files.length\n                    ? <span className='file-name'>\n                          <i className='fa fa-remove' />\n                      {files}\n                        </span>\n                    : <span className='upload-message'>\n                          <i className='fa fa-upload' />\n                            Drag & Drop\n                        </span>\n                }\n              </div>\n            )\n          }}\n        </Dropzone>\n      </div>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files,\n  datasetName: state.app.datasetName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  resetColors: val => dispatch(resetColors(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport RadialChartContainer from './radial-chart/RadialChartContainer';\nimport Upload from './widget/Upload';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport githubLogo from '../icons/github-logo.svg';\nimport githubLogoHover from '../icons/github-logo-hover.svg';\nimport pdfLogo from '../icons/pdf-logo.svg';\nimport pdfLogoHover from '../icons/pdf-logo-hover.svg';\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      data={props.allDays[props.selectedDay]}\n      margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n      height={300}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n        <div className='icons'>\n          <a href='https://github.com/diana-tofan/Time-Series-Visualization' target='_blank' rel='noopener noreferrer'>\n            <img className='github-icon' src={githubLogo} alt='Github' onMouseOver={ev => ev.currentTarget.src = githubLogoHover} onMouseLeave={ev => ev.currentTarget.src = githubLogo} />\n          </a>\n          <a href='https://www.overleaf.com/read/vptjwvyzjnvg' target='_blank' rel='noopener noreferrer'>\n            <img className='pdf-icon' src={pdfLogo} alt='Report' onMouseOver={ev => ev.currentTarget.src = pdfLogoHover} onMouseLeave={ev => ev.currentTarget.src = pdfLogo} />\n          </a>\n        </div>\n      </header>\n      <div className='content'>\n        <Upload />\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible &&\n          <div>\n            <p>Day overview</p>\n            <div className='charts-container'>\n              { renderBarChart() }\n              { props.isBarChartVisible && <RadialChartContainer /> }\n            </div>\n          </div>\n        }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}