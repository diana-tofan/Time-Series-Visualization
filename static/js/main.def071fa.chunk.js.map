{"version":3,"sources":["helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","components/bar-chart/Container.js","components/widget/DragAndDrop.js","components/App.js","serviceWorker.js","index.js","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv"],"names":["parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","reduce","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","obj","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","isoWeekday","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","parseDayInsights","days","roundedHours","hour","m","minute","second","millisecond","parseInt","add","startOf","occurrences","d3","getCurrentWeekInsights","selectedDay","startDate","endDate","isBefore","toDate","clone","formattedDays","weekInsights","includes","week","weekOccurrences","apply","weekObj","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","parseData","x","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","setData","type","showSpinner","setMonthInsights","setWeekdayInsights","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","showCalendar","selectDay","isRadialChartVisible","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","showBarChart","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","value","radialChart","barChart","weekArray","Array","_","connect","dispatch","props","react_default","createElement","className","classNames","bold","onClick","onWeekdayClick","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","Day","nextProps","nextState","formatDate","isCurrentWeek","this","isCurrentMonth","isCurrentWeekday","fill","isCurrentDay","getDay","count","Date","getFullYear","getMonth","find","setHours","j","Math","toConsumableArray","interpolateColor","fillColor","saveColor","stroke","strokeWidth","width","height","rx","ry","y","ev","preventDefault","stopPropagation","data-tip","data-for","React","Component","Month","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","console","log","weeksInMonth","floor","offset","monthName","lastDay","firstDay","extraSpace","renderList","textAnchor","renderMonthOverview","calendar_Day","PureComponent","Year","target","size","months","range","monthsArr","memo","index","hidden","calendar_Month","Card","id","children","Section","title","Heatmap","addEventListener","onScreenResize","widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","react_tooltip_dist_default","multiline","class","DayLabel","_this$props","selectedItem","unit","previousItem","nextItem","isAfter","pickDay","pickMonth","toString","string","tabIndex","onKeyDown","XAxis","renderAxis","xAxis","xScale","refs","transition","transform","ref","fontSize","YAxis","yAxis","yScale","ticks","nrOfTicks","tickFormat","Bars","renderBars","current","bars","datum","plotData","selectAll","interrupt","attr","hoverIndex","darker","enter","append","classed","plotHeight","on","modalOpen","openModal","exit","remove","merge","select","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","text","invert","circleHoverIndex","domainX","domainY","plotWidth","_this2","_this$props2","margin","area","y0","top","bottom","y1","curve","valueline","x1","x2","y2","spreadMethod","stopColor","stopOpacity","opacity","pointerEvents","onMouseLeave","style","onMouseOver","onMouseMove","nativeEvent","offsetX","offsetY","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","left","right","updateScale","newXScale","nice","currentWeekInsights","dataArr","ceil","xDomain","yDomain","domain","paddingInner","paddingOuter","updatePlotSize","_this3","removeEventListener","ReactTooltip","rebuild","_this4","insights","_this$updateScale","_this$updatePlotSize","metaData","bandwidth","currentMonthInsights","monthOccurrences","monthObj","getCurrentMonthInsights","currentWeekdayInsights","showAreaChart","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","barChartProps","bar_chart_DayLabel","bar_chart_BarChart","uploadFile","file","name","bytes","round","pow","bytesToSize","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","forEach","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","isEmptyContainerVisible","setDatasetName","renderHeatmap","dataset","then","catch","err","widget_DragAndDrop","dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","bar_chart_Container","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.def071fa.chunk.js","sourcesContent":["import moment from 'moment';\nimport * as d3 from \"d3\";\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    // debugger\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    const max = d3.max(Object.values(occurrences));\n    const nrOfTicks = max < 10 ? max : max / 2;\n    let obj = {};\n    for (let i = 1; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    // acc.push(occurrences);\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).isoWeekday(1);\n  const endDate = moment(selectedDay).isoWeekday(8);\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let weekObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).startOf('month');\n  const endDate = moment(selectedDay).endOf('month');\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n\n  return monthObj;\n};\n\nexport const getCurrentWeek = selectedDay => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = selectedDay => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = selectedDay => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  return {\n    daysArr: daysArr.concat(daysArr1),\n    length: daysArr.concat(daysArr1).length\n  }\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedMonth: null,\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay),\n        currentMonth: getCurrentMonth(selectedDay),\n        currentWeekdays: getCurrentWeekdays(selectedDay)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: state.colors.concat({\n          day: action.val.day,\n          value: action.val.value\n        })\n      });\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","const SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { setWeekdayInsights, setMonthInsights } from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = props => {\n  const onWeekdayClick = day => {\n    props.selectDay(null);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    const weekdayInsights = getWeekdayInsights(day, props.dayInsights, props.allDays);\n    props.setWeekdayInsights({\n      selectedWeekday: weekdayInsights.selectedWeekday,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      weekdayInsights: weekdayInsights.weekdayInsights\n    });\n    props.showBarChart(true);\n  };\n  return (\n    <div className='day-labels-container'>\n    {\n      weekArray.map(day =>\n        <text\n          key={day}\n          className={classNames('day-labels', {'bold': props.selectedWeekday === day})}\n          onClick={() => onWeekdayClick(day)}\n        >\n          {day}\n        </text>\n      )\n    }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    const isCurrentWeek = nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY')) ||\n      this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY'));\n    const isCurrentMonth = nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY')) ||\n      this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY'));\n    const isCurrentWeekday = nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY')) ||\n      this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY'));\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.fill !== nextProps.fill ||\n      isCurrentWeek ||\n      isCurrentMonth ||\n      isCurrentWeekday ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  componentDidUpdate() {\n    // d3.select('.day.fill')\n    //   .transition()\n    //   .duration(1000)\n  }\n\n  render() {\n    const props = this.props;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const month = props.month;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(props.data).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n    const isCurrentWeek = props.currentWeek && props.currentWeek.includes(moment(d).format('DD-MM-YYYY'));\n    const isCurrentMonth = props.currentMonth && props.currentMonth.includes(moment(d).format('DD-MM-YYYY'));\n    const isCurrentWeekday = props.currentWeekdays && props.currentWeekdays.daysArr.includes(moment(d).format('DD-MM-YYYY'));\n\n    const item = Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    const interpolateColor = ((isCurrentWeek && props.showWeekOverview) || (isCurrentMonth && props.showMonthOverview) || (isCurrentWeekday && props.showWeekdayOverview))\n      ? d3.interpolateOranges(value) : d3.interpolatePurples(value);\n    let fillColor = !!props.data[item] ? (isCurrentDay ? d3.interpolateOranges(value) : interpolateColor) : '#ececec';\n\n    value && props.saveColor({ day: moment(d).format('DD-MM-YYYY'), value: d3.interpolateOranges(value) });\n\n    const onDayClick = ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      props.selectDay({ day: d, color: d3.interpolateOranges(value) });\n      props.showBarChart(true);\n    };\n    return (\n      <rect\n        key={d}\n        className='day'\n        stroke={isCurrentDay ? '#000' : ''}\n        strokeWidth={isCurrentDay ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={onDayClick}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeekday: state.app.selectedWeekday,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights } from '../../helpers/parser';\nimport {setMonthInsights, setWeekdayInsights} from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    const { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count+1 }));\n    } else {\n      console.log('now show day and month labels');\n    }\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const renderMonthOverview = month => {\n      props.selectDay(null);\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), props.dayInsights, props.allDays);\n      props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      props.showBarChart(true);\n    };\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className={classNames('month-name', {'bold': isCurrentMonth})}\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n            onClick={() => renderMonthOverview(monthName(month))}\n          >\n            { monthName(month) }\n          </text>\n          { renderList.map(d => <Day fill={isCurrentMonth || moment(d).format('ddd') === props.selectedWeekday} day={d} month={month} key={d} />) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper'>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\n\nconst Section = props =>\n  <section>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n          </div>\n          <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport { getMonthInsights } from '../../helpers/parser';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  render() {\n    const { minDate, maxDate, selectDay, showBarChart, setMonthInsights, setWeekdayInsights,\n      selectedMonth, selectedDay, dayInsights, allDays, selectedWeekday, colors } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay;\n    let unit = '';\n    if (selectedMonth) {\n      unit = 'months';\n    } else if (selectedWeekday) {\n      unit = 'weeks';\n    } else {\n      unit = 'days';\n    }\n    const previousItem = selectedMonth ? selectedMonth-1 : moment(selectedItem).subtract(1, unit);\n    const nextItem = selectedMonth ? parseInt(selectedMonth)+1 : moment(selectedItem).add(1, unit);\n    const showPreviousArrow = selectedMonth ? moment(previousItem, 'M').isAfter(minDate.startOf('year')) : previousItem.isAfter(minDate.startOf('year'));\n    const showNextArrow = selectedMonth ? true : nextItem.isBefore(maxDate.endOf('year'));\n    const pickDay = day => {\n      setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: [],\n        selectedMonth: null\n      });\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const color = colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n      selectDay({ day, color: color.value });\n      showBarChart(true);\n    };\n    const pickMonth = month => {\n      selectDay(null);\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(month.toString(), dayInsights, allDays);\n      setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      showBarChart(true);\n    };\n    let string = '';\n    if (selectedMonth) {\n      string = moment(selectedMonth, 'M').format('MMMM');\n    } else if (selectedWeekday) {\n      string = `${moment(selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      string = moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}\n           onKeyDown={ev => {\n             if (ev) {\n               if (ev.key === 'ArrowLeft') {\n                 !selectedMonth ? pickDay(moment(selectedItem).add(-1, unit)) : pickMonth(selectedItem - 1)\n               }\n               if (ev.key === 'ArrowRight') {\n                 !selectedMonth ? pickDay(moment(selectedItem).add(1, unit)) : pickMonth(parseInt(selectedItem) + 1)\n               }\n             }\n      }}>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => {showPreviousArrow && selectDay(moment(selectedItem).add(-1, unit))}}\n        />\n        { string }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showNextArrow && selectDay(moment(selectedItem).add(1, unit))}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale);\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale).ticks(this.props.nrOfTicks).tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1,\n      modalOpen: null\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n    const openModal = d => {\n      this.setState({\n        modalOpen: d\n      });\n    };\n\n    current.interrupt();\n\n    const color = this.props.color; //'#6595ec';\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `Time - ${d.data}:00 <br> Occurrences - ${d.occurrences}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nexport default Bars;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1,\n      showTooltip: false,\n      domainX: null,\n      domainY: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { yScale, plotHeight } = this.props;\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const lines = document.getElementsByClassName('line');\n    let pos;\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        let beginning = 0,\n          end = lines && lines[i].getTotalLength(),\n          target = null;\n\n        while (end){\n          target = Math.floor((beginning + end) / 2);\n          pos = lines[i].getPointAtLength(target);\n          if ((target === end || target === beginning) && pos.x !== mouseX) {\n            break;\n          }\n          if (pos.x > mouseX)      end = target;\n          else if (pos.x < mouseX) beginning = target;\n          else break; //position found\n        }\n\n        d3.select(this).select('text')\n          .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n  };\n\n  render() {\n    const { xScale, plotWidth, plotHeight, margin, yScale } = this.props;\n\n    const weekObj = this.props.weekInsights;\n\n    // define the area\n    const area = d3.area()\n      .x(d => xScale(d))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    const valueline = d3.line()\n      .x((d, i) => xScale(i))\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(weekObj))}\n        />\n        <path className='line shadow'\n              d={valueline(Object.keys(weekObj))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#000'\n            strokeWidth={1}\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              transform='translate(10,3)'\n              fontSize={14}\n              // fill='#777'\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => {\n              d3.select('.mouse-line')\n                .style('opacity', '0');\n              d3.selectAll('.mouse-per-line circle')\n                .style('opacity', '0');\n              d3.selectAll('.mouse-per-line text')\n                .style('opacity', '0');\n            }}\n            onMouseOver={() => {\n              d3.select('.mouse-line')\n                .style('opacity', '1');\n              d3.selectAll('.mouse-per-line circle')\n                .style('opacity', '1');\n              d3.selectAll('.mouse-per-line text')\n                .style('opacity', '1');\n            }}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  data: state.app.data\n});\n\n\nexport default connect(mapStateToProps)(AreaChart);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.onReset();\n  };\n\n  return (\n    <div className='footer year-label'>\n      <div className='checkboxes'>\n           <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n             Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n             Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n             Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n           </span>\n      </div>\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview\n} from '../../reducers/barChart';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: document.getElementById('card').clientWidth - props.margin.left - props.margin.right\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    this.setState({\n      width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n    });\n  };\n\n  updateScale = (props, data) => {\n    const xScale = d3.scaleBand();\n    const newXScale = d3.scaleLinear();\n    const yScale = d3.scaleLinear().nice();\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n\n    const max = currentWeekInsights ?\n      Math.ceil(Math.max(d3.max(Object.values(currentWeekInsights)), d3.max(Object.values(data)))) :\n      d3.max(Object.values(data));\n\n    const xDomain = [...Array(24).keys()];\n    const yDomain = [0, max];\n\n    xScale\n      .domain(xDomain)\n      .range([0, this.state.width - props.margin.right])\n      .paddingInner(props.paddingInner)\n      .paddingOuter(props.paddingOuter);\n\n    newXScale\n      .domain([0, 23])\n      .range([0, this.state.width - props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([props.height - props.margin.top - props.margin.bottom, 0]);\n\n    return {xScale, yScale, newXScale};\n  };\n\n  updatePlotSize = props => {\n    const plotWidth = this.state.width - (props.margin.left + props.margin.right);\n    const plotHeight = props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    let data = [];\n    if (!!this.props.monthInsights.length) {\n      data = this.props.daysOfMonth;\n    } else if (!!this.props.weekdayInsights.length) {\n      data = this.props.daysOfWeekday;\n    } else {\n      data = this.props.data;\n    }\n    const { xScale, yScale, newXScale } =  this.updateScale(this.props, data);\n    const { plotWidth, plotHeight } = this.updatePlotSize(this.props);\n\n    const max = d3.max(Object.values(data));\n    const nrOfTicks = max < 10 ? max : max / 2;\n\n    const metaData = {\n      xScale,\n      yScale,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(item),\n        y: yScale(data[item]),\n        width: xScale.bandwidth(),\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentMonthInsights = this.props.isMonthOverviewChecked && getCurrentMonthInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentWeekdayInsights = this.props.isWeekdayOverviewChecked && getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.dataArr);\n\n    let insights;\n    if (this.props.isWeekOverviewChecked) {\n      insights = currentWeekInsights;\n    }\n    if (this.props.isMonthOverviewChecked) {\n      insights = currentMonthInsights;\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      insights = currentWeekdayInsights.weekdayObj;\n    }\n\n    const showAreaChart = this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked;\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight-50})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} color={this.props.color} />\n            {\n              showAreaChart &&\n              <AreaChart\n                xScale={newXScale}\n                yScale={yScale}\n                plotWidth={plotWidth}\n                plotHeight={plotHeight}\n                margin={this.props.margin}\n                weekInsights={insights}\n                occurrences={data}\n                transform={transform}\n              />\n            }\n          </g>\n        </svg>\n        <Footer />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  dataArr: state.app.data,\n  allDays: state.app.allDays,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[props.selectedDay] ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    data: props.data,\n    margin: props.margin,\n    height: props.height,\n    paddingInner: props.paddingInner,\n    paddingOuter: props.paddingOuter\n  };\n\n  return (\n    <Section title='Day overview'>\n      <Card>\n        <DayLabel selectedDay={props.selectedDay} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Section from '../widget/Section';\n\nimport { setData, uploadFile } from '../../reducers/app';\nimport { showCalendar } from '../../reducers/calendar';\n\nconst DragAndDrop = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  return (\n    <Section title='Upload file'>\n      <Dropzone\n        accept='text/csv'\n        onDrop={onDrop}\n      >\n        {({getRootProps, getInputProps, isDragActive}) => {\n          return (\n            <div\n              {...getRootProps()}\n              className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n            >\n              <input {...getInputProps()} />\n              {\n                !!files.length\n                  ? <span className='file-name'>\n                            <i className='fa fa-remove' />\n                    {files}\n                          </span>\n                  : <span className='upload-message'>\n                            <i className='fa fa-upload' />\n                              Drag & Drop your file or <u>Browse</u>\n                          </span>\n              }\n            </div>\n          )\n        }}\n      </Dropzone>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  showCalendar: val => dispatch(showCalendar(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDrop);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekdayInsights } from '../reducers/app';\nimport { showCalendar, selectDay } from '../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../reducers/barChart';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport DragAndDrop from './widget/DragAndDrop';\nimport Section from './widget/Section';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd_filtered.csv';\nimport dataset4 from '../data/data.csv';\n\nimport { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = true;\n\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      data={props.allDays[props.selectedDay]}\n      margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n      height={300}\n      paddingInner={0.2}\n      paddingOuter={0.1}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        { showDropzone && <DragAndDrop /> }\n        <Section title='Select dataset'>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </Section>\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible && renderBarChart() }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";"],"sourceRoot":""}