{"version":3,"sources":["data/data.csv","reducers/mortgage.js","reducers/index.js","helpers/parser.js","components/calendar/DayLabels.js","components/calendar/Tooltip.js","components/calendar/YearLabel.js","components/calendar/Heatmap.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","initial","rate","years","monthlyOverpayment","rootReducer","combineReducers","mortgage","state","arguments","length","undefined","action","type","Object","objectSpread","val","parseTimestamp","timeStamp","dateString","split","timeString","slice","moment","concat","toDate","parseTime","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","push","reduce","r","a","create","parseData","replace","timestamp","x","obj","weekArray","Array","apply","_","i","startOf","isoWeekday","DayLabels","react_default","createElement","day","key","className","Tooltip","props","showTooltip","style","count","YearLabel","previousYear","minDate","subtract","nextYear","maxDate","add","showPreviousArrow","showNextArrow","classNames","disabled","onClick","changeYear","Heatmap","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderBarChart","currentYear","renderChart","bind","assertThisInitialized","updateDimensions","renderYear","renderMonth","renderDay","setState","cellSize","window","innerWidth","cellMargin","moments","keys","d","min","maxYear","max","id","calendar_DayLabels","calendar_Tooltip","calendar_YearLabel","drawCalendar","value","parseInt","dayInsights","rawData","console","log","dateData","target","size","months","d3","range","Date","yearsArr","year","monthsArr","memo","index","_this2","hidden","month","_this3","weeksInMonth","m","floor","offset","monthName","days","getFullYear","getMonth","lastDay","endOf","firstDay","extraSpace","height","width","y","textAnchor","_this4","isCurrentDay","getDay","week","find","setHours","filter","j","Math","toConsumableArray","fillColor","current-day","rx","ry","fill","onMouseOver","ev","top","clientY","left","clientX","onMouseOut","React","Component","App","onDrop","acceptedFiles","rejectedFiles","files","forEach","file","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","name","bytes","round","pow","bytesToSize","dist_es","_ref","getRootProps","getInputProps","isDragActive","assign","dropzone--isActive","dropzone--isDone","components_calendar_Heatmap","Boolean","location","hostname","match","store","createStore","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ccb9cd77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","const SET_INITIAL = 'SET/INITIAL';\nconst SET_YEARS = 'SET/YEARS';\nconst SET_RATE = 'SET/RATE';\nconst SET_MONTHLY_OVERPAYMENT = 'SET/MONTHLY_OVERPAYMENT';\n\nconst initialState = {\n  initial: 200000,\n  rate: 5,\n  years: 25,\n  monthlyOverpayment: 0\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIAL:\n      return {\n        ...state,\n        initial: action.val\n      };\n    case SET_RATE:\n      return {\n        ...state,\n        rate: action.val\n      };\n    case SET_YEARS:\n      return {\n        ...state,\n        years: action.val\n      };\n    case SET_MONTHLY_OVERPAYMENT:\n      return {\n        ...state,\n        monthlyOverpayment: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setInitial = val => ({ type: SET_INITIAL, val });\nexport const setYears = val => ({ type: SET_YEARS, val });\nexport const setRate = val => ({ type: SET_RATE, val });\nexport const setMonthlyOverpayment = val => ({ type: SET_MONTHLY_OVERPAYMENT, val });\n","import { combineReducers } from 'redux';\nimport mortgage from './mortgage';\n\nconst rootReducer = combineReducers({\n  mortgage\n});\n\nexport default rootReducer;\n","import moment from 'moment';\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, Object.create(null));\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport default parseData;\n","import React from 'react';\nimport moment from 'moment';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = () =>\n  <g>\n    {\n      weekArray.map(day =>\n        <text\n          key={day}\n          className='dayLabels'\n        >\n          {day}\n        </text>\n      )\n    }\n  </g>;\n\nexport default DayLabels;\n","import React from 'react';\nimport moment from 'moment';\n\nconst Tooltip = props =>\n  props.showTooltip &&\n    <div className='tooltip' style={props.style}>\n      {moment(props.showTooltip).format('dddd, MMMM DD YYYY')}\n      <div className='text'>\n        Count: {props.count}\n      </div>\n    </div>;\n\nexport default Tooltip;\n","import React from 'react';\nimport moment from 'moment';\nimport classNames from 'classnames';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='yearLabel'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nexport default YearLabel;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { getDayInsights } from '../../helpers/parser';\nimport './Heatmap.css';\n\nimport DayLabels from './DayLabels';\nimport Tooltip from './Tooltip';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\n\nclass Heatmap extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      showTooltip: false,\n      renderBarChart: false,\n      style: {},\n      currentYear: null,\n      i: 0\n    };\n    this.renderChart = this.renderChart.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.changeYear = this.changeYear.bind(this);\n    this.renderYear = this.renderYear.bind(this);\n    this.renderMonth = this.renderMonth.bind(this);\n    this.renderDay = this.renderDay.bind(this);\n  }\n\n  updateDimensions() {\n    this.setState({\n      cellSize: window.innerWidth / 125,\n      cellMargin: window.innerWidth / 400\n    });\n  }\n\n  componentWillMount() {\n    const moments = Object.keys(this.props.data).map(d => moment(d));\n    this.setState({\n      currentYear: moment.min(moments).format('YYYY'),\n      maxYear: moment.max(moments).format('YYYY'),\n      minDate: moment.min(moments),\n      maxDate: moment.max(moments)\n    });\n    this.updateDimensions();\n  }\n\n  componentDidMount() {\n    // window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUnmount() {\n    // window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <div id='calendar'>\n        <DayLabels />\n        <Tooltip\n          style={this.state.style}\n          showTooltip={this.state.showTooltip}\n          count={this.state.count}\n        />\n        <YearLabel\n          minDate={this.state.minDate}\n          maxDate={this.state.maxDate}\n          changeYear={this.changeYear}\n        />\n        <div className='months'>\n          { this.drawCalendar(this.props.data, this.state.i) }\n        </div>\n      </div>\n    );\n  }\n\n  changeYear(value) {\n    this.setState({\n      currentYear: parseInt(this.state.currentYear)+value,\n      i: this.state.i+value\n    });\n  }\n\n  renderChart(d) {\n    const day = moment(d).format('YYYY-MM-DD');\n    const dayInsights = getDayInsights(this.props.rawData);\n    console.log(dayInsights[day]);\n  }\n\n  drawCalendar(dateData, i) {\n    // const monthName = d3.timeFormat('%B'),\n    // months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n    //   new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    const minDate = this.state.minDate.format('YYYY-MM-DD'); // new Date(2016, 0, 1);\n    const maxDate = this.state.maxDate.format('YYYY-MM-DD'); // new Date(2020, 11, 31);\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    // const months = d3.timeMonth.range(minDate, maxDate);\n    const years = d3.timeYear.range(new Date(minDate), new Date(maxDate));\n\n    const yearsArr = years.map(year => moment(year).format('YYYY'));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        // Here it comes the only difference\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    // render only first year\n    return this.renderYear(yearsArr, years[0], months, dateData, monthsArr);\n  }\n\n  renderYear(years, year, months, dateData, monthsArr) {\n    const previousYear = moment(this.state.currentYear).subtract(1, 'years').format('YYYY');\n    const nextYear = moment(this.state.currentYear).add(1, 'years').format('YYYY');\n    const showPreviousArrow = previousYear >= this.state.minDate.format('YYYY');\n    const showNextArrow = nextYear <= this.state.maxDate.format('YYYY');\n    return (\n      <div key={year}>\n          {\n            monthsArr.map((months, i) =>\n              <div className={classNames('year', {'hidden': i !== this.state.i})} key={i}>\n                { months.map(month => this.renderMonth(month, dateData)) }\n              </div>\n            )\n          }\n      </div>\n      );\n  }\n\n  renderMonth(month, dateData) {\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = this.state.cellMargin,\n      cellSize = this.state.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n    const yearName = d3.timeFormat('%Y');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className='month-name'\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n          >\n            { monthName(month) }\n          </text>\n          { days.map(d => this.renderDay(d, month, dateData)) }\n        </g>\n      </svg>\n    );\n  }\n\n  renderDay(d, month, dateData) {\n    const cellMargin = this.state.cellMargin,\n      cellSize = this.state.cellSize;\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment().format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(dateData).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && dateData[i]).filter(j => !!j);\n\n    const item = Object.keys(dateData).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!dateData[item] && normalize(dateData[item], Math.max(...count), Math.min(...count));\n    const fillColor = !!dateData[item] ? d3.interpolatePurples(value) : '#ececec';\n    return (\n      <rect\n        key={d}\n        className={classNames('day', {'current-day': isCurrentDay})}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onMouseOver={(ev) => this.setState({\n          showTooltip: d,\n          count: !!dateData[item] ? dateData[item] : 0,\n          style: {\n            top: ev.clientY + 10,\n            left: ev.clientX + 10\n          }\n        })}\n        onMouseOut={() => this.setState({\n          showTooltip: false\n        })}\n        onClick={() => this.renderChart(d)}\n      >\n      </rect>\n    )\n  }\n}\n\nexport default Heatmap;\n","import React, { Component } from 'react';\nimport './App.css';\nimport * as d3 from 'd3';\nimport data from '../data/data.csv';\nimport parseData from '../helpers/parser';\nimport classNames from 'classnames';\nimport Heatmap from './calendar/Heatmap';\nimport Dropzone from 'react-dropzone'\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      data: [],\n      files: []\n    };\n  }\n\n  // componentDidMount () {\n  //   d3.csv(data).then(data => {\n  //     this.setState({ data: parseData(data), rawData: data });\n  //   }).catch(err => {\n  //     throw err;\n  //   });\n  // }\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    this.setState({ files: acceptedFiles });\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        this.setState({ data: parseData(parsed), rawData: parsed });\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  render () {\n    const bytesToSize = bytes => {\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n      if (bytes === 0) return '0 Byte';\n      const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n      return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n    };\n\n    const files = this.state.files.map(file => (\n      <span>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n    ));\n\n    return (\n      <div className='app'>\n        <header className='header'>\n          <div className='title'> Visualizing Time-Series Data </div>\n        </header>\n        <div className='content'>\n          <section>\n            <p>Upload file</p>\n            <Dropzone onDrop={this.onDrop}>\n              {({getRootProps, getInputProps, isDragActive}) => {\n                return (\n                  <div\n                    {...getRootProps()}\n                    className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n                  >\n                    <input {...getInputProps()} />\n                    {\n                      !!files.length\n                        ? <span className='file-name'>\n                            <i className=\"fa fa-remove\" />\n                          {files}\n                          </span>\n                        : <span className='upload-message'>\n                            <i className=\"fa fa-upload\" />\n                              Drag & Drop your file or <u>Browse</u>\n                          </span>\n                    }\n                  </div>\n                )\n              }}\n            </Dropzone>\n          </section>\n          {\n            !!Object.keys(this.state.data).length &&\n            <section>\n              <p>Calendar heatmap</p>\n              <Heatmap\n                data={this.state.data}\n                rawData={this.state.rawData}\n              />\n            </section>\n          }\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}