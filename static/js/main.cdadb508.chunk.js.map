{"version":3,"sources":["components/bar-chart/clock.svg","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","helpers/colors.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/widget/Modal.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","components/bar-chart/Container.js","components/widget/DragAndDrop.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","countOccurrences","arr","reduce","obj","item","getDayInsights","data","newData","map","date","columns","time","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","isoWeekday","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","parseDayInsights","days","roundedHours","hour","m","parseInt","startOf","occurrences","getCurrentWeekInsights","selectedDay","Array","from","x","add","weekInsights","includes","week","weekOccurrences","apply","weekObj","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","clone","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","getExactTimes","selectedHour","exactTimes","parseData","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","setData","type","showSpinner","setMonthInsights","setWeekdayInsights","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","showCalendar","selectDay","saveColor","isRadialChartVisible","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","modalData","timeArray","showBarChart","openModal","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","toConsumableArray","Set","value","radialChart","barChart","weekArray","_","connect","dispatch","props","react_default","createElement","className","classNames","bold","onClick","onWeekdayClick","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","Day","isEqual","nextProps","isCurrentWeek","_this","isCurrentMonth","isCurrentWeekday","onDayClick","ev","preventDefault","stopPropagation","d3","nextState","formatDate","this","fill","_this2","_this$props","isCurrentDay","getDay","find","Date","setHours","daysInMonth","count","Math","interpolateColor","fillColor","getDayColor","stroke","strokeWidth","width","height","rx","ry","y","getFullYear","getMonth","data-tip","data-for","React","Component","Month","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","getWeeksInMonth","floor","offset","renderMonthOverview","renderDays","renderList","calendar_Day","monthName","lastDay","firstDay","extraSpace","textAnchor","PureComponent","Year","getChunk","target","size","memo","index","months","range","monthsArr","hidden","calendar_Month","Card","id","children","Section","title","Heatmap","addEventListener","onScreenResize","widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","react_tooltip_dist_default","multiline","class","DayLabel","pickDay","pickMonth","toString","pickWeekday","dataArr","getUnit","getString","selectedItem","select","unit","previousItem","nextItem","isAfter","isBefore","tabIndex","onKeyDown","XAxis","renderAxis","xAxis","xScale","ticks","tickFormat","refs","transition","transform","ref","fontSize","YAxis","yAxis","yScale","nrOfTicks","Bars","renderBars","current","bars","datum","plotData","selectAll","interrupt","attr","hoverIndex","darker","enter","append","classed","plotHeight","on","exit","remove","merge","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","xScaleArea","getPosition","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","text","invert","formatTime","hide","style","indexOf","setLineOpacity","plotWidth","_this$props2","margin","area","y0","top","bottom","y1","curve","x1","x2","y2","spreadMethod","stopColor","stopOpacity","strokeDasharray","opacity","pointerEvents","onMouseLeave","onMouseOver","onMouseMove","nativeEvent","offsetX","offsetY","Modal","hideModal","convertRange","r1","r2","display-block","display-none","src","clock","alt","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","left","right","updateScale","nice","currentWeekInsights","checkedBox","ceil","yDomain","midnight","domain","updatePlotSize","_this3","removeEventListener","ReactTooltip","rebuild","_this4","insights","_this$updateScale","_this$updatePlotSize","metaData","currentMonthInsights","monthOccurrences","monthObj","getCurrentMonthInsights","currentWeekdayInsights","showAreaChart","rgb","g","b","filteredColors","forEach","getAverageColor","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","components_widget_Modal","barChartProps","bar_chart_DayLabel","bar_chart_BarChart","uploadFile","file","name","bytes","log","round","pow","bytesToSize","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","onload","result","parsed","onabort","console","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","isEmptyContainerVisible","setDatasetName","renderHeatmap","dataset","then","catch","err","widget_DragAndDrop","dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","bar_chart_Container","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdadb508.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock.d668b059.svg\";","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","import moment from 'moment';\nimport * as d3 from \"d3\";\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx').utc()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return parseInt(m.startOf('hour').format('HH'));\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 0; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: 7}, (x, i) => moment(selectedDay).startOf('isoWeek').add(i, 'days').format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => days.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let weekObj = {};\n\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: moment(selectedDay).daysInMonth()}, (x, i) => moment(selectedDay).startOf('isoMonth').add(i, 'days').format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => days.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n  return monthObj;\n};\n\nexport const getCurrentWeek = selectedDay => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = selectedDay => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = selectedDay => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  return {\n    daysArr: daysArr.concat(daysArr1),\n    length: daysArr.concat(daysArr1).length\n  }\n};\n\nexport const getExactTimes = (selectedHour, arr) => {\n  const exactTimes = arr.filter(i => moment(i, 'HH:mm:ss').format('HH') === moment(selectedHour.data, 'H').format('HH'));\n  return countOccurrences(exactTimes.map(i => moment(i, 'HH:mm:ss').format('HH:mm')));\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedMonth: null,\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay),\n        currentMonth: getCurrentMonth(selectedDay),\n        currentWeekdays: getCurrentWeekdays(selectedDay)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: [...new Set(state.colors.concat({\n            day: action.val.day,\n            value: action.val.value\n        }))]\n      });\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { getExactTimes } from '../helpers/parser';\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst OPEN_MODAL = 'OPEN_MODAL';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false,\n  modalData: null,\n  timeArray: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalData: action.val && action.val.data,\n        timeArray: action.val ? getExactTimes(action.val.data, action.val.arr) : []\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const openModal = val => ({ type: OPEN_MODAL, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { setWeekdayInsights, setMonthInsights } from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = props => {\n  const onWeekdayClick = day => {\n    props.selectDay(null);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    const weekdayInsights = getWeekdayInsights(day, props.dayInsights, props.allDays);\n    props.setWeekdayInsights({\n      selectedWeekday: weekdayInsights.selectedWeekday,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      weekdayInsights: weekdayInsights.weekdayInsights\n    });\n    props.showBarChart(true);\n  };\n  return (\n    <div className='day-labels-container'>\n    {\n      weekArray.map(day =>\n        <text\n          key={day}\n          className={classNames('day-labels', {'bold': props.selectedWeekday === day})}\n          onClick={() => onWeekdayClick(day)}\n        >\n          {day}\n        </text>\n      )\n    }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport {getDayColor} from '../../helpers/colors';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.isEqual(nextProps) ||\n      this.props.fill !== nextProps.fill ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  isEqual = nextProps => {\n    const isCurrentWeek = (nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentMonth = (nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentWeekday = (nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    return isCurrentWeek || isCurrentMonth || isCurrentWeekday;\n  };\n\n  componentDidUpdate() {\n    // d3.select('.day.fill')\n    //   .transition()\n    //   .duration(1000)\n  }\n\n  onDayClick = (ev, day, color) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.selectDay({ day, color: d3.interpolateOranges(color.value) });\n    this.props.showBarChart(true);\n  };\n\n  render() {\n    const props = this.props;\n    const { cellMargin, cellSize } = this.props;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const color = getDayColor(props, isCurrentDay);\n\n    return (\n      <rect\n        key={d}\n        className='day'\n        stroke={isCurrentDay ? '#000' : ''}\n        strokeWidth={isCurrentDay ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={color.fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={ev => this.onDayClick(ev, d, color)}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${color.count}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeekday: state.app.selectedWeekday,\n  selectedMonth: state.app.selectedMonth,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\nexport const getAverageColor = (selectedMonth, selectedWeekday, colors) => {\n  let rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  const filteredColors = selectedMonth\n    ? colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('M') === selectedMonth)\n    : colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('ddd') === selectedWeekday);\n\n  filteredColors.forEach(color => {\n    rgb.r += color.value.r;\n    rgb.g += color.value.g;\n    rgb.b += color.value.b;\n  });\n\n  return d3.rgb(rgb.r / filteredColors.length, rgb.g / filteredColors.length, rgb.b / filteredColors.length);\n};\n\nconst normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\nexport const getDayColor = (props, isCurrentDay) => {\n  const item = Object.keys(props.data).find(key => new Date(key).setHours(0,0,0,0) === props.day.setHours(0,0,0,0));\n\n  if (item) {\n    const isCurrentWeek = props.currentWeek && props.currentWeek.includes(moment(props.day).format('DD-MM-YYYY')) && props.showWeekOverview;\n    const isCurrentMonth = (props.currentMonth && props.currentMonth.includes(moment(props.day).format('DD-MM-YYYY')) && props.showMonthOverview) ||\n      (props.selectedMonth && props.selectedMonth === moment(props.day).format('M'));\n    const isCurrentWeekday = (props.currentWeekdays && props.currentWeekdays.daysArr.includes(moment(props.day).format('DD-MM-YYYY')) && props.showWeekdayOverview) ||\n      (props.selectedWeekday && props.selectedWeekday === moment(props.day).format('ddd'));\n\n    const daysArr = Array.from({length: moment(props.month).daysInMonth()}, (x, i) => moment(props.month).startOf('month').add(i, 'days').format('YYYY-MM-DD'));\n\n    const count = Object.keys(props.data).reduce((acc, item) => {\n      daysArr.includes(item) && acc.push(props.data[item]);\n      return acc;\n    }, []);\n\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    const interpolateColor = (isCurrentDay || isCurrentWeek || isCurrentMonth || isCurrentWeekday) ? d3.interpolateOranges(value) : d3.interpolatePurples(value);\n\n    const isColorSaved = props.colors.find(color => color.day === moment(props.day).format('DD-MM-YYYY'));\n    !isColorSaved && props.saveColor({ day: moment(props.day).format('DD-MM-YYYY'), value: d3.color(d3.interpolateOranges(value)) });\n\n    return {\n      value,\n      count: props.data[item],\n      fillColor: interpolateColor\n    }\n  }\n\n  return {\n    fillColor: '#ececec',\n    count: 0\n  };\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights } from '../../helpers/parser';\nimport {setMonthInsights, setWeekdayInsights} from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    let { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth() + 1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count + 1 }));\n    }\n  };\n\n  getWeeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  renderMonthOverview = month => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    const monthInsights = getMonthInsights(moment().month(month).format('M'), this.props.dayInsights, this.props.allDays);\n    this.props.setMonthInsights({\n      selectedMonth: monthInsights.selectedMonth,\n      daysOfMonth: monthInsights.daysOfMonth,\n      monthInsights: monthInsights.monthInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  renderDays = (renderList, isCurrentMonth) =>\n    renderList.map(d => <Day fill={isCurrentMonth || moment(d).format('ddd') === this.props.selectedWeekday} day={d} month={this.props.month} key={d} />);\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className={classNames('month-name', {'bold': isCurrentMonth})}\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n            onClick={() => this.renderMonthOverview(monthName(month))}\n          >\n            { monthName(month) }\n          </text>\n          { this.renderDays(renderList, isCurrentMonth) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    const monthsArr = this.getChunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper'>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\n\nconst Section = props =>\n  <section>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n          </div>\n          <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport {getMonthInsights, getWeekdayInsights} from '../../helpers/parser';\nimport * as d3 from 'd3';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  pickDay = day => {\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    const color = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n    const value = color && d3.color(color.value);\n    this.props.selectDay({ day, color: value });\n    this.props.showBarChart(true);\n  };\n\n  pickMonth = month => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    const monthInsights = getMonthInsights(month.toString(), this.props.dayInsights, this.props.allDays);\n    this.props.setMonthInsights({\n      selectedMonth: monthInsights.selectedMonth,\n      daysOfMonth: monthInsights.daysOfMonth,\n      monthInsights: monthInsights.monthInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  pickWeekday = weekday => {\n    this.props.selectDay(null);\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    const weekdayInsights = getWeekdayInsights(weekday, this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.dataArr);\n    this.props.setWeekdayInsights({\n      weekdayInsights: weekdayInsights.weekdayInsights,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      selectedWeekday: weekdayInsights.selectedWeekday\n    });\n    this.props.showBarChart(true);\n  };\n\n  getUnit = () => {\n    if (this.props.selectedMonth) {\n      return 'months';\n    } else if (this.props.selectedWeekday) {\n      return 'weeks';\n    } else {\n      return 'days';\n    }\n  };\n\n  getString = selectedItem => {\n    if (this.props.selectedMonth) {\n      return moment(this.props.selectedMonth, 'M').format('MMMM');\n    } else if (this.props.selectedWeekday) {\n      return `${moment(this.props.selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      return moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n  };\n\n  select = (selectedItem, val, unit) => {\n    if (this.props.selectedDay) {\n      this.pickDay(moment(selectedItem).add(val, unit));\n    } else if (this.props.selectedMonth) {\n      this.pickMonth(parseInt(selectedItem) + val);\n    } else if (this.props.selectedWeekday) {\n      const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n      this.pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + val)).format('ddd'));\n    }\n  };\n\n  render() {\n    const { minDate, maxDate, selectedMonth, selectedDay, selectedWeekday } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay;\n    const unit = this.getUnit();\n\n    const previousItem = selectedMonth ? selectedMonth-1 : moment(selectedItem).subtract(1, unit);\n    const nextItem = selectedMonth ? parseInt(selectedMonth)+1 : moment(selectedItem).add(1, unit);\n\n    const showPreviousArrow = selectedMonth ? moment(previousItem, 'M').isAfter(minDate.startOf('year')) : previousItem.isAfter(minDate.startOf('year'));\n    const showNextArrow = selectedMonth ? true : nextItem.isBefore(maxDate.endOf('year'));\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}\n           onKeyDown={ev =>\n             (ev.key === 'ArrowLeft' && this.select(selectedItem, -1, unit)) ||\n             (ev.key === 'ArrowRight' && this.select(selectedItem, 1, unit))\n           }>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => showPreviousArrow && this.select(selectedItem, -1, unit)}\n        />\n        { this.getString(selectedItem) }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showPreviousArrow && this.select(selectedItem, 1, unit)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dataArr: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale)\n      .ticks(24)\n      .tickFormat(d3.timeFormat('%H'));\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale)\n      .ticks(this.props.nrOfTicks)\n      .tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { openModal } from '../../reducers/barChart';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  openModal = d => {\n    this.props.openModal({ data: d, arr: this.props.dayInsights[this.props.selectedDay] });\n  };\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n\n    current.interrupt();\n\n    const color = this.props.color;\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('id', (d, i) => `bar-${i}`)\n      .on('mouseover', (d, i) => { this.setState({ hoverIndex: i }) })\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => this.openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `${d.occurrences} occurrences<br>between ${moment(d.data, 'hh').format('H:mm')} - ${moment(parseInt(d.data)+1, 'hh').format('H:mm')}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bars);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport {openModal} from \"../../reducers/barChart\";\n\nclass AreaChart extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { xScaleArea, yScale, plotHeight, color, plotData, openModal, dayInsights, selectedDay } = this.props;\n\n    const getPosition = i => {\n      const lines = document.getElementsByClassName('line');\n      let pos;\n\n      let beginning = 0,\n        end = lines && lines[i].getTotalLength(),\n        target = null;\n\n      while (end){\n        target = Math.floor((beginning + end) / 2);\n        pos = lines[i].getPointAtLength(target);\n        if ((target === end || target === beginning) && pos.x !== mouseX) {\n          break;\n        }\n        if (pos.x > mouseX)      end = target;\n        else if (pos.x < mouseX) beginning = target;\n        else break; //position found\n      }\n\n      d3.select('.line-text')\n        .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n      return pos;\n    };\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const formatTime = d3.timeFormat('%H');\n    const parseTime = d3.timeParse('%H');\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        const pos = getPosition(i);\n        const x = xScaleArea.invert(pos.x);\n\n        d3.selectAll('.bar')\n          .attr('fill', d =>  formatTime(parseTime(d.data)) === formatTime(x) ? d3.rgb(color).darker() : color);\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n\n    const hide = () => {\n      d3.select('.bar-text')\n        .style('opacity', 0);\n      d3.select('.bar-circle')\n        .style('opacity', 0);\n    };\n\n    d3.selectAll('.mouse-per-bar')\n      .attr('transform', function(d, i) {\n\n        const bars = plotData.map(i => moment(i.data, 'H').format('HH'));\n\n        const x = xScaleArea.invert(getPosition(i).x);\n\n        if (bars.indexOf(formatTime(x)) > -1) {\n          const item = plotData.find(i => moment(i.data, 'H').format('HH') === formatTime(x));\n          d3.select('.mouse-over-effects')\n            .style('cursor', 'pointer')\n            .on('click', () => {\n              openModal({ data: item, arr: dayInsights[moment(selectedDay).format('YYYY-MM-DD')] });\n              hide();\n            });\n\n          d3.select('.bar-text')\n            .style('opacity', 1)\n            .text(item.occurrences);\n          d3.select('.bar-circle')\n            .style('opacity', 1);\n          return 'translate(' + mouseX + ',' + `${item.y - 3.8}` +')'\n        }\n        d3.select('.mouse-over-effects')\n          .style('cursor', 'auto')\n          .on('click', null);\n        hide();\n      });\n  };\n\n  setLineOpacity = val => {\n    d3.select('.mouse-line')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-circle')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-text')\n      .style('opacity', val);\n  };\n\n  render() {\n    const { xScaleArea, plotWidth, plotHeight, margin, yScale } = this.props;\n\n    const weekObj = this.props.weekInsights;\n\n    const parseTime = d3.timeParse('%H:%M');\n\n    const area = d3.area()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    const line = d3.line()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(weekObj))}\n        />\n        <path className='line shadow'\n              d={line(Object.keys(weekObj))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#777'\n            strokeWidth={1}\n            strokeDasharray='3,3'\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              className='line-circle'\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='line-text'\n              transform='translate(10,3)'\n              fontSize={14}\n            />\n          </g>\n          <g className='mouse-per-bar'>\n            <circle\n              className='bar-circle'\n              r={5}\n              fill={d3.rgb(this.props.color).darker()}\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='bar-text'\n              transform='translate(-17,3)'\n              fontSize={14}\n              opacity={0}\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            transform='translate(0,0)'\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => this.setLineOpacity('0')}\n            onMouseOver={() => this.setLineOpacity('1')}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './Modal.scss';\n\nimport { openModal } from \"../../reducers/barChart\";\nimport moment from 'moment';\nimport clock from \"../bar-chart/clock.svg\";\n\nclass Modal extends React.PureComponent {\n\n  hideModal = () => {\n    this.props.openModal(null);\n  };\n\n  convertRange = (val, r1, r2 )=> (val - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\n  render() {\n    const { selectedDay, modalData, timeArray } = this.props;\n      return (\n      <div className={classNames('modal', 'modal-animation', {'display-block': modalData}, {'display-none': !modalData})} onClick={this.hideModal}>\n        <section className='modal-main' onClick={ev => ev.stopPropagation()}>\n          <i className='fas fa-times' onClick={this.hideModal} />\n          <div className='modal-title'>{selectedDay}</div>\n          {modalData && <div>between {moment(modalData.data, 'hh').format('H:mm')} - {moment(parseInt(modalData.data)+1, 'hh').format('H:mm')}</div>}\n          <div className='clock-icon'>\n            <img src={clock} alt='' width={50} height={50} />\n          </div>\n          <div className='time-container'>\n            {\n              Object.keys(timeArray).map(key =>\n                  <span className='time' style={{ fontSize: this.convertRange(timeArray[key], [1,20], [15,50]) }}>\n              {key}\n            </span>\n              )\n            }\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  modalData: state.barChart.modalData,\n  selectedDay: moment(state.calendar.selectedDay).format('dddd, MMMM DD YYYY'),\n  timeArray: state.barChart.timeArray\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.onReset();\n  };\n\n  return (\n    <div className='footer year-label'>\n      <div className='checkboxes'>\n           <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n             Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n             Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n             Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n           </span>\n      </div>\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport Modal from '../widget/Modal';\nimport { showBarChart, showMonthOverview, showWeekdayOverview, showWeekOverview } from '../../reducers/barChart';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\nimport {getAverageColor} from \"../../helpers/colors\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: document.getElementById('card').clientWidth - props.margin.left - props.margin.right\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    this.setState({\n      width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n    });\n  };\n\n  updateScale = (props, data) => {\n    const xScale = d3.scaleTime();\n    const xScaleArea = d3.scaleTime();\n    const yScale = d3.scaleLinear().nice();\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n\n    const checkedBox = this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked;\n\n    const max = currentWeekInsights ?\n      Math.ceil(Math.max(d3.max(Object.values(currentWeekInsights)), d3.max(Object.values(data)))) :\n      d3.max(Object.values(data));\n\n    const yDomain = [0, checkedBox ? max + max / 20 : max];\n\n    const parseTime = d3.timeParse('%H:%M');\n    const midnight = parseTime('00:00');\n\n    xScale\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - props.margin.right]);\n\n    xScaleArea\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([props.height - props.margin.top - props.margin.bottom, 0]);\n\n    return {xScale, yScale, xScaleArea};\n  };\n\n  updatePlotSize = props => {\n    const plotWidth = this.state.width - (props.margin.left + props.margin.right);\n    const plotHeight = props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    let data = [];\n    if (!!this.props.monthInsights.length) {\n      data = this.props.daysOfMonth;\n    } else if (!!this.props.weekdayInsights.length) {\n      data = this.props.daysOfWeekday;\n    } else {\n      data = this.props.data;\n    }\n    const { xScale, yScale, xScaleArea } =  this.updateScale(this.props, data);\n    const { plotWidth, plotHeight } = this.updatePlotSize(this.props);\n\n    const max = d3.max(Object.values(data));\n    const nrOfTicks = max < 10 ? max : (max > 20 ? max / 4 : max / 2);\n\n    const parseTime = d3.timeParse('%H');\n\n    const metaData = {\n      xScale,\n      yScale,\n      xScaleArea,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentMonthInsights = this.props.isMonthOverviewChecked && getCurrentMonthInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentWeekdayInsights = this.props.isWeekdayOverviewChecked && getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.dataArr);\n\n    let insights;\n    if (this.props.isWeekOverviewChecked) {\n      insights = currentWeekInsights;\n    }\n    if (this.props.isMonthOverviewChecked) {\n      insights = currentMonthInsights;\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      insights = currentWeekdayInsights.weekdayObj;\n    }\n\n    const showAreaChart = this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked;\n\n    const color = this.props.color || getAverageColor(this.props.selectedMonth, this.props.selectedWeekday, this.props.colors);\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight-50})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} color={color} />\n            { showAreaChart && <AreaChart {...metaData} {...plotData} margin={this.props.margin} weekInsights={insights} color={color} />}\n          </g>\n        </svg>\n        <Footer />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n        <Modal />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dataArr: state.app.data,\n  allDays: state.app.allDays,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[props.selectedDay] ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    data: props.data,\n    margin: props.margin,\n    height: props.height\n  };\n\n  return (\n    <Section title='Day overview'>\n      <Card>\n        <DayLabel selectedDay={props.selectedDay} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Section from '../widget/Section';\n\nimport { setData, uploadFile } from '../../reducers/app';\nimport { showCalendar } from '../../reducers/calendar';\n\nconst DragAndDrop = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  return (\n    <Section title='Upload file'>\n      <Dropzone\n        accept='text/csv'\n        onDrop={onDrop}\n      >\n        {({getRootProps, getInputProps, isDragActive}) => {\n          return (\n            <div\n              {...getRootProps()}\n              className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n            >\n              <input {...getInputProps()} />\n              {\n                !!files.length\n                  ? <span className='file-name'>\n                            <i className='fa fa-remove' />\n                    {files}\n                          </span>\n                  : <span className='upload-message'>\n                            <i className='fa fa-upload' />\n                              Drag & Drop your file or <u>Browse</u>\n                          </span>\n              }\n            </div>\n          )\n        }}\n      </Dropzone>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  showCalendar: val => dispatch(showCalendar(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDrop);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekdayInsights } from '../reducers/app';\nimport { showCalendar, selectDay, saveColor } from '../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview, openModal } from '../reducers/barChart';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport DragAndDrop from './widget/DragAndDrop';\nimport Section from './widget/Section';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd_filtered.csv';\nimport dataset4 from '../data/data.csv';\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n    props.saveColor([]);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = true;\n\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      data={props.allDays[props.selectedDay]}\n      margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n      height={300}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        { showDropzone && <DragAndDrop /> }\n        <Section title='Select dataset'>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </Section>\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible && renderBarChart() }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible,\n  modalData: state.barChart.modalData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  saveColor: val => dispatch(saveColor(val)),\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}