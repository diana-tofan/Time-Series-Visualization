{"version":3,"sources":["icons/github-logo.svg","icons/pdf-logo.svg","icons/clock.svg","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv","icons/github-logo-hover.svg","icons/pdf-logo-hover.svg","components/calendar/Heatmap.js","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","helpers/colors.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","helpers/navigator.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/widget/Modal.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","components/bar-chart/Container.js","components/radial-chart/RadialChart.js","components/radial-chart/RadialChartContainer.js","components/widget/Upload.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","x1","x2","y1","y2","parseTime","timeStamp","offset","timeString","split","slice","value","moment","utc","concat","utcOffset","format","parseDate","countOccurrences","arr","reduce","obj","item","getDayInsights","data","newData","map","date","columns","time","unshift","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekInsights","week","weekInsights","isoWeekday","toString","allDaysOfWeek","isoWeek","selectedWeek","daysOfWeek","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","getShiftSelectionInsights","shiftSelection","shiftInsights","indexOf","allSelectedDays","isDay","find","selectedDaysObj","selectedDays","selectedDaysInsights","parseDayInsights","days","roundedHours","hour","m","parseInt","startOf","occurrences","getCurrentWeekInsights","selectedDay","Array","from","x","add","includes","weekOccurrences","apply","weekObj","getCurrentMonthInsights","daysInMonth","monthOccurrences","monthObj","contains","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","clone","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","array","toConsumableArray","Set","getExactTimes","selectedHour","exactTimes","parseData","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","showSpinner","type","setMonthInsights","setWeekInsights","setWeekdayInsights","onShiftClick","resetShiftSelection","removeItem","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","selectDay","saveColor","isRadialChartVisible","highlightedWeekday","highlightDay","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","modalData","timeArray","showBarChart","openModal","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","radialChart","barChart","DayLabels","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onWeekdayClick","ev","shiftKey","setState","toggle","_this2","weekArray","_","react_default","createElement","className","classNames","bold","onClick","React","Component","connect","dispatch","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","getAverageColor","rgb","g","b","filteredColors","insertMissingColors","daysArray","forEach","d3","getColors","oranges","year","arrDays","_loop","current","getDaysArrayByMonth","showOverview","getAdjacentDayColor","purples","purplePalette","orangePalette","blues","bluePalette","range","domain","Day","isEqual","nextProps","isCurrentWeek","isCurrentMonth","isCurrentWeekday","onDayClick","console","log","refs","getBoundingClientRect","stopPropagation","formattedDay","previousDay","nextDay","isColorSaved","isPreviousColorSaved","isNextColorSaved","nextState","formatDate","fill","_this$props","isCurrentDay","getDay","Date","setHours","isHighlightedDay","isSelected","interpolateColor","count","fillColor","getDayColor","showStroke","data-tip","data-for","ref","stroke","strokeWidth","width","height","rx","ry","y","getFullYear","getMonth","Month","brushEnd","selection","_d3$event$selection","slicedToArray","showMoreData","requestAnimationFrame","getWeeksInMonth","floor","getChunk","target","size","memo","index","renderMonthOverview","renderWeekOverview","renderDays","renderList","calendar_Day","getWeekIndices","firstDayOfMonth","lastDayOfMonth","weekIndices","currentDay","pop","renderWeekLabels","nrOfWeeks","offsets","textAnchor","brush","on","ReactTooltip","rebuild","monthName","lastDay","firstDay","extraSpace","endReached","PureComponent","Year","months","monthsArr","hidden","calendar_Month","dist_default","id","multiline","class","Card","onKeyDown","tabIndex","children","Section","title","select","selectedItem","unit","getUnit","pickDay","pickWeek","pickMonth","pickWeekday","Heatmap","selectAll","recalc","div","x3","Math","x4","y3","y4","style","left","top","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","addEventListener","onScreenResize","components_widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","DayLabel","getString","showArrows","previousItem","nextItem","prev","next","previous","isSameOrAfter","isSameOrBefore","XAxis","renderAxis","xAxis","xScale","ticks","tickFormat","transition","transform","fontSize","YAxis","yAxis","yScale","nrOfTicks","append","attr","margin","text","Bars","renderBars","bars","datum","plotData","interrupt","hoverIndex","darker","enter","classed","plotHeight","exit","remove","merge","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","xScaleArea","getPosition","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","formatTime","invert","hide","openModalBox","setLineOpacity","plotWidth","_this$props2","insights","area","y0","bottom","curve","spreadMethod","stopColor","stopOpacity","strokeDasharray","opacity","pointerEvents","onMouseLeave","onMouseOver","nativeEvent","offsetX","offsetY","Modal","handleKeyUp","preventDefault","hideModal","convertRange","r1","r2","removeEventListener","display-block","display-none","src","clock","alt","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","showFooter","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","right","getData","getInsights","showAreaChart","updateScale","nice","ceil","yDomain","midnight","updatePlotSize","_this3","_this4","_this$updateScale","_this$updatePlotSize","metaData","areaChartData","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","components_widget_Modal","barChartProps","bar_chart_DayLabel","bar_chart_BarChart","RadialChart","normalize","getPercentage","renderArcs","svg","sort","defaultValue","label","arcs","innerRadius","arcSize","outerRadius","arcsGrey","pieData","arc","object","pie","gText","j","attrTween","startAngle","endAngle","t","each","labelObj","centroidText","centroid","visible","behind","components_radial_chart_RadialChart","getDatasetOverview","uploadFile","setData","setDatasetName","showCalendar","resetColors","file","name","bytes","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","react_dropdown_dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","href","rel","githubLogo","currentTarget","githubLogoHover","pdfLogo","pdfLogoHover","widget_Upload","calendar_Heatmap","bar_chart_Container","radial_chart_RadialChartContainer","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93425a09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.7338f8ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo.eb8752b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.d668b059.svg\";","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.4437b604.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","module.exports = __webpack_public_path__ + \"static/media/github-logo-hover.b2035e53.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo-hover.eebd97c5.svg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport {\n  onShiftClick,\n  showSpinner,\n  resetShiftSelection,\n  setWeekInsights,\n  setMonthInsights,\n  setWeekdayInsights\n} from '../../reducers/app';\nimport {onScreenResize, saveColor, selectDay} from '../../reducers/calendar';\nimport {select} from \"../../helpers/navigator\";\nimport {showBarChart} from \"../../reducers/barChart\";\n\nlet x1, x2, y1, y2;\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n    this.state = {\n      selection: true\n    }\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n    // this.brush = d3.brush()\n    //   .extent([[0, 0], [600, 600]])\n    //   .on('start', this.brushStart)\n    //   .on('end', this.brushEnd);\n    // d3.select(this.refs.brush).call(this.brush);\n  }\n\n  // brushStart = () => {\n  //   const s = d3.event.selection,\n  //     x0 = s[0][0],\n  //     y0 = s[0][1],\n  //     dx = s[1][0] - x0,\n  //     dy = s[1][1] - y0,\n  //     max = 0;\n  //\n  //   if (dx && dy) {\n  //    console.log(dx, dy);\n  //   }\n  // };\n  //\n  // brushEnd = () => {\n  //   if (!d3.event.selection) {\n  //     return;\n  //   }\n  //   const [x1, x2] = d3.event.selection;\n  //\n  //   console.log(x1, x2);\n  // };\n\n  selectAll = ev => {\n    if (ev.key === 'A' && ev.shiftKey) {\n      this.state.selection ? this.props.onShiftClick('all') : this.props.resetShiftSelection();\n      this.setState({\n        selection: !this.state.selection\n      })\n    }\n    if (ev.key === 'ArrowLeft') {\n      select(-1, this.props);\n    }\n    if (ev.key === 'ArrowRight') {\n      select(1, this.props);\n    }\n  };\n\n  recalc = () => {\n    const div = this.refs.div;\n    const x3 = Math.min(x1, x2);\n    const x4 = Math.max(x1, x2);\n    const y3 = Math.min(y1, y2);\n    const y4 = Math.max(y1, y2);\n    div.style.left = x3 + 'px';\n    div.style.top = y3 + 'px';\n    div.style.width = x4 - x3 + 'px';\n    div.style.height = y4 - y3 + 'px';\n  };\n\n  onMouseDown = ev => {\n    const div = this.refs.div;\n    div.hidden = 0;\n    x1 = ev.clientX;\n    y1 = ev.clientY;\n    this.recalc();\n  };\n\n  onMouseMove = ev => {\n    x2 = ev.clientX;\n    y2 = ev.clientY;\n    this.recalc();\n  };\n\n  onMouseUp = () => {\n    const div = this.refs.div;\n    div.hidden = 1;\n  };\n\n  //  onMouseDown={ev => this.onMouseDown(ev)} onMouseMove={ev => this.onMouseMove(ev)} onMouseUp={this.onMouseUp}\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card tabIndex={0} onKeyDown={ev => this.selectAll(ev)}>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n            <div id='div' ref='div' hidden />\n          </div>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Heatmap);\n","import moment from 'moment';\n\nconst parseTime = (timeStamp, offset) => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  const value = offset || (timeStamp.split(';')[1]).split(';')[0];\n  return moment.utc(`${timeString}`, 'HH:mm:ss').utcOffset(value).format('HH:mm:ss');\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  newData.unshift({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]], item[data.columns[1]]) }));\n  newData.unshift({ date: parseDate(data.columns[0]), time: parseTime(data.columns[0], data.columns[1]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekInsights = (week, dayInsights, allDays) => {\n  const weekInsights = Object.keys(dayInsights)\n    .filter(key => {\n      return moment(key).isoWeekday(1).format('w') === week.toString()\n    })\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekInsights).reduce((acc, key) => {\n    acc.push(weekInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfWeek = Object.keys(allDays)\n    .filter(key => moment(key).isoWeek() === week)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfWeek).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedWeek: week,\n    daysOfWeek: mergedDays,\n    weekInsights: mergedData.flat()\n  };\n};\n\nexport const getDatasetOverview = (allDays, data, dayInsights) => {\n  const length = Object.keys(data).length;\n  const weekdayInsights = Object.keys(dayInsights)\n    .reduce((obj, key) => {\n      const weekday = moment(key, 'YYYY-MM-DD').format('ddd');\n      obj[weekday] = obj[weekday] || [];\n      obj[weekday].push(dayInsights[key]);\n      return obj;\n    }, {});\n  return Object.keys(weekdayInsights)\n    .reduce((obj, key) => {\n      obj[key] = Number(weekdayInsights[key].flat().length / length).toFixed(2);\n      return obj;\n    }, {});\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const getShiftSelectionInsights = (shiftSelection, data, dayInsights, allDays) => {\n  const shiftInsights = Object.keys(dayInsights)\n    .filter(key => shiftSelection.indexOf(moment(key).format('MMMM')) > -1 ||\n      shiftSelection.indexOf(moment(key).isoWeek()) > -1 ||\n      shiftSelection.indexOf(moment(key).format('ddd')) > -1 ||\n      shiftSelection.indexOf(key) > -1 ||\n      shiftSelection.indexOf('all') > -1)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n\n  const mergedData = Object.keys(shiftInsights).reduce((acc, key) => {\n    acc.push(shiftInsights[key]);\n    return acc;\n  }, []);\n\n  const allSelectedDays = Object.keys(allDays)\n    .filter(key => shiftSelection.indexOf(moment(key).format('MMMM')) > -1 ||\n      shiftSelection.indexOf(moment(key).isoWeek()) > -1 ||\n      shiftSelection.indexOf(moment(key).format('ddd')) > -1 ||\n      shiftSelection.indexOf(key) > -1 ||\n      shiftSelection.indexOf('all') > -1)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n\n  const mergedDays = Object.values(allSelectedDays).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  const isDay = Object.keys(allDays).find(key => shiftSelection.indexOf(key) > -1);\n  const length = (shiftSelection.indexOf('all') > -1 || isDay) ? Object.keys(allSelectedDays).length : 1;\n\n  let selectedDaysObj = {};\n  for (let i = 0; i < 24; i++) {\n    selectedDaysObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    shiftSelection,\n    selectedDays: mergedDays,\n    selectedDaysInsights: mergedData.flat(),\n    selectedDaysObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return parseInt(m.startOf('hour').format('HH'));\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 0; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: 7}, (x, i) => moment(selectedDay).startOf('isoWeek').add(i, 'days').format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => days.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let weekObj = {};\n\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: moment(selectedDay).daysInMonth()}, (x, i) => moment(selectedDay).startOf('isoMonth').add(i, 'days').format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => days.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n  return monthObj;\n};\n\n\nconst contains = (item, arr) => {\n  let i = arr.length;\n  while (i--) {\n    if (arr[i] === item) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getCurrentWeek = (selectedDay, data) => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = (selectedDay, data) => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = (selectedDay, data) => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    contains(moment(dayItem1).format('YYYY-MM-DD'), Object.keys(data)) && daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  const array = [...new Set(daysArr.concat(daysArr1))];\n\n  return {\n    daysArr: array,\n    length: array.length\n  }\n};\n\nexport const getExactTimes = (selectedHour, arr) => {\n  const exactTimes = arr.filter(i => moment(i, 'HH:mm:ss').format('HH') === moment(selectedHour.data, 'H').format('HH'));\n  return countOccurrences(exactTimes.map(i => moment(i, 'HH:mm:ss').format('HH:mm')));\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_WEEK_INSIGHTS = 'SET_WEEK_INSIGHTS';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\nconst ON_SHIFT_CLICK = 'ON_SHIFT_CLICK';\nconst REMOVE_ITEM = 'REMOVE_ITEM';\nconst RESET_SHIFT_SELECTION = 'RESET_SHIFT_SELECTION';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  weekInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedWeek: null,\n  selectedMonth: null,\n  shiftSelection: [],\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  daysOfWeek: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    case SET_WEEK_INSIGHTS:\n      return {\n        ...state,\n        weekInsights: action.val.weekInsights,\n        daysOfWeek: action.val.daysOfWeek,\n        selectedWeek: action.val.selectedWeek\n      };\n    case ON_SHIFT_CLICK:\n      return {\n        ...state,\n        shiftSelection: [...new Set(state.shiftSelection.concat(action.val))]\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        shiftSelection: state.shiftSelection.filter(item => item !== action.val)\n      };\n    case RESET_SHIFT_SELECTION:\n      return {\n        ...state,\n        shiftSelection: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekInsights = val => ({ type: SET_WEEK_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\nexport const onShiftClick = val => ({ type: ON_SHIFT_CLICK, val });\nexport const resetShiftSelection = val => ({ type: RESET_SHIFT_SELECTION, val });\nexport const removeItem = val => ({ type: REMOVE_ITEM, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\nconst RESET_COLORS = 'RESET_COLORS';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      const data = action.val && action.val.data;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay, data),\n        currentMonth: getCurrentMonth(selectedDay, data),\n        currentWeekdays: getCurrentWeekdays(selectedDay, data)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: [...new Set(state.colors.concat({\n            day: action.val.day,\n            value: action.val.value\n        }))]\n      });\n    case RESET_COLORS:\n      return {\n      ...state,\n        colors: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\nexport const resetColors = val => ({ type: RESET_COLORS, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst HIGHLIGHT_DAY = 'HIGHLIGHT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  highlightedWeekday: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case HIGHLIGHT_DAY:\n      return {\n        ...state,\n        highlightedWeekday: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const highlightDay = val => ({ type: HIGHLIGHT_DAY, val });\n","import { getExactTimes } from '../helpers/parser';\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst OPEN_MODAL = 'OPEN_MODAL';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false,\n  modalData: null,\n  timeArray: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalData: action.val && action.val.data,\n        timeArray: action.val ? getExactTimes(action.val.data, action.val.arr) : []\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const openModal = val => ({ type: OPEN_MODAL, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport {setWeekdayInsights, setMonthInsights, onShiftClick, resetShiftSelection, removeItem} from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nclass DayLabels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  onWeekdayClick = (ev, day) => {\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      }, () => {\n        this.state.toggle ? this.props.onShiftClick(day) : this.props.removeItem(day);\n      });\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      const weekdayInsights = getWeekdayInsights(day, this.props.dayInsights, this.props.allDays);\n      this.props.setWeekdayInsights({\n        selectedWeekday: weekdayInsights.selectedWeekday,\n        daysOfWeekday: weekdayInsights.daysOfWeekday,\n        weekdayInsights: weekdayInsights.weekdayInsights\n      });\n      this.props.showBarChart(true);\n      this.setState({\n        toggle: false\n      });\n    }\n  };\n\n  render() {\n    const weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n      return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n    });\n\n    return (\n      <div className='day-labels-container'>\n        {\n          weekArray.map(day =>\n            <text\n              key={day}\n              className={classNames('day-labels', {'bold': this.props.selectedWeekday === day || this.props.shiftSelection.indexOf(day) > -1})}\n              onClick={ev => this.onWeekdayClick(ev, day)}\n            >\n              {day}\n            </text>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\nconst getDaysArrayByMonth = (month, year, data) => {\n  let daysInMonth = moment(month, 'M').daysInMonth();\n  const arrDays = [];\n\n  while(daysInMonth) {\n    const current = moment(month, 'M').date(daysInMonth).format(`${year}-MM-DD`);\n    Object.keys(data).find(key => key === current) && arrDays.push(current);\n    daysInMonth--;\n  }\n  return arrDays;\n};\n\nexport const getAverageColor = props => {\n  let rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  let filteredColors = [];\n  const insertMissingColors = daysArray => {\n    daysArray.forEach(day => {\n      if (!filteredColors.find(color => moment(color.day, 'DD-MM-YYYY').format('YYYY-MM-DD') === day)) {\n        const value = d3.color(getColors(props.data).oranges(props.data[day]));\n        filteredColors.push({\n          day,\n          value\n        });\n      }\n    })\n  };\n  if (props.selectedWeek) {\n    filteredColors = props.colors.filter(color => moment(color.day).isoWeek() === props.selectedWeek && color);\n    const daysArray = Object.keys(props.allDays).filter(key => moment(key).isoWeek() === props.selectedWeek);\n    insertMissingColors(daysArray);\n  }\n\n  if (props.selectedMonth) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('M') === props.selectedMonth && color);\n    const daysArray = getDaysArrayByMonth(props.selectedMonth, moment(props.minDate).format('YYYY'), props.data);\n    insertMissingColors(daysArray);\n  }\n\n  if (props.selectedWeekday) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('ddd') === props.selectedWeekday && color);\n    const daysArray = Object.keys(props.allDays).filter(key => moment(key).isoWeekday() === moment(props.selectedWeekday, 'ddd').isoWeekday());\n    insertMissingColors(daysArray);\n  }\n\n  filteredColors.forEach(color => {\n    rgb.r += color.value.r;\n    rgb.g += color.value.g;\n    rgb.b += color.value.b;\n  });\n\n  return d3.rgb(rgb.r / filteredColors.length, rgb.g / filteredColors.length, rgb.b / filteredColors.length);\n};\n\nconst contains = (arr, showOverview, item) => {\n  if (arr && showOverview) {\n    let i = arr.length;\n    while (i--) {\n      if (arr[i] === item) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\nexport const getAdjacentDayColor = (props, day) => {\n  const item = Object.keys(props.data).find(key => moment(key, 'YYYY-MM-DD').format('DD-MM-YYYY') === day);\n  if (item) {\n    return d3.color(getColors(props.data).oranges(props.data[item]));\n  }\n  return '#efefef';\n};\n\nexport const getColors = data => {\n  const min = d3.min(Object.values(data));\n  const max = d3.max(Object.values(data));\n  return {\n    purples: purplePalette(min, max),\n    oranges: orangePalette(min, max),\n    blues: bluePalette(min, max)\n  }\n};\n\nconst purplePalette = (min, max) => {\n  const d = (max-min)/20;\n  return d3.scaleThreshold()\n    .range(['#dadaeb','#d1d0e6','#c9c7e1','#c0bedc','#b7b5d7','#afacd2','#a6a3ce','#9e9ac9','#9591c4','#8c89c0','#8380bc','#7d76b7','#786db2','#7464ad','#6f5aa8','#6950a3','#64469e','#5f3d99','#5a3294','#54278f'])\n    .domain([min+d,min+2*d,min+3*d,min+4*d,min+5*d,min+6*d,min+7*d,min+8*d,min+9*d,min+10*d,min+11*d,min+12*d,min+13*d,min+14*d,min+15*d,min+16*d,min+17*d,min+18*d,min+19*d,min+20*d]);\n};\n\nconst orangePalette = (min, max) => {\n  const d = (max-min)/10;\n  return d3.scaleThreshold()\n    .range(['#fdd0a2','#febb81','#fea763','#fd9243','#f67e30','#ea6c23','#dc5c18','#cb4d0e','#b94107','#a63603'])\n    .domain([min+d,min+2*d,min+3*d,min+4*d,min+5*d,min+6*d,min+7*d,min+8*d,min+9*d,min+10*d]);\n};\n\nconst bluePalette = (min, max) => {\n  const d = (max-min)/10;\n  return d3.scaleThreshold()\n    .range(['#9ecae1','#86bbdb','#6faed5','#599fce','#4190c5','#3581bd','#2a72b3','#2063a9','#15549f','#084594'])\n    .domain([min+d,min+2*d,min+3*d,min+4*d,min+5*d,min+6*d,min+7*d,min+8*d,min+9*d,min+10*d]);\n};\n\nexport const getDayColor = (props, isCurrentDay) => {\n  const item = Object.keys(props.data).find(key => new Date(key).setHours(0,0,0,0) === props.day.setHours(0,0,0,0));\n\n  if (item) {\n    const day = moment(props.day).format('DD-MM-YYYY');\n\n    const isCurrentWeek = contains(props.currentWeek, props.showWeekOverview, day) ||\n      (props.selectedWeek && props.selectedWeek === moment(props.day).isoWeek()) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).isoWeek()) > -1);\n    const isCurrentMonth = contains(props.currentMonth, props.showMonthOverview, day) ||\n      (props.selectedMonth && props.selectedMonth === moment(props.day).format('M')) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).format('MMMM')) > -1);\n    const isCurrentWeekday = contains(props.currentWeekdays.daysArr, props.showWeekdayOverview, day) ||\n      (props.selectedWeekday && props.selectedWeekday === moment(props.day).format('ddd')) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).format('ddd')) > -1);\n    const isHighlightedDay = props.highlightedWeekday && props.highlightedWeekday === moment(props.day).format('ddd');\n    const isSelected = !!props.shiftSelection.length &&\n      (props.shiftSelection.indexOf(moment(props.day).format('YYYY-MM-DD')) > -1 ||\n        props.shiftSelection.indexOf('all') > -1);\n\n    const colors = getColors(props.data);\n    const interpolateColor = (isCurrentDay || isSelected || isCurrentWeek || isCurrentMonth || isCurrentWeekday || isHighlightedDay)\n      ? (isHighlightedDay ? colors.blues(props.data[item]) : colors.oranges(props.data[item]))\n      : colors.purples(props.data[item]);\n\n    return {\n      count: props.data[item],\n      fillColor: interpolateColor\n    }\n  }\n\n  return {\n    fillColor: '#efefef',\n    count: 0\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {\n  onShiftClick, removeItem,\n  resetShiftSelection,\n  setMonthInsights,\n  setWeekdayInsights,\n  setWeekInsights\n} from '../../reducers/app';\nimport {getAdjacentDayColor, getDayColor, getColors} from '../../helpers/colors';\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.selectedWeek !== nextProps.selectedWeek ||\n      this.isEqual(nextProps) ||\n      this.props.fill !== nextProps.fill ||\n      this.props.highlightedWeekday !== nextProps.highlightedWeekday ||\n      this.props.shiftSelection !== nextProps.shiftSelection ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  isEqual = nextProps => {\n    const isCurrentWeek = (nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentMonth = (nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentWeekday = (nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    return isCurrentWeek || isCurrentMonth || isCurrentWeekday;\n  };\n\n  onDayClick = (ev, day, color) => {\n    console.log(this.refs.day.getBoundingClientRect())\n    ev.stopPropagation();\n    const formattedDay = moment(day).format('YYYY-MM-DD');\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      }, () => {\n        this.state.toggle ? this.props.onShiftClick(formattedDay) : this.props.removeItem(formattedDay);\n      });\n    } else {\n      this.props.setMonthInsights({\n        selectedMonth: null,\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setWeekInsights({\n        selectedWeek: null,\n        daysOfWeek: [],\n        weekInsights: []\n      });\n      this.props.resetShiftSelection();\n      const color = d3.color(getColors(this.props.data).oranges(this.props.data[formattedDay]));\n      this.props.selectDay({ day, color, data: this.props.data });\n      this.props.showBarChart(true);\n      const previousDay = moment(day).subtract(1, 'd').format('DD-MM-YYYY');\n      const nextDay = moment(day).add(1, 'd').format('DD-MM-YYYY');\n      const isColorSaved = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n      const isPreviousColorSaved = this.props.colors.find(color => color.day === previousDay);\n      const isNextColorSaved = this.props.colors.find(color => color.day === nextDay);\n      !isColorSaved && this.props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value: color });\n      !isPreviousColorSaved && this.props.saveColor({ day: previousDay, value: getAdjacentDayColor(this.props, previousDay) });\n      !isNextColorSaved && this.props.saveColor({ day: nextDay, value: getAdjacentDayColor(this.props, nextDay) });\n    }\n  };\n\n  render() {\n    const props = this.props;\n    const { cellMargin, cellSize } = this.props;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const color = getDayColor(props, isCurrentDay);\n\n    const isSelected = !!props.shiftSelection.length &&\n      (moment(d).format('M') === props.selectedMonth ||\n        moment(d).isoWeek() === props.selectedWeek ||\n        moment(d).format('ddd') === props.selectedWeekday ||\n        moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY'));\n\n    const showStroke = isCurrentDay || (isSelected && props.data[moment(d).format('YYYY-MM-DD')]);\n\n    return (\n      <rect\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${color.count}`}\n        data-for='svgTooltip'\n        ref='day'\n        key={d}\n        className='day fade-in'\n        stroke={showStroke ? '#000' : ''}\n        strokeWidth={showStroke ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={color.fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin + 20}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={ev => this.onDayClick(ev, d, color)}\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeek: state.app.selectedWeek,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  highlightedWeekday: state.radialChart.highlightedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights, getWeekInsights } from '../../helpers/parser';\nimport { setWeekInsights, setMonthInsights, setWeekdayInsights, onShiftClick, resetShiftSelection, removeItem } from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\nimport ReactTooltip from \"react-tooltip\";\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1,\n      toggle: false\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n    this.brush = d3.brush()\n      .on('end', this.brushEnd);\n    d3.select(this.refs.brush).call(this.brush);\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n    ReactTooltip.rebuild();\n  }\n\n  brushEnd = () => {\n    if (!d3.event.selection) {\n      return;\n    }\n    const [x1, x2] = d3.event.selection;\n\n    console.log(x1, x2);\n  };\n\n  showMoreData = () => {\n    let { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth() + 1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count + 2 }));\n    }\n  };\n\n  getWeeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  renderMonthOverview = (ev, month) => {\n    ev.stopPropagation();\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      }, () => {\n        this.state.toggle ? this.props.onShiftClick(month) : this.props.removeItem(month);\n      });\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setWeekInsights({\n        selectedWeek: null,\n        daysOfWeek: [],\n        weekInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), this.props.dayInsights, this.props.allDays);\n      this.props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      this.props.showBarChart(true);\n    }\n  };\n\n  renderWeekOverview = (ev, week) => {\n    ev.stopPropagation();\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      }, () => {\n        this.state.toggle ? this.props.onShiftClick(week) : this.props.removeItem(week);\n      });\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setMonthInsights({\n        selectedMonth: null,\n        daysOfMonth: [],\n        monthInsights: []\n      });\n      const weekInsights = getWeekInsights(week, this.props.dayInsights, this.props.allDays);\n      this.props.setWeekInsights({\n        selectedWeek: weekInsights.selectedWeek,\n        daysOfWeek: weekInsights.daysOfWeek,\n        weekInsights: weekInsights.weekInsights\n      });\n      this.props.showBarChart(true);\n    }\n  };\n\n  renderDays = (renderList, isCurrentMonth) =>\n    renderList.map(d =>\n      <Day fill={isCurrentMonth || moment(d).format('ddd') === this.props.selectedWeekday}\n           day={d} month={this.props.month}\n           key={d}\n           className='day'\n      />\n      );\n\n  getWeekIndices = month => {\n    const firstDayOfMonth = moment(month).startOf('month');\n    const lastDayOfMonth = moment(month).endOf('month');\n    let weekIndices = [];\n\n    let currentDay = moment(firstDayOfMonth);\n    weekIndices.push(currentDay.isoWeek());\n\n    while(currentDay.month() === firstDayOfMonth.month()) {\n      currentDay.add(1, 'weeks');\n      weekIndices.push(currentDay.isoWeek());\n    }\n\n    if (currentDay.isoWeek() !== lastDayOfMonth.isoWeek()) {\n      weekIndices.pop();\n    }\n\n    return weekIndices;\n  };\n\n  renderWeekLabels = (cellSize, cellMargin, month) => {\n    const arr = this.getWeekIndices(month);\n    const nrOfWeeks = arr.length;\n    let offsets = [0.1, 0.3, 0.5, 0.7, 0.9, 1.1].slice(0, nrOfWeeks);\n    return arr.map((week, i) =>\n      <text\n        className={classNames('week slow-fade-in', {'bold': this.props.selectedWeek === week || this.props.shiftSelection.indexOf(week) > -1})}\n        key={week}\n        y={cellSize}\n        x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month)))) * offsets[i]}\n        textAnchor='middle'\n        onClick={ev => this.renderWeekOverview(ev, week)}\n      >\n        { week }\n      </text>\n    )\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 50)}\n        width={(cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          {\n          endReached &&\n            <text\n              className={classNames('month-name', 'slow-fade-in', {'bold': isCurrentMonth || this.props.shiftSelection.indexOf(monthName(month)) > -1})}\n              y={(cellSize * 7) + (cellMargin * 8) + 35}\n              x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 1))) / 2}\n              textAnchor='middle'\n              onClick={ev => this.renderMonthOverview(ev, monthName(month))}\n            >\n              { monthName(month) }\n            </text>\n          }\n          { endReached && this.renderWeekLabels(cellSize, cellMargin, month) }\n          { this.renderDays(renderList, isCurrentMonth) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    const monthsArr = this.getChunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper' ref='brush' onClick={ev => ev.stopPropagation()}>\n        {\n          monthsArr.map((months, i) =>\n            <g className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </g>\n          )\n        }\n        <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nconst Card = props =>\n  <div className={`card ${props.className}`} id='card' onKeyDown={props.onKeyDown} tabIndex={props.tabIndex}>\n    {props.children}\n  </div>;\n\nexport default Card;\n","import React from 'react';\n\nimport './Section.scss';\n\nconst Section = props =>\n  <section className={`section ${props.className || ''}`}>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import moment from 'moment';\nimport * as d3 from \"d3\";\nimport {getAdjacentDayColor} from \"./colors\";\nimport {getMonthInsights, getWeekdayInsights, getWeekInsights} from \"./parser\";\n\nconst getUnit = props => {\n  if (props.selectedMonth) {\n    return 'months';\n  } else if (props.selectedWeekday || props.selectedWeek) {\n    return 'weeks';\n  } else {\n    return 'days';\n  }\n};\n\nconst pickDay = (day, props) => {\n  props.setMonthInsights({\n    monthInsights: [],\n    daysOfMonth: [],\n    selectedMonth: null\n  });\n  props.setWeekdayInsights({\n    selectedWeekday: null,\n    daysOfWeekday: [],\n    weekdayInsights: []\n  });\n  props.setWeekInsights({\n    weekInsights: [],\n    daysOfWeek: [],\n    selectedWeek: null\n  });\n  const color = props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n  let value = color && d3.color(color.value);\n  if (!value) {\n    value = getAdjacentDayColor(props, moment(day).format('DD-MM-YYYY'), moment(day).startOf('month'));\n    props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value });\n  }\n  props.selectDay({ day, color: value, data: props.data });\n  props.showBarChart(true);\n};\n\nconst pickWeek = (week, props) => {\n  props.selectDay(null);\n  props.setWeekdayInsights({\n    selectedWeekday: null,\n    daysOfWeekday: [],\n    weekdayInsights: []\n  });\n  props.setMonthInsights({\n    monthInsights: [],\n    daysOfMonth: [],\n    selectedMonth: null\n  });\n  const weekInsights = getWeekInsights(week, props.dayInsights, props.allDays);\n  props.setWeekInsights({\n    selectedWeek: weekInsights.selectedWeek,\n    daysOfWeek: weekInsights.daysOfWeek,\n    weekInsights: weekInsights.weekInsights\n  });\n  props.showBarChart(true);\n};\n\nconst pickMonth = (month, props) => {\n  props.selectDay(null);\n  props.setWeekdayInsights({\n    selectedWeekday: null,\n    daysOfWeekday: [],\n    weekdayInsights: []\n  });\n  props.setWeekInsights({\n    weekInsights: [],\n    daysOfWeek: [],\n    selectedWeek: null\n  });\n  const monthInsights = getMonthInsights(month.toString(), props.dayInsights, props.allDays);\n  props.setMonthInsights({\n    selectedMonth: monthInsights.selectedMonth,\n    daysOfMonth: monthInsights.daysOfMonth,\n    monthInsights: monthInsights.monthInsights\n  });\n  props.showBarChart(true);\n};\n\nconst pickWeekday = (weekday, props) => {\n  props.selectDay(null);\n  props.setMonthInsights({\n    monthInsights: [],\n    daysOfMonth: [],\n    selectedMonth: null\n  });\n  const weekdayInsights = getWeekdayInsights(weekday, props.dayInsights, props.allDays, props.currentWeekdays, props.data);\n  props.setWeekdayInsights({\n    weekdayInsights: weekdayInsights.weekdayInsights,\n    daysOfWeekday: weekdayInsights.daysOfWeekday,\n    selectedWeekday: weekdayInsights.selectedWeekday\n  });\n  props.showBarChart(true);\n};\n\nexport const select = (val, props) => {\n  const selectedItem = props.selectedMonth || props.selectedWeekday || props.selectedDay || props.selectedWeek;\n  const unit = getUnit(props);\n\n  if (props.selectedDay) {\n    pickDay(moment(selectedItem).add(val, unit), props);\n  } else if (props.selectedWeek) {\n    pickWeek(parseInt(props.selectedWeek) + val, props);\n  } else if (props.selectedMonth) {\n    pickMonth(parseInt(selectedItem) + val, props);\n  } else if (props.selectedWeekday) {\n    const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n    pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + val)).format('ddd'), props);\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {saveColor, selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights, setWeekInsights} from '../../reducers/app';\nimport {select} from '../../helpers/navigator';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeek !== this.props.selectedWeek ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  getUnit = () => {\n    if (this.props.selectedMonth) {\n      return 'months';\n    } else if (this.props.selectedWeekday || this.props.selectedWeek) {\n      return 'weeks';\n    } else {\n      return 'days';\n    }\n  };\n\n  getString = selectedItem => {\n    if (this.props.selectedMonth) {\n      return moment(this.props.selectedMonth, 'M').format('MMMM');\n    } else if (this.props.selectedWeek) {\n      return `Week ${this.props.selectedWeek}`;\n    } else if (this.props.selectedWeekday) {\n      return `${moment(this.props.selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      return moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n  };\n\n  showArrows = (selectedItem, unit, minDate, maxDate) => {\n    if (selectedItem) {\n      const previousItem = moment(selectedItem).subtract(1, unit);\n      const nextItem = moment(selectedItem).add(1, unit);\n      const prev = previousItem.format(`${moment(minDate).year()}-MM-DD`);\n      const min = minDate.startOf('year').format('YYYY-MM-DD');\n      const next = nextItem.format(`${moment(maxDate).year()}-MM-DD`);\n      const max = maxDate.startOf('year').format('YYYY-MM-DD');\n      return {\n        previous: moment(prev).isSameOrAfter(moment(min)),\n        next: moment(next).isSameOrBefore(moment(max))\n      }\n    }\n  };\n\n  render() {\n    const { minDate, maxDate, selectedMonth, selectedDay, selectedWeekday, selectedWeek } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay || selectedWeek;\n    const unit = this.getUnit();\n\n    const showArrows = this.showArrows(selectedItem, unit, minDate, maxDate);\n    const showPreviousArrow = showArrows && showArrows.previous;\n    const showNextArrow = showArrows && showArrows.next;\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}>\n        <i\n          className={classNames('fas fa-chevron-left')}\n          onClick={() => showPreviousArrow && select(-1, this.props)}\n        />\n        { this.getString(selectedItem) }\n        <i\n          className={classNames('fas fa-chevron-right')}\n          onClick={() => showNextArrow && select(1, this.props)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale)\n      .ticks(24)\n      .tickFormat(d3.timeFormat('%H'));\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      >\n        <text x={this.props.width - 70}\n              y={35}\n              textAnchor='middle'\n              fill='#000'\n              fontSize={12}>\n          Hour of the day\n        </text>\n      </g>\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale)\n      .ticks(this.props.nrOfTicks)\n      .tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n    d3.select(this.refs.yAxis)\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 10 - this.props.margin.left)\n      .attr('x', -36)\n      .attr('dy', '1em')\n      .style('fill', '#000')\n      .style('font-size', 12)\n      .style('text-anchor', 'middle')\n      .text('Observations');\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { openModal } from '../../reducers/barChart';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  openModal = d => {\n    let arr;\n    if (this.props.selectedDay) {\n      arr = this.props.dayInsights[this.props.selectedDay];\n    }\n    if (this.props.selectedMonth) {\n      arr = this.props.monthInsights;\n    }\n    if (this.props.selectedWeek) {\n      arr = this.props.weekInsights;\n    }\n    if (this.props.selectedWeekday) {\n      arr = this.props.weekdayInsights;\n    }\n    arr && this.props.openModal({ data: d, arr });\n  };\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n\n    current.interrupt();\n\n    const color = this.props.color;\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('id', (d, i) => `bar-${i}`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => this.openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `${d.occurrences} occurrences<br>between ${moment(d.data, 'hh').format('H:mm')} - ${moment(parseInt(d.data)+1, 'hh').format('H:mm')}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekInsights: state.app.weekInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeek: state.app.selectedWeek,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bars);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport {openModal} from \"../../reducers/barChart\";\n\nclass AreaChart extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { xScaleArea, yScale, plotHeight, color, plotData, openModal, dayInsights, selectedDay,\n      selectedMonth, selectedWeek, selectedWeekday, monthInsights, weekInsights, weekdayInsights } = this.props;\n\n    const getPosition = i => {\n      const lines = document.getElementsByClassName('line');\n      let pos;\n\n      let beginning = 0,\n        end = lines && lines[i].getTotalLength(),\n        target = null;\n\n      while (end){\n        target = Math.floor((beginning + end) / 2);\n        pos = lines[i].getPointAtLength(target);\n        if ((target === end || target === beginning) && pos.x !== mouseX) {\n          break;\n        }\n        if (pos.x > mouseX)      end = target;\n        else if (pos.x < mouseX) beginning = target;\n        else break; //position found\n      }\n\n      return pos;\n    };\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const formatTime = d3.timeFormat('%H');\n    const parseTime = d3.timeParse('%H');\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        const pos = getPosition(i);\n        const x = xScaleArea.invert(pos.x);\n\n        d3.selectAll('.bar')\n          .attr('fill', d =>  formatTime(parseTime(d.data)) === formatTime(x) ? d3.rgb(color).darker() : color);\n\n        d3.select('.line-text')\n          .style('fill', '#7888BF')\n          .style('font-weight', 'bold')\n          .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n\n    const hide = () => {\n      d3.select('.bar-rectangle')\n        .style('opacity', 0);\n      d3.select('.bar-text')\n        .style('opacity', 0);\n      d3.select('.bar-circle')\n        .style('opacity', 0);\n    };\n\n    const openModalBox = item => {\n      let arr;\n      if (selectedDay) {\n        arr = dayInsights[moment(selectedDay).format('YYYY-MM-DD')];\n      }\n      if (selectedMonth) {\n        arr = monthInsights;\n      }\n      if (selectedWeek) {\n        arr = weekInsights;\n      }\n      if (selectedWeekday) {\n        arr = weekdayInsights;\n      }\n      arr && openModal({ data: item, arr });\n    };\n\n    d3.selectAll('.mouse-per-bar')\n      .attr('transform', function(d, i) {\n\n        const bars = plotData.map(i => moment(i.data, 'H').format('HH'));\n\n        const x = xScaleArea.invert(getPosition(i).x);\n\n        if (bars.indexOf(formatTime(x)) > -1) {\n          const item = plotData.find(i => moment(i.data, 'H').format('HH') === formatTime(x));\n          d3.select('.mouse-over-effects')\n            .style('cursor', 'pointer')\n            .on('click', () => {\n              hide();\n              openModalBox(item);\n            });\n\n          d3.select('.bar-rectangle')\n            .style('opacity', 0.9);\n          d3.select('.bar-text')\n            .style('opacity', 1)\n            .style('fill', d3.rgb(color).darker())\n            .style('font-weight', 'bold')\n            .text(item.occurrences);\n          d3.select('.bar-circle')\n            .style('opacity', 1);\n          return `translate(${mouseX},${item.y - 3.8})`\n        } else {\n          d3.select('.bar-rectangle')\n            .style('opacity', 0);\n          d3.select('.bar-circle')\n            .style('opacity', 0);\n        }\n        d3.select('.mouse-over-effects')\n          .style('cursor', 'auto')\n          .on('click', null);\n        hide();\n      });\n  };\n\n  setLineOpacity = val => {\n    d3.select('.mouse-line')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-circle')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-text')\n      .style('opacity', val);\n  };\n\n  render() {\n    const { xScaleArea, plotWidth, plotHeight, margin, yScale, insights } = this.props;\n\n    const parseTime = d3.timeParse('%H:%M');\n\n    const area = d3.area()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(insights[d]))\n      .curve(d3.curveMonotoneX);\n\n    const line = d3.line()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y(d => yScale(insights[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(insights))}\n        />\n        <path className='line shadow'\n              d={line(Object.keys(insights))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#777'\n            strokeWidth={1}\n            strokeDasharray='3,3'\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              className='line-circle'\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <rect\n              className='line-rectangle'\n              x={10}\n              y={-14}\n              opacity={0}\n            >\n            </rect>\n            <text\n              className='line-text'\n              fontSize={14}\n              transform='translate(16,3)'\n            />\n          </g>\n          <g className='mouse-per-bar'>\n            <circle\n              className='bar-circle'\n              r={5}\n              fill={d3.rgb(this.props.color).darker()}\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <rect\n              className='bar-rectangle'\n              x={-50}\n              y={-14}\n              opacity={0}\n            >\n            </rect>\n            <text\n              className='bar-text'\n              transform='translate(-35,3)'\n              fontSize={14}\n              opacity={0}\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            transform='translate(0,0)'\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => this.setLineOpacity('0')}\n            onMouseOver={() => this.setLineOpacity('1')}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekInsights: state.app.weekInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeek: state.app.selectedWeek,\n  selectedWeekday: state.app.selectedWeekday,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './Modal.scss';\n\nimport { openModal } from \"../../reducers/barChart\";\nimport moment from 'moment';\nimport clock from \"../../icons/clock.svg\";\n\nclass Modal extends React.PureComponent {\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  handleKeyUp = ev => {\n    if (ev.key === 'Escape') {\n      ev.preventDefault();\n      this.hideModal();\n    }\n  };\n\n  hideModal = () => {\n    this.props.openModal(null);\n  };\n\n  convertRange = (val, r1, r2 )=> (val - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\n  getString = selectedItem => {\n    if (this.props.selectedMonth) {\n      return moment(this.props.selectedMonth, 'M').format('MMMM');\n    } else if (this.props.selectedWeek) {\n      return `Week ${this.props.selectedWeek}`;\n    } else if (this.props.selectedWeekday) {\n      return `${moment(this.props.selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      return moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n  };\n\n  render() {\n    const { selectedDay, selectedMonth, selectedWeekday, selectedWeek, modalData, timeArray } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay || selectedWeek;\n      return (\n      <div className={classNames('modal', 'fade-in', {'display-block': modalData}, {'display-none': !modalData})} onClick={this.hideModal}>\n        <section className='modal-main' onClick={ev => ev.stopPropagation()}>\n          <i className='fas fa-times' onClick={this.hideModal} />\n          <div className='modal-title'>{ this.getString(selectedItem) }</div>\n          {modalData && <div>between {moment(modalData.data, 'hh').format('H:mm')} - {moment(parseInt(modalData.data)+1, 'hh').format('H:mm')}</div>}\n          <div className='clock-icon'>\n            <img src={clock} alt='' width={50} height={50} />\n          </div>\n          <div className='time-container'>\n            {\n              Object.keys(timeArray).map(key =>\n                  <span className='time' style={{ fontSize: this.convertRange(timeArray[key], [1,20], [15,50]) }}>\n              {key}\n            </span>\n              )\n            }\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  modalData: state.barChart.modalData,\n  timeArray: state.barChart.timeArray,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {selectDay} from '../../reducers/calendar';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.selectDay(null);\n    props.onReset();\n  };\n  const renderCheckboxes = () =>\n    <div className='checkboxes'>\n       <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n         Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n         Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n         Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n       </span>\n    </div>;\n\n  return (\n    <div className='footer year-label'>\n      { props.showFooter ? renderCheckboxes() : <div className='checkboxes'/> }\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights, getShiftSelectionInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport Modal from '../widget/Modal';\nimport { showBarChart, showMonthOverview, showWeekdayOverview, showWeekOverview } from '../../reducers/barChart';\nimport {saveColor} from '../../reducers/calendar';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\nimport {getAverageColor} from \"../../helpers/colors\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    const smallerScreen = document.getElementById('card').clientWidth < 900;\n    const val = smallerScreen ? 1 : 0.66;\n    this.state = {\n      width: (document.getElementById('card').clientWidth - props.margin.left - props.margin.right) * val\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    const smallerScreen = document.getElementById('card').clientWidth < 900;\n    const val = smallerScreen ? 1 : 0.66;\n    this.setState({\n      width: (document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right) * val\n    });\n  };\n\n  getData = () => {\n    if (!!this.props.weekInsights.length) {\n      return this.props.daysOfWeek;\n    }\n    if (!!this.props.monthInsights.length) {\n      return this.props.daysOfMonth;\n    }\n    if (!!this.props.weekdayInsights.length) {\n      return this.props.daysOfWeekday;\n    }\n    return this.props.plotData;\n  };\n\n  getInsights = () => {\n    if (this.props.isWeekOverviewChecked) {\n      return getCurrentWeekInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isMonthOverviewChecked) {\n      return getCurrentMonthInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      return getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.data).weekdayObj;\n    }\n    if (!!this.props.shiftSelection.length) {\n      return getShiftSelectionInsights(this.props.shiftSelection, this.props.data, this.props.dayInsights, this.props.allDays).selectedDaysObj\n    }\n  };\n\n  showAreaChart = () => this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked || !!this.props.shiftSelection.length;\n\n  updateScale = data => {\n    const xScale = d3.scaleTime();\n    const xScaleArea = d3.scaleTime();\n    const yScale = d3.scaleLinear().nice();\n\n    const insights = this.getInsights();\n\n    const max = insights ?\n      Math.ceil(Math.max(d3.max(Object.values(insights).map(i => Math.ceil(i))), d3.max(Object.values(data).map(i => Math.ceil(i))))) :\n      d3.max(Object.values(data));\n\n    const yDomain = [0, this.showAreaChart() ? max + max / 12 : max];\n\n    const parseTime = d3.timeParse('%H:%M');\n    const midnight = parseTime('00:00');\n    const halfPastMidnight = parseTime('23:30');\n\n    xScale\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    xScaleArea\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([-20, this.state.width - this.props.margin.right + 20]);\n\n    yScale\n      .domain(yDomain)\n      .range([this.props.height - this.props.margin.top - this.props.margin.bottom, 0]);\n\n    return {xScale, yScale, xScaleArea};\n  };\n\n  updatePlotSize = () => {\n    const plotWidth = this.state.width - (this.props.margin.left + this.props.margin.right);\n    const plotHeight = this.props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    const data = this.getData();\n\n    const { xScale, yScale, xScaleArea } =  this.updateScale(data);\n    const { plotWidth, plotHeight } = this.updatePlotSize();\n\n    const max = d3.max(Object.values(data).map(i => Math.ceil(i)));\n    let nrOfTicks = max;\n    if (max > 10) {\n      nrOfTicks = max / 2;\n    }\n    if (max > 20) {\n      nrOfTicks = max / 4;\n    }\n    if (max > 40) {\n      nrOfTicks = max / 8;\n    }\n\n    const parseTime = d3.timeParse('%H');\n\n    const metaData = {\n      xScale,\n      yScale,\n      xScaleArea,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const areaChartData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScaleArea(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n    const color = this.props.color || getAverageColor(this.props);\n\n    const showFooter = !(this.props.selectedMonth || this.props.selectedWeekday || this.props.selectedWeek);\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight - 50})`} margin={this.props.margin} width={this.state.width} height={this.props.plotHeight}/>\n            <YAxis {...metaData} margin={this.props.margin} height={plotHeight} />\n            <Bars {...metaData} {...plotData} color={color}/>\n            {this.showAreaChart() &&\n            <AreaChart {...metaData} {...areaChartData} margin={this.props.margin} insights={this.getInsights()} color={color}/>}\n          </g>\n        </svg>\n        <Footer showFooter={showFooter} />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n        <Modal />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfWeek: state.app.daysOfWeek,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedWeek: state.app.selectedWeek,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection,\n  selectedDays: state.app.selectedDays,\n  data: state.app.data,\n  allDays: state.app.allDays,\n  minDate: state.app.minDate,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\nimport {select} from \"../../helpers/navigator\";\nimport {saveColor, selectDay} from \"../../reducers/calendar\";\nimport {showBarChart} from \"../../reducers/barChart\";\nimport {setMonthInsights, setWeekdayInsights, setWeekInsights} from \"../../reducers/app\";\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[moment(props.selectedDay).format('YYYY-MM-DD')] ||\n    !!props.weekInsights.length ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    plotData: props.plotData,\n    margin: props.margin,\n    height: props.height\n  };\n\n  return (\n    <Section className='section-two-thirds'>\n      <Card tabIndex={0} onKeyDown={ev =>\n        (ev.key === 'ArrowLeft' && select(-1, props)) ||\n        (ev.key === 'ArrowRight' && select(1, props))\n      }>\n        <DayLabel selectedDay={moment(props.selectedDay).format('YYYY-MM-DD')} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport classNames from 'classnames';\n\nimport { setWeekdayInsights } from '../../reducers/app';\nimport { highlightDay } from '../../reducers/radialChart';\nimport {getWeekdayInsights} from '../../helpers/parser';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay} from '../../reducers/calendar';\n\nimport './RadialChart.scss';\n\nclass RadialChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true\n    }\n  }\n\n  componentDidMount() {\n    this.renderArcs();\n  }\n\n  componentDidUpdate() {\n    this.renderArcs();\n  }\n\n  normalize = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n  };\n\n  getPercentage = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (80 - 5) * ((val - min) / (max - min)) + 5;\n  };\n\n  renderArcs = () => {\n    const svg = d3.select(this.refs.radialChart);\n\n    const { setWeekdayInsights, highlightDay, dayInsights, allDays, showBarChart } = this.props;\n\n    const width = 350;\n    const arcSize = (5 * width / 100);\n    const innerRadius = arcSize * 2;\n\n    const keysArray = Object.keys(this.props.data)\n      .sort((a, b) => moment(a, 'ddd').isoWeekday() - moment(b, 'ddd').isoWeekday());\n\n    const data = keysArray.map(key => {\n      return {\n        defaultValue: this.props.data[key],\n        value: this.getPercentage(this.props.data[key]),\n        label: key,\n        color: d3.interpolateBlues(this.normalize(this.props.data[key]))\n      }\n    });\n\n    const arcs = data.map((obj, i) => {\n      return d3.arc().innerRadius(i * arcSize + innerRadius).outerRadius((i + 1) * arcSize - (width / 100) + innerRadius);\n    });\n\n    const arcsGrey = data.map(function (obj, i) {\n      return d3.arc().innerRadius(i * arcSize + (innerRadius + ((arcSize / 2) - 2))).outerRadius((i + 1) * arcSize - ((arcSize / 2)) + (innerRadius));\n    });\n\n    const pieData = data.map(function (obj, i) {\n      return [\n        {value: obj.value * 0.75, arc: arcs[i], object: obj},\n        {value: (100 - obj.value) * 0.75, arc: arcsGrey[i], object: obj},\n        {value: 100 * 0.25, arc: arcs[i], object: obj}];\n    });\n\n    const pie = d3.pie()\n      .sort(null)\n      .value(d => d.value);\n\n    const g = svg.selectAll('g').data(pieData)\n      .enter()\n      .append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    const gText = svg.selectAll('g.textClass').data([{}]).enter()\n      .append('g')\n      .classed('textClass', true)\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    g.selectAll('path').data(function (d) {\n      return pie(d);\n    })\n      .enter()\n      .append('path')\n      .attr('id', function (d, i) {\n        if (i === 0) {\n          return 'Arc' + d.data.object.label;\n        }\n        if (i === 1) {\n          return 'Text' + d.data.object.label;\n        }\n      })\n      .style('cursor', 'pointer')\n      .on('click', function (d, i) {\n        const weekdayInsights = getWeekdayInsights(d.data.object.label, dayInsights, allDays);\n        setWeekdayInsights({\n          selectedWeekday: weekdayInsights.selectedWeekday,\n          daysOfWeekday: weekdayInsights.daysOfWeekday,\n          weekdayInsights: weekdayInsights.weekdayInsights\n        });\n        showBarChart(true);\n        selectDay(null);\n      })\n      .on('mouseover', function (d, i) {\n        if (i === 0) {\n          const id = d3.select(this).attr('id');\n          d3.selectAll('.radial-chart path')\n            .transition()\n            .filter(function () {\n              return d3.select(this).attr('id') !== id;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n\n          d3.selectAll('.textClass text')\n            .transition()\n            .filter(function () {\n              return d3.select(this).text() !== d.data.object.label;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n\n          d3.selectAll('.textpath')\n            .transition()\n            .filter(function () {\n              return d3.select(this).text() !== d.data.object.value;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n          highlightDay(d.data.object.label);\n        }\n      })\n      .on('mouseleave', (d, i) => {\n        d3.selectAll('.radial-chart path').attr('opacity', 1);\n        d3.selectAll('.textClass text').attr('opacity', 1);\n        d3.selectAll('.textpath').attr('opacity', 1);\n        highlightDay(null);\n      })\n      .attr('fill', (d, i) => i === 0 ? d.data.object.color : i === 1 ? '#F1F1F1' : 'none')\n      .transition()\n      .duration(1000)\n        .attrTween('d', function (d) {\n          const i = d3.interpolate(d.startAngle+0.1, d.endAngle);\n          return function(t) {\n            d.endAngle = i(t);\n            return d.data.arc(d);\n          }\n      });\n\n    svg.selectAll('g').each(function (d, index) {\n      const el = d3.select(this);\n      el.selectAll('path').each(function (r, i) {\n        if (i === 1) {\n          const labelObj = r.data.object;\n          g.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', '#777')\n            .attr('dominant-baseline', 'central')\n            .append('textPath')\n            .attr('class', 'textpath')\n            .attr('textLength', function (d, i) {\n              return 0;\n            })\n            .attr('xlink:href', '#Text' + labelObj.label)\n            .attr('startOffset', '5')\n            .attr('dy', '-3em')\n            .transition()\n            .delay(1000)\n              .text(labelObj.defaultValue);\n        }\n        if (i === 0) {\n          const centroidText = r.data.arc.centroid({\n            startAngle: r.startAngle,\n            endAngle: r.startAngle\n          });\n          const labelObj = r.data.object;\n          gText.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', () => labelObj.color)\n            .attr('font-weight', '600')\n            .transition()\n            .delay(1000)\n              .text(labelObj.label)\n            .attr('transform', 'translate(' + (centroidText[0] - ((1.5 * width) / 100)) + ',' + (centroidText[1] + ') rotate(' + (180) + ')'))\n            .attr('dominant-baseline', 'central');\n        }\n      })\n    });\n  };\n\n  render() {\n    return (\n      <svg className={classNames('radial-chart', {'behind': this.props.modalData})} ref='radialChart' width='100%' height={350} />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  highlightedWeekday: state.radialChart.highlightedWeekday,\n  modalData: state.barChart.modalData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  highlightDay: val => dispatch(highlightDay(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RadialChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../bar-chart/BarChart.scss';\nimport RadialChart from \"./RadialChart\";\nimport { getDatasetOverview} from \"../../helpers/parser\";\n\nconst RadialChartContainer = props => {\n  const getInsights = () => getDatasetOverview(props.allDays, props.data, props.dayInsights);\n\n  return (\n    <Section className='section-one-third'>\n      <Card className='radial-chart-container'>\n        <div className='year-label dayTitle dataset-overview-title'>Week average</div>\n        <div>\n          <RadialChart data={getInsights()} />\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  data: state.app.data,\n  allDays: state.app.allDays\n});\n\nexport default connect(mapStateToProps)(RadialChartContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekInsights, setWeekdayInsights, uploadFile } from '../../reducers/app';\nimport { showCalendar, selectDay, resetColors } from '../../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../../reducers/barChart';\n\nimport Section from './Section';\n\nimport dataset1 from '../../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../../data/itch_tbc.csv';\nimport dataset3 from '../../data/ptsd_filtered.csv';\nimport dataset4 from '../../data/data.csv';\nimport {highlightDay} from \"../../reducers/radialChart\";\n\nconst Upload = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.setWeekInsights({\n      selectedWeek: null,\n      daysOfWeek: [],\n      weekInsights: []\n    });\n    props.selectDay(null);\n    props.highlightDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n    props.resetColors();\n  };\n\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n\n  return (\n    <Section title='Select dataset' className='upload-section'>\n      <div className='upload-dataset'>\n        <Dropdown\n          className='dropdown'\n          options={options}\n          placeholder='Choose...'\n          value={props.datasetName}\n          onChange={onSelect}\n        />\n        <Dropzone\n          accept='text/csv'\n          onDrop={onDrop}\n        >\n          {({getRootProps, getInputProps, isDragActive}) => {\n            return (\n              <div\n                {...getRootProps()}\n                className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n              >\n                <input {...getInputProps()} />\n                {\n                  !!files.length\n                    ? <span className='file-name'>\n                          <i className='fa fa-remove' />\n                      {files}\n                        </span>\n                    : <span className='upload-message'>\n                          <i className='fa fa-upload' />\n                            Drag & Drop\n                        </span>\n                }\n              </div>\n            )\n          }}\n        </Dropzone>\n      </div>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files,\n  datasetName: state.app.datasetName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  resetColors: val => dispatch(resetColors(val)),\n  highlightDay: val => dispatch(highlightDay(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport RadialChartContainer from './radial-chart/RadialChartContainer';\nimport Upload from './widget/Upload';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport githubLogo from '../icons/github-logo.svg';\nimport githubLogoHover from '../icons/github-logo-hover.svg';\nimport pdfLogo from '../icons/pdf-logo.svg';\nimport pdfLogoHover from '../icons/pdf-logo-hover.svg';\nimport {resetShiftSelection} from \"../reducers/app\";\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      plotData={props.allDays[props.selectedDay]}\n      margin={{ top: 10, right: 30, bottom: 40, left: 50 }}\n      height={300}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n  return (\n    <div className='app' onClick={props.resetShiftSelection}>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n        <div className='icons'>\n          <a href='https://github.com/diana-tofan/Time-Series-Visualization' target='_blank' rel='noopener noreferrer'>\n            <img className='github-icon' src={githubLogo} alt='Github' onMouseOver={ev => ev.currentTarget.src = githubLogoHover} onMouseLeave={ev => ev.currentTarget.src = githubLogo} />\n          </a>\n          <a href='https://www.overleaf.com/read/vptjwvyzjnvg' target='_blank' rel='noopener noreferrer'>\n            <img className='pdf-icon' src={pdfLogo} alt='Report' onMouseOver={ev => ev.currentTarget.src = pdfLogoHover} onMouseLeave={ev => ev.currentTarget.src = pdfLogo} />\n          </a>\n        </div>\n      </header>\n      <div className='content'>\n        <Upload />\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible &&\n          <div>\n            <p>Day overview</p>\n            <div className='charts-container'>\n              { renderBarChart() }\n              { props.isBarChartVisible && <RadialChartContainer /> }\n            </div>\n          </div>\n        }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetShiftSelection: val => dispatch(resetShiftSelection(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}