{"version":3,"sources":["helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/Bars.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/AreaChart.js","components/bar-chart/BarChart.js","components/App.js","serviceWorker.js","index.js","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv"],"names":["parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","reduce","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","obj","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","isoWeekday","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","parseDayInsights","days","roundedHours","hour","m","minute","second","millisecond","parseInt","add","startOf","occurrences","d3","getCurrentWeekInsights","selectedDay","startDate","endDate","isBefore","toDate","clone","formattedDays","weekInsights","includes","week","weekOccurrences","apply","weekObj","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","parseData","x","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","showSpinner","type","setMonthInsights","setWeekdayInsights","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","isRadialChartVisible","isBarChartVisible","currentWeek","currentMonth","showWeekOverview","showMonthOverview","showWeekdayOverview","showBarChart","selectDay","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","radialChart","barChart","weekArray","Array","_","connect","dispatch","props","react_default","createElement","className","classNames","bold","onClick","onWeekdayClick","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","Day","nextProps","nextState","formatDate","isCurrentWeek","this","isCurrentMonth","isCurrentWeekday","fill","transition","duration","isCurrentDay","getDay","count","Date","getFullYear","getMonth","find","setHours","j","value","Math","toConsumableArray","interpolateColor","fillColor","stroke","strokeWidth","width","height","rx","ry","y","ev","preventDefault","stopPropagation","data-tip","data-for","React","Component","showWeekOverviewFct","showMonthOverviewFct","Month","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","console","log","weeksInMonth","floor","offset","monthName","lastDay","firstDay","extraSpace","renderList","textAnchor","renderMonthOverview","calendar_Day","PureComponent","Year","target","size","months","range","monthsArr","memo","index","hidden","calendar_Month","Card","id","children","Heatmap","addEventListener","onScreenResize","components_widget_Card","calendar_DayLabels","calendar_YearLabel","calendar_Year","react_tooltip_dist_default","multiline","class","DayLabel","_this$props","selectedItem","unit","previousItem","nextItem","isAfter","pickDay","pickMonth","toString","string","tabIndex","onKeyDown","Bars","renderBars","current","refs","bars","datum","plotData","selectAll","interrupt","attr","enter","append","classed","plotHeight","on","hoverIndex","modalOpen","openModal","exit","remove","merge","select","ref","XAxis","renderAxis","xAxis","xScale","transform","fontSize","YAxis","yAxis","yScale","ticks","nrOfTicks","tickFormat","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","text","invert","circleHoverIndex","domainX","domainY","_this2","_this$props2","plotWidth","margin","area","y0","top","bottom","y1","curve","valueline","is","x1","x2","y2","spreadMethod","stopColor","stopOpacity","opacity","pointerEvents","onMouseLeave","style","onMouseOver","onMouseMove","nativeEvent","offsetX","offsetY","BarChart","resize","t","event","clearTimeout","setTimeout","getElementById","clientWidth","left","right","updateScale","newXScale","nice","currentWeekInsights","isWeekOverviewChecked","dataArr","ceil","xDomain","yDomain","domain","paddingInner","paddingOuter","updatePlotSize","isMonthOverviewChecked","isWeekdayOverviewChecked","removeEventListener","ReactTooltip","rebuild","bar_chart_DayLabel","insights","_this2$updateScale","_this2$updatePlotSize","metaData","bandwidth","currentMonthInsights","monthOccurrences","monthObj","getCurrentMonthInsights","currentWeekdayInsights","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","renderBarChart","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","checked","defaultChecked","onChange","renderFooter","isEmptyContainerVisible","uploadFile","showCalendar","setData","setDatasetName","file","name","bytes","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","components_bar_chart_BarChart","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"sPASMA,EAAY,SAAAC,GAChB,IAAMC,EAAaD,EAAUE,MAAM,KAAK,GAAGC,MAAM,GAAI,GACrD,OAAOC,IAAM,GAAAC,OAAIJ,GAAc,UAAUK,MAAMC,OAAO,aAGlDC,EAAY,SAAAR,GAAS,OAAII,IAAM,GAAAC,OAAIL,EAAUE,MAAM,KAAK,IAAM,eACjEK,OAAO,cAAcL,MAAM,KAAK,IAqBtBO,EAAiB,SAAAC,GAC5B,IAAIC,EAAUD,EAAKE,IAAI,SAAAC,GAAI,MAAK,CAAEC,KAAMN,EAAUK,EAAKH,EAAKK,QAAQ,KAAMC,KAAMjB,EAAUc,EAAKH,EAAKK,QAAQ,QAE5G,OAAeJ,EATUM,OAAO,SAAUC,EAAGC,GAG7C,OAFAD,EAAEC,EAAEL,MAAQI,EAAEC,EAAEL,OAAS,GACzBI,EAAEC,EAAEL,MAAMM,KAAKD,EAAEH,MACVE,GACN,KAQUG,EAAmB,SAACC,EAAOC,EAAaC,GACnD,IAAMC,EAAgBC,OAAOC,KAAKJ,GAC/BK,OAAO,SAAAC,GAAG,OAAIzB,IAAOyB,GAAKtB,OAAO,OAASe,IAC1CL,OAAO,SAACa,EAAKD,GAEZ,OADAC,EAAID,GAAON,EAAYM,GAChBC,GACN,IACCC,EAAaL,OAAOC,KAAKF,GAAeR,OAAO,SAACe,EAAKH,GAEzD,OADAG,EAAIZ,KAAKK,EAAcI,IAChBG,GACN,IACGC,EAAiBP,OAAOC,KAAKH,GAChCI,OAAO,SAAAC,GAAG,OAAIzB,IAAOyB,GAAKtB,OAAO,OAASe,IAC1CL,OAAO,SAACa,EAAKD,GAEZ,OADAC,EAAID,GAAOL,EAAQK,GACZC,GACN,IACCI,EAAaR,OAAOS,OAAOF,GAAgBhB,OAAO,SAACe,EAAKI,GAQ5D,OAPAV,OAAOC,KAAKS,GAAKxB,IAAI,SAAAiB,GACfG,EAAIK,eAAeR,GACrBG,EAAIH,IAAQO,EAAIP,GAEhBG,EAAIH,GAAOO,EAAIP,KAGZG,GACN,IACH,MAAO,CACLM,cAAehB,EACfiB,YAAaL,EACbT,cAAeM,EAAWS,SAIjBC,EAAqB,SAACC,EAASnB,EAAaC,EAASmB,EAAiBjC,GA+BjF,IA9BA,IAAMkC,EAAkBlB,OAAOC,KAAKJ,GACjCK,OAAO,SAAAC,GAAG,OAAIzB,IAAOyB,GAAKgB,eAAiBzC,IAAOsC,EAAS,OAAOG,eAClE5B,OAAO,SAACa,EAAKD,GAEZ,OADAC,EAAID,GAAON,EAAYM,GAChBC,GACN,IACCC,EAAaL,OAAOC,KAAKiB,GAAiB3B,OAAO,SAACe,EAAKH,GAE3D,OADAG,EAAIZ,KAAKwB,EAAgBf,IAClBG,GACN,IACGC,EAAiBP,OAAOC,KAAKH,GAChCI,OAAO,SAAAC,GAAG,OAAIzB,IAAOyB,GAAKgB,eAAiBzC,IAAOsC,EAAS,OAAOG,eAClE5B,OAAO,SAACa,EAAKD,GAEZ,OADAC,EAAID,GAAOL,EAAQK,GACZC,GACN,IACCI,EAAaR,OAAOS,OAAOF,GAAgBhB,OAAO,SAACe,EAAKI,GAQ5D,OAPAV,OAAOC,KAAKS,GAAKxB,IAAI,SAAAiB,GACfG,EAAIK,eAAeR,GACrBG,EAAIH,IAAQO,EAAIP,GAEhBG,EAAIH,GAAOO,EAAIP,KAGZG,GACN,IAEGc,EAASH,EAAgBI,QAAQnB,OAAO,SAAAoB,GAAG,OAAItC,EAAKN,IAAO4C,EAAK,cAAczC,OAAO,iBAAgBuC,OAAS,EAEhHG,EAAa,GACRC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAWC,GAAKhB,EAAWgB,GAAKC,OAAOjB,EAAWgB,GAAKJ,GAAQM,QAAQ,GAAK,EAG9E,MAAO,CACLC,gBAAiBX,EACjBY,cAAepB,EACfU,gBAAiBb,EAAWS,OAC5BS,eAISM,EAAmB,SAAA7C,GAC9B,IAAMa,EAAcd,EAAeC,GACnC,OAAOgB,OAAOC,KAAKJ,GAAaN,OAAO,SAACe,EAAKnB,GAiB3C,IAfA,IAAM2C,EAAOjC,EAAYV,GACnB4C,EAAeD,GAAQA,EAAK5C,IAAI,SAAA8C,GAClC,IAAMC,EAAIvD,IAAM,GAAAC,OAAIQ,EAAJ,KAAAR,OAAYqD,IAC5B,OAAOC,EAAEC,UAAYD,EAAEE,UAAYF,EAAEG,cACjCC,SAASJ,EAAEK,IAAI,EAAG,QAAQC,QAAQ,QAAQ1D,OAAO,OACjDwD,SAASJ,EAAEM,QAAQ,QAAQ1D,OAAO,SAGpC2D,EAAcT,GAAgBA,EAAaxC,OAAO,SAACe,EAAKnB,GAE5D,OADAmB,EAAInB,IAASmB,EAAInB,IAAS,GAAK,EACxBmB,GACN,IAGCF,GAFQqC,IAAOzC,OAAOS,OAAO+B,IAEvB,IACDhB,EAAI,EAAGA,GAAK,GAAIA,IACvBpB,EAAIoB,GAAKgB,EAAYhB,IAAM,EAI7B,OAFAlB,EAAInB,GAAQqD,EAELlC,GACN,KAGQoC,EAAyB,SAAC1D,EAAM2D,EAAa9C,GAKxD,IAJA,IAAM+C,EAAYlE,IAAOiE,GAAaxB,WAAW,GAC3C0B,EAAUnE,IAAOiE,GAAaxB,WAAW,GAC3CW,EAAO,GACPR,EAAMsB,EACHtB,EAAIwB,SAASD,IAClBf,EAAKpC,KAAK4B,EAAIyB,UACdzB,EAAMA,EAAI0B,QAAQV,IAAI,EAAG,KAE3B,IAAMW,EAAgBnB,EAAK5C,IAAI,SAAAoC,GAAG,OAAI5C,IAAO4C,GAAKzC,OAAO,gBAErDqE,EADclD,OAAOC,KAAKjB,GAAMkB,OAAO,SAAAC,GAAG,OAAI8C,EAAcE,SAAShD,KAC5CZ,OAAO,SAACe,EAAKnB,GAExC,OADAmB,EAAIZ,KAAK,CAAE4B,IAAKnC,EAAMqD,YAAa3C,EAAYV,KACxCmB,GACN,IACH4C,EAAeA,EAAahE,IAAI,SAAAkE,GAAI,OAClCA,EAAKZ,YAAYtD,IAAI,SAAAC,GACnB,IAAM8C,EAAIvD,IAAM,GAAAC,OAAIyE,EAAK9B,IAAT,KAAA3C,OAAgBQ,IAChC,OAAO8C,EAAEC,UAAYD,EAAEE,UAAYF,EAAEG,cACjCC,SAASJ,EAAEK,IAAI,EAAG,QAAQC,QAAQ,QAAQ1D,OAAO,OACjDwD,SAASJ,EAAEM,QAAQ,QAAQ1D,OAAO,WAY1C,IARA,IAAMuC,EAASU,EAAK5B,OAAO,SAAAoB,GAAG,OAAItC,EAAKN,IAAO4C,GAAKzC,OAAO,iBAAgBuC,OAEpEiC,EAAkB,GAAG1E,OAAO2E,MAAM,GAAIJ,GAAc3D,OAAO,SAACe,EAAKnB,GAErE,OADAmB,EAAInB,IAASmB,EAAInB,IAAS,GAAK,EACxBmB,GACN,IAECiD,EAAU,GACL/B,EAAI,EAAGA,EAAI,GAAIA,IACtB+B,EAAQ/B,GAAK6B,EAAgB7B,GAAKC,OAAO4B,EAAgB7B,GAAKJ,GAAQM,QAAQ,GAAK,EAGrF,OAAO6B,GA0CIC,EAAiB,SAAAb,GAO5B,IANA,IAAMc,EAAc/E,IAAOiE,GAAaJ,QAAQ,WAC1CmB,EAAYhF,IAAOiE,GAAagB,MAAM,WAExCtC,EAAU,GACVuC,EAAUH,EAEPG,GAAWF,GAChBrC,EAAQ3B,KAAKhB,IAAOkF,GAAS/E,OAAO,eACpC+E,EAAUA,EAAQZ,QAAQV,IAAI,EAAG,KAGnC,OAAOjB,GAGIwC,EAAkB,SAAAlB,GAO7B,IANA,IAAMmB,EAAepF,IAAOiE,GAAaJ,QAAQ,SAC3CwB,EAAarF,IAAOiE,GAAagB,MAAM,SAEzCtC,EAAU,GACVuC,EAAUE,EAEPF,GAAWG,GAChB1C,EAAQ3B,KAAKhB,IAAOkF,GAAS/E,OAAO,eACpC+E,EAAUA,EAAQZ,QAAQV,IAAI,EAAG,KAGnC,OAAOjB,GAGI2C,EAAqB,SAAArB,GAOhC,IANA,IAAMsB,EAAQvF,IAAOiE,GAAaJ,QAAQ,QACpC2B,EAAMxF,IAAOiE,GAAagB,MAAM,QAElCtC,EAAU,GACVuC,EAAUlF,IAAOiE,GAEdiB,GAAWM,GAChB7C,EAAQ3B,KAAKhB,IAAOkF,GAAS/E,OAAO,eACpC+E,EAAUA,EAAQZ,QAAQV,IAAI,EAAG,KAMnC,IAHA,IAAI6B,EAAW,GACXC,EAAW1F,IAAOiE,GAEfyB,GAAYH,GACjBE,EAASzE,KAAKhB,IAAO0F,GAAUvF,OAAO,eACtCuF,EAAWA,EAASpB,QAAQqB,SAAS,EAAG,KAG1C,MAAO,CACLhD,QAASA,EAAQ1C,OAAOwF,GACxB/C,OAAQC,EAAQ1C,OAAOwF,GAAU/C,SAItBkD,EAnQG,SAAAtF,GAChB,IAGMuF,EAHcvF,EAAKE,IAAI,SAAAC,GAAI,OAAKA,EAAKH,EAAKK,QAAQ,IAAKmF,QAAQ,SAAU,MACrDtF,IAAI,SAAAC,GAAI,MAAK,CAAEsF,UAAW3F,EAAUK,MAE5CD,IAAI,SAAAC,GAAI,OAAIA,EAAKsF,YACnC,OAAwBF,EAVUhF,OAAO,SAASa,EAAKjB,GAEvD,OADAiB,EAAIjB,IAASiB,EAAIjB,IAAS,GAAK,EACxBiB,GACN,KCVGsE,EAAe,CACnB1F,KAAM,GACN2F,QAAS,GACTC,QAAS,KACTC,QAAS,KACThF,YAAa,GACbE,cAAe,GACfc,YAAa,GACbD,cAAe,KACfM,gBAAiB,GACjBU,cAAe,GACfD,gBAAiB,KACjBmD,YAAa,GACbC,MAAO,GACPjF,QAAS,GACTkF,aAAa,EACbC,kBAAkB,GAsDPC,EAAc,SAAAxE,GAAG,MAAK,CAAEyE,KA1EhB,eA0EoCzE,QAC5C0E,EAAmB,SAAA1E,GAAG,MAAK,CAAEyE,KA1Ef,qBA0EyCzE,QACvD2E,EAAqB,SAAA3E,GAAG,MAAK,CAAEyE,KA1Ef,uBA0E2CzE,QC9ElEgE,EAAe,CACnBY,mBAAmB,EACnBC,UAAW,EACXC,SAAUC,OAAOC,WAAa,IAC9BC,WAAYF,OAAOC,WAAa,IAChCE,YAA+B,kBAAXH,OAAsBA,OAAOC,WAAa,MCN1DhB,EAAe,CACnBmB,sBAAsB,EACtBlD,YAAa,MCGT+B,EAAe,CACnBoB,mBAAmB,EACnBnD,YAAa,KACboD,YAAa,KACbC,aAAc,KACd/E,gBAAiB,KACjBgF,kBAAkB,EAClBC,mBAAmB,EACnBC,qBAAqB,GAsCVC,EAAe,SAAA1F,GAAG,MAAK,CAAEyE,KApDf,iBAoDqCzE,QAC/C2F,EAAY,SAAA3F,GAAG,MAAK,CAAEyE,KApDhB,aAoDkCzE,QACxCuF,EAAmB,SAAAvF,GAAG,MAAK,CAAEyE,KApDf,qBAoDyCzE,QACvDwF,EAAoB,SAAAxF,GAAG,MAAK,CAAEyE,KApDf,sBAoD0CzE,QACzDyF,EAAsB,SAAAzF,GAAG,MAAK,CAAEyE,KApDf,wBAoD4CzE,QC7C3D4F,EAPKC,YAAgB,CAClCC,IJsBa,WAAkC,IAAjCC,EAAiCC,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,GAAAA,UAAA,GAAzBhC,EAAckC,EAAWF,UAAAtF,OAAA,EAAAsF,UAAA,QAAAC,EAC/C,OAAQC,EAAOzB,MACb,IA5Ba,WA6BX,IAAMnG,EAAOsF,EAAUsC,EAAOlG,KACxBmG,EAAU7G,OAAOC,KAAKjB,GAAME,IAAI,SAAA4H,GAAC,OAAIpI,IAAOoI,KAClD,OAAO9G,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEE9B,QAASiC,EAAOlG,IAChB1B,OACAa,YAAad,EAAe6H,EAAOlG,KACnCkE,QAASlG,IAAOsI,IAAIH,GACpBhC,QAASnG,IAAOuI,IAAIJ,GACpB/G,QAAS+B,EAAiB+E,EAAOlG,OAErC,IAvCgB,cAwCd,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEE1B,MAAO6B,EAAOlG,MAElB,IA3CqB,mBA4CnB,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEE3B,YAAa8B,EAAOlG,MAExB,IA/CiB,eAgDf,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEExB,iBAAkB2B,EAAOlG,MAE7B,IAnDuB,qBAoDrB,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEE1G,cAAe6G,EAAOlG,IAAIX,cAC1Bc,YAAa+F,EAAOlG,IAAIG,YACxBD,cAAegG,EAAOlG,IAAIE,gBAE9B,IAzDyB,uBA0DvB,OAAOZ,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEEvF,gBAAiB0F,EAAOlG,IAAIQ,gBAC5BU,cAAegF,EAAOlG,IAAIkB,cAC1BD,gBAAiBiF,EAAOlG,IAAIiB,kBAEhC,QACE,OAAO8E,IIjEXS,SHIa,WAAkC,IAAjCT,EAAiCC,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,GAAAA,UAAA,GAAzBhC,EAAckC,EAAWF,UAAAtF,OAAA,EAAAsF,UAAA,QAAAC,EAC/C,OAAQC,EAAOzB,MACb,IAdkB,gBAehB,OAAOnF,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEEnB,kBAAmBsB,EAAOlG,MAE9B,IAlBgB,cAmBd,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEElB,UAAWkB,EAAMlB,UAAYqB,EAAOlG,MAExC,IAtBkB,gBAuBhB,OAAOV,OAAOmH,OAAO,GAAIV,EAAO,CAC9Bb,YAAagB,EAAOhB,cAExB,QACE,OAAOa,IGpBXW,YFDa,WAAkC,IAAjCX,EAAiCC,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,GAAAA,UAAA,GAAzBhC,EAAckC,EAAWF,UAAAtF,OAAA,EAAAsF,UAAA,QAAAC,EAC/C,OAAQC,EAAOzB,MACb,IAVsB,oBAWpB,OAAOnF,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEEZ,qBAAsBe,EAAOlG,MAEjC,IAde,aAeb,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEE9D,YAAaiE,EAAOlG,MAExB,QACE,OAAO+F,IEXXY,SDSa,WAAkC,IAAjCZ,EAAiCC,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,GAAAA,UAAA,GAAzBhC,EAAckC,EAAWF,UAAAtF,OAAA,EAAAsF,UAAA,QAAAC,EAC/C,OAAQC,EAAOzB,MACb,IAnBmB,iBAoBjB,OAAOnF,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEEX,kBAAmBc,EAAOlG,MAE9B,IAvBe,aAwBb,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEE9D,YAAaiE,EAAOlG,IACpBqF,YAAavC,EAAeoD,EAAOlG,KACnCsF,aAAcnC,EAAgB+C,EAAOlG,KACrCO,gBAAiB+C,EAAmB4C,EAAOlG,OAE/C,IA9BuB,qBA+BrB,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEER,iBAAkBW,EAAOlG,MAE7B,IAlCwB,sBAmCtB,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEEP,kBAAmBU,EAAOlG,MAE9B,IAtC0B,wBAuCxB,OAAOV,OAAA+G,EAAA,EAAA/G,CAAA,GACFyG,EADL,CAEEN,oBAAqBS,EAAOlG,MAEhC,QACE,OAAO+F,4GE1CPa,EAAYC,MAAMjE,MAAM,KAAMiE,MAAM,IAAIrI,IAAI,SAAUsI,EAAGhG,GAC7D,OAAO9C,IAAO8C,EAAG,KAAKe,QAAQ,QAAQpB,WAAWK,EAAE,GAAG3C,OAAO,SAqDhD4I,cAhBS,SAAAhB,GAAK,MAAK,CAChC3G,QAAS2G,EAAMD,IAAI1G,QACnBd,KAAMyH,EAAMD,IAAIxH,KAChBa,YAAa4G,EAAMD,IAAI3G,YACvB2F,SAAUiB,EAAMS,SAAS1B,SACzBG,WAAYc,EAAMS,SAASvB,WAC3BhE,gBAAiB8E,EAAMD,IAAI7E,kBAGF,SAAA+F,GAAQ,MAAK,CACtCrC,mBAAoB,SAAA3E,GAAG,OAAIgH,EAASrC,EAAmB3E,KACvD0E,iBAAkB,SAAA1E,GAAG,OAAIgH,EAAStC,EAAiB1E,KACnD0F,aAAc,SAAA1F,GAAG,OAAIgH,EAAStB,EAAa1F,KAC3C2F,UAAW,SAAA3F,GAAG,OAAIgH,EAASrB,EAAU3F,OAGxB+G,CAlDG,SAAAE,GAehB,OACEC,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,sBACfF,EAAAnI,EAAAoI,cAAA,YAEIP,EAAUpI,IAAI,SAAAoC,GAAG,OACfsG,EAAAnI,EAAAoI,cAAA,QACE1H,IAAKmB,EACLwG,UAAWC,IAAW,YAAa,CAACC,KAAQL,EAAMhG,kBAAoBL,IACtE2G,QAAS,kBAtBI,SAAA3G,GACrBqG,EAAMtB,UAAU,MAChBsB,EAAMvC,iBAAiB,CACrBrF,cAAe,GACfc,YAAa,KAEf,IAAMK,EAAkBH,EAAmBO,EAAKqG,EAAM9H,YAAa8H,EAAM7H,SACzE6H,EAAMtC,mBAAmB,CACvB1D,gBAAiBT,EAAgBS,gBACjCC,cAAeV,EAAgBU,cAC/BV,gBAAiBA,EAAgBA,kBAEnCyG,EAAMvB,cAAa,GAUI8B,CAAe5G,KAE7BA,SCDEmG,cATS,SAAAhB,GAAK,MAAK,CAChC7B,QAAS6B,EAAMD,IAAI5B,QACnBC,QAAS4B,EAAMD,IAAI3B,UAGM,SAAA6C,GAAQ,MAAK,CACtCS,WAAY,SAAAzH,GAAG,OAAIgH,ELCK,SAAAhH,GAAG,MAAK,CAAEyE,KAjChB,cAiCmCzE,OKDzByH,CAAWzH,OAG1B+G,CA9BG,SAAAE,GAChB,IAAMS,EAAe1J,IAAOiJ,EAAM/C,SAASP,SAAS,EAAG,SAASxF,OAAO,QACjEwJ,EAAW3J,IAAOiJ,EAAM9C,SAASvC,IAAI,EAAG,SAASzD,OAAO,QACxDyJ,EAAoBF,GAAgBT,EAAM/C,QAAQ/F,OAAO,QACzD0J,EAAgBF,GAAYV,EAAM9C,QAAQhG,OAAO,QAEvD,OACE+I,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,aACbF,EAAAnI,EAAAoI,cAAA,KACEC,UAAWC,IAAW,sBAAuB,CAACS,UAAaF,IAC3DL,QAAS,kBAAMK,GAAqBX,EAAMQ,YAAY,MAEtDR,EAAM/C,QAAQ/F,OAAO,QACvB+I,EAAAnI,EAAAoI,cAAA,KACEC,UAAWC,IAAW,uBAAwB,CAACS,UAAaD,IAC5DN,QAAS,kBAAMM,GAAiBZ,EAAMQ,WAAW,iBCdnDM,gMACkBC,EAAWC,GAC/B,IAAMC,EAAa,SAAAxJ,GAAI,OAAIV,IAAOU,GAAMP,OAAO,aACzCgK,EAAgBH,EAAU3C,YAAY5C,SAASzE,IAAOoK,KAAKnB,MAAMrG,KAAKzC,OAAO,gBACjFiK,KAAKnB,MAAM5B,YAAY5C,SAASzE,IAAOgK,EAAUpH,KAAKzC,OAAO,eACzDkK,EAAiBL,EAAU1C,aAAa7C,SAASzE,IAAOoK,KAAKnB,MAAMrG,KAAKzC,OAAO,gBACnFiK,KAAKnB,MAAM3B,aAAa7C,SAASzE,IAAOgK,EAAUpH,KAAKzC,OAAO,eAC1DmK,EAAmBN,EAAUzH,gBAAgBI,QAAQ8B,SAASzE,IAAOoK,KAAKnB,MAAMrG,KAAKzC,OAAO,gBAChGiK,KAAKnB,MAAM1G,gBAAgBI,QAAQ8B,SAASzE,IAAOgK,EAAUpH,KAAKzC,OAAO,eAC3E,OAAO+J,EAAWE,KAAKnB,MAAMrG,OAASsH,EAAWF,EAAU/F,cACzDiG,EAAWF,EAAUpH,OAASsH,EAAWE,KAAKnB,MAAMhF,cACpDmG,KAAKnB,MAAMsB,OAASP,EAAUO,MAC9BJ,GACAE,GACAC,+CAIFvG,IAAU,aACPyG,aACAC,SAAS,sCAIZ,IAAMxB,EAAQmB,KAAKnB,MACbhC,EAAagC,EAAMhC,WACvBH,EAAWmC,EAAMnC,SACbsB,EAAIa,EAAMrG,IAEZ8H,GAAe,EACf1K,IAAOoI,GAAGjI,OAAO,cAAgBH,IAAOiJ,EAAMhF,aAAa9D,OAAO,cACpEuK,GAAe,GAGjB,IAGmB1I,EAAKuG,EAAKD,EAHvB1F,EAAM,SAAAwF,GAAC,OAAKA,EAAEuC,SAAW,GAAK,GAClCjG,EAAOX,IAAc,MAIjB7C,EAAQ+H,EAAM/H,MAOd0J,EALO7G,IAAY7C,EAAO,IAAI2J,KAAK3J,EAAM4J,cAAe5J,EAAM6J,WAAW,EAAG,IAC/DvK,IAAI,SAAA4H,GAAC,OACtB9G,OAAOC,KAAK0H,EAAM3I,MAAM0K,KAAK,SAAAvJ,GAAG,OAC9B,IAAIoJ,KAAKpJ,GAAKwJ,SAAS,EAAE,EAAE,EAAE,KAAO7C,EAAE6C,SAAS,EAAE,EAAE,EAAE,OAEnCzK,IAAI,SAAAsC,GAAC,QAAMA,GAAKmG,EAAM3I,KAAKwC,KAAItB,OAAO,SAAA0J,GAAC,QAAMA,IAE7Df,EAAgBlB,EAAM5B,YAAY5C,SAASzE,IAAOoI,GAAGjI,OAAO,eAC5DkK,EAAiBpB,EAAM3B,aAAa7C,SAASzE,IAAOoI,GAAGjI,OAAO,eAC9DmK,EAAmBrB,EAAM1G,gBAAgBI,QAAQ8B,SAASzE,IAAOoI,GAAGjI,OAAO,eAE3EM,EAAOa,OAAOC,KAAK0H,EAAM3I,MAAM0K,KAAK,SAAAvJ,GAAG,OAC3C,IAAIoJ,KAAKpJ,GAAKwJ,SAAS,EAAE,EAAE,EAAE,KAAO7C,EAAE6C,SAAS,EAAE,EAAE,EAAE,KACjDE,IAAUlC,EAAM3I,KAAKG,KAjBRuB,EAiB2BiH,EAAM3I,KAAKG,GAjBjC8H,EAiBwC6C,KAAK7C,IAAL3D,MAAAwG,KAAI9J,OAAA+J,EAAA,EAAA/J,CAAQsJ,IAjB/CtC,EAiBuD8C,KAAK9C,IAAL1D,MAAAwG,KAAI9J,OAAA+J,EAAA,EAAA/J,CAAQsJ,KAjB5C5I,EAAMsG,IAAQC,EAAMD,GAAnC,IAA2C,KAkB1EgD,EAAqBnB,GAAiBlB,EAAM1B,kBAAsB8C,GAAkBpB,EAAMzB,mBAAuB8C,GAAoBrB,EAAMxB,oBAC7I1D,IAAmBoH,GAASpH,IAAsBoH,GAClDI,EAActC,EAAM3I,KAAKG,GAASiK,EAAe3G,IAAmBoH,GAASG,EAAoB,UAoBrG,OACEpC,EAAAnI,EAAAoI,cAAA,QACE1H,IAAK2G,EACLgB,UAAU,MACVoC,OAAQd,EAAe,OAAS,GAChCe,YAAaf,EAAe,EAAI,EAChCgB,MAAO5E,EACP6E,OAAQ7E,EACR8E,GAAI,GACJC,GAAI,GACJtB,KAAMgB,EACNO,EAAIlJ,EAAIwF,GAAKtB,EAAalE,EAAIwF,GAAKnB,EAAcA,EACjDpB,GAAKnB,EAAK0D,GAAK1D,EAAK,IAAImG,KAAKzC,EAAE0C,cAAc1C,EAAE2C,WAAW,KAAOjE,GAAcpC,EAAK0D,GAAK1D,EAAK,IAAImG,KAAKzC,EAAE0C,cAAc1C,EAAE2C,WAAW,KAAO9D,EAAcA,EACzJsC,QA9Be,SAAAwC,GACjBA,EAAGC,iBACHD,EAAGE,kBACHhD,EAAMvC,iBAAiB,CACrBrF,cAAe,GACfc,YAAa,KAEf8G,EAAMtC,mBAAmB,CACvB1D,gBAAiB,KACjBC,cAAe,GACfV,gBAAiB,KAEnByG,EAAMtB,UAAUS,GAChBa,EAAMvB,cAAa,IAkBjBwE,WAAA,GAAAjM,OAAaD,IAAOoI,GAAGjI,OAAO,qBAA9B,eAAAF,OAAgEgJ,EAAM3I,KAAKG,IAAS,GACpF0L,WAAS,sBA5FCC,IAAMC,WA4HTtD,cAzBS,SAAAhB,GAAK,MAAK,CAChCzH,KAAMyH,EAAMD,IAAIxH,KAChB2D,YAAa8D,EAAMY,SAAS1E,YAC5BhB,gBAAiB8E,EAAMD,IAAI7E,gBAC3BsE,iBAAkBQ,EAAMY,SAASpB,iBACjCC,kBAAmBO,EAAMY,SAASnB,kBAClCC,oBAAqBM,EAAMY,SAASlB,oBACpCJ,YAAaU,EAAMY,SAAStB,YAC5BC,aAAcS,EAAMY,SAASrB,aAC7B/E,gBAAiBwF,EAAMY,SAASpG,gBAChCpB,YAAa4G,EAAMD,IAAI3G,YACvB2F,SAAUiB,EAAMS,SAAS1B,SACzBG,WAAYc,EAAMS,SAASvB,WAC3B7F,QAAS2G,EAAMD,IAAI1G,UAGM,SAAA4H,GAAQ,MAAK,CACtCtB,aAAc,SAAA1F,GAAG,OAAIgH,EAAStB,EAAa1F,KAC3C2F,UAAW,SAAA3F,GAAG,OAAIgH,EAASrB,EAAU3F,KACrC0E,iBAAkB,SAAA1E,GAAG,OAAIgH,EAAStC,EAAiB1E,KACnD2E,mBAAoB,SAAA3E,GAAG,OAAIgH,EAASrC,EAAmB3E,KACvDsK,oBAAqB,SAAAtK,GAAG,OAAIgH,EAASzB,EAAiBvF,KACtDuK,qBAAsB,SAAAvK,GAAG,OAAIgH,EAASxB,EAAkBxF,OAG3C+G,CAA6CgB,GCxHtDyC,eACJ,SAAAA,EAAYvD,GAAO,IAAAwD,EAAA,OAAAnL,OAAAoL,EAAA,EAAApL,CAAA8I,KAAAoC,IACjBC,EAAAnL,OAAAqL,EAAA,EAAArL,CAAA8I,KAAA9I,OAAAsL,EAAA,EAAAtL,CAAAkL,GAAAK,KAAAzC,KAAMnB,KAcR6D,aAAe,WAAM,IACXlC,EAAU6B,EAAK1E,MAAf6C,MACA1J,EAAUuL,EAAKxD,MAAf/H,MACFkC,EAAOW,IAAY7C,EAAO,IAAI2J,KAAK3J,EAAM4J,cAAe5J,EAAM6J,WAAW,EAAG,IAC9EH,EAAQxH,EAAKV,OACfqK,sBAAsB,kBAAMN,EAAKO,SAAS,CAAEpC,MAAOA,EAAM,MAEzDqC,QAAQC,IAAI,kCApBdT,EAAK1E,MAAQ,CACX6C,MAAO,GAHQ6B,mFAQjBrC,KAAK0C,4DAIL1C,KAAK0C,gDAeL,IAAM7D,EAAQmB,KAAKnB,MAEb/H,EAAQ+H,EAAM/H,MAEdiM,EAAe,SAAAjM,GACnB,IAAMqC,EAAIQ,IAAaqJ,MAAMlM,GAC7B,OAAO6C,IAAaA,IAAYqJ,MAAM7J,GAAIQ,IAAasJ,OAAO9J,EAAE,IAAIb,QAGhEuE,EAAagC,EAAMhC,WACvBH,EAAWmC,EAAMnC,SAEbwG,EAAYvJ,IAAc,MAE1BX,EAAOW,IAAY7C,EAAO,IAAI2J,KAAK3J,EAAM4J,cAAe5J,EAAM6J,WAAW,EAAG,IAC5EwC,EAAUvN,IAAOkB,GAAO+D,MAAM,SAAS9E,OAAO,OAC9CqN,EAAWxN,IAAOkB,GAAO0C,IAAI,EAAG,UAAUC,QAAQ,SAAS1D,OAAO,OACpEsN,EAAa,GACA,QAAZF,GAAkC,QAAbC,GAAoC,QAAZD,GAAkC,QAAbC,KACrEC,GAAc,IApBT,IAuBC7C,EAAUR,KAAKrC,MAAf6C,MAGF8C,EADa9C,GAASxH,EAAKV,OACDU,EAAOA,EAAKrD,MAAM,EAAG6K,GAkB/CP,EAAiBrK,IAAOoK,KAAKnB,MAAM/G,cAAe,KAAK/B,OAAO,UAAYmN,EAAUpM,GAC1F,OACEgI,EAAAnI,EAAAoI,cAAA,OACEC,UAAU,QACVuC,OAAqB,EAAX7E,EAA8B,EAAbG,EAAkB,GAC7CyE,MAAQ5E,EAAWqG,EAAajM,GAAW+F,GAAckG,EAAajM,GAAS,GAAMuM,EACrFhM,IAAKP,GAELgI,EAAAnI,EAAAoI,cAAA,SACED,EAAAnI,EAAAoI,cAAA,QACEC,UAAWC,IAAW,aAAc,CAACC,KAAQe,IAC7CyB,EAAe,EAAXhF,EAA8B,EAAbG,EAAkB,GACvCpB,GAAKiB,EAAWqG,EAAajM,GAAW+F,GAAckG,EAAajM,GAAS,IAAO,EACnFyM,WAAW,SACXpE,QAAS,kBA9BW,SAAArI,GAC1B+H,EAAMtB,UAAU,MAChBsB,EAAMtC,mBAAmB,CACvB1D,gBAAiB,KACjBC,cAAe,GACfV,gBAAiB,KAEnB,IAAMnB,EAAgBJ,EAAiBjB,MAASkB,MAAMA,GAAOf,OAAO,KAAM8I,EAAM9H,YAAa8H,EAAM7H,SACnG6H,EAAMvC,iBAAiB,CACrBxE,cAAeb,EAAca,cAC7BC,YAAad,EAAcc,YAC3Bd,cAAeA,EAAcA,gBAE/B4H,EAAMvB,cAAa,GAiBEkG,CAAoBN,EAAUpM,MAE3CoM,EAAUpM,IAEZwM,EAAWlN,IAAI,SAAA4H,GAAC,OAAIc,EAAAnI,EAAAoI,cAAC0E,EAAD,CAAKtD,KAAMF,GAAkBrK,IAAOoI,GAAGjI,OAAO,SAAW8I,EAAMhG,gBAAiBL,IAAKwF,EAAGlH,MAAOA,EAAOO,IAAK2G,eAzFvHgE,IAAM0B,eAiHX/E,eAjBS,SAAAhB,GAAK,MAAK,CAChC3G,QAAS2G,EAAMD,IAAI1G,QACnBd,KAAMyH,EAAMD,IAAIxH,KAChBa,YAAa4G,EAAMD,IAAI3G,YACvB2F,SAAUiB,EAAMS,SAAS1B,SACzBG,WAAYc,EAAMS,SAASvB,WAC3B/E,cAAe6F,EAAMD,IAAI5F,cACzBe,gBAAiB8E,EAAMD,IAAI7E,kBAGF,SAAA+F,GAAQ,MAAK,CACtCtC,iBAAkB,SAAA1E,GAAG,OAAIgH,EAAStC,EAAiB1E,KACnD2E,mBAAoB,SAAA3E,GAAG,OAAIgH,EAASrC,EAAmB3E,KACvD0F,aAAc,SAAA1F,GAAG,OAAIgH,EAAStB,EAAa1F,KAC3C2F,UAAW,SAAA3F,GAAG,OAAIgH,EAASrB,EAAU3F,OAGxB+G,CAA6CyD,ICrHtDuB,oLAEF,IAMeC,EAAQC,EANjBhF,EAAQmB,KAAKnB,MACb/C,EAAU+C,EAAM/C,QAAQ/F,OAAO,cAC/BgG,EAAU8C,EAAM9C,QAAQhG,OAAO,cAE/B+N,EAASnK,IAAaoK,MAAM,IAAItD,KAAKlH,SAAQ,GAAA1D,OAAIiG,EAAQpG,MAAM,KAAK,KAAO,EAAG,GAClF,IAAI+K,KAAKlH,SAAQ,GAAA1D,OAAIkG,EAAQrG,MAAM,KAAK,KAAO,GAAI,KAQ/CsO,GAPSJ,EAOSE,EAPDD,EAOSC,EAAOxL,OAAS,GANvCsL,EAAOnN,OAAO,SAACwN,EAAMlD,EAAOmD,GAGjC,OAFIA,GAASN,EAAOtL,OAASuL,KAAU,GAAe,IAAVK,GAAaD,EAAKrN,KAAK,IACnEqN,EAAKA,EAAK3L,OAAS,GAAG1B,KAAKmK,GACpBkD,GACN,CAAC,MAIN,OACEnF,EAAAnI,EAAAoI,cAAA,WAEIiF,EAAU5N,IAAI,SAAC0N,EAAQpL,GAAT,OACZoG,EAAAnI,EAAAoI,cAAA,OAAKC,UAAWC,IAAW,OAAQ,CAACkF,OAAUzL,IAAMmG,EAAMpC,YAAapF,IAAKqB,GAExEoL,EAAO1N,IAAI,SAACU,EAAO4B,GAAR,OACToG,EAAAnI,EAAAoI,cAACqF,GAAD,CACE/M,IAAKqB,EACL5B,MAAOA,iBA1BRkL,IAAM0B,eA6CV/E,eAPS,SAAAhB,GAAK,MAAK,CAChCzH,KAAMyH,EAAMD,IAAIxH,KAChB4F,QAAS6B,EAAMD,IAAI5B,QACnBC,QAAS4B,EAAMD,IAAI3B,QACnBU,UAAWkB,EAAMS,SAAS3B,YAGbkC,CAAyBgF,ICvCzBU,4LARX,OACEvF,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,OAAOsF,GAAG,QACtBtE,KAAKnB,MAAM0F,iBAJDvC,IAAM0B,gBCUnBc,sBACJ,SAAAA,EAAY3F,GAAO,IAAAwD,EAAA,OAAAnL,OAAAoL,EAAA,EAAApL,CAAA8I,KAAAwE,GACjBnC,EAAAnL,OAAAqL,EAAA,EAAArL,CAAA8I,KAAA9I,OAAAsL,EAAA,EAAAtL,CAAAsN,GAAA/B,KAAAzC,KAAMnB,IACNlC,OAAO8H,iBAAiB,SAAU,WAChC5F,EAAM6F,eAAe/H,OAAOC,cAHbyF,mFAQjBrC,KAAKnB,MAAMzC,aAAY,oCAIvB,OACE0C,EAAAnI,EAAAoI,cAAC4F,GAAD,KACE7F,EAAAnI,EAAAoI,cAAC6F,EAAD,MACA9F,EAAAnI,EAAAoI,cAAC8F,EAAD,MACA/F,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,UACbF,EAAAnI,EAAAoI,cAAC+F,GAAD,OAEFhG,EAAAnI,EAAAoI,cAACgG,EAAApO,EAAD,CAAc2N,GAAG,aAAaU,WAAS,EAACC,MAAM,qBApBhCjD,IAAM0B,gBA+Bb/E,eAAQ,KALI,SAAAC,GAAQ,MAAK,CACtCxC,YAAa,SAAAxE,GAAG,OAAIgH,EAASxC,EAAYxE,KACzC8M,eAAgB,SAAA9M,GAAG,OAAIgH,EVNK,SAAAhH,GAAG,MAAK,CAAEyE,KAjClB,gBAiCuCzE,OUM3B8M,CAAe9M,OAGlC+G,CAAkC6F,ICpC3CU,iMACkBtF,EAAWC,GAC/B,OAAOD,EAAU/F,cAAgBmG,KAAKnB,MAAMhF,aAC1C+F,EAAU9H,gBAAkBkI,KAAKnB,MAAM/G,eACvC8H,EAAU/G,kBAAoBmH,KAAKnB,MAAMhG,iDAGpC,IAAAsM,EAEiEnF,KAAKnB,MADrE/C,EADDqJ,EACCrJ,QAASC,EADVoJ,EACUpJ,QAASwB,EADnB4H,EACmB5H,UAAWD,EAD9B6H,EAC8B7H,aAAchB,EAD5C6I,EAC4C7I,iBAAkBC,EAD9D4I,EAC8D5I,mBACnEzE,EAFKqN,EAELrN,cAAe+B,EAFVsL,EAEUtL,YAAa9C,EAFvBoO,EAEuBpO,YAAaC,EAFpCmO,EAEoCnO,QAAS6B,EAF7CsM,EAE6CtM,gBAC9CuM,EAAetN,GAAiBe,GAAmBgB,EACrDwL,EAAO,GAETA,EADEvN,EACK,SACEe,EACF,QAEA,OAET,IAAMyM,EAAexN,EAAgBA,EAAc,EAAIlC,IAAOwP,GAAc7J,SAAS,EAAG8J,GAClFE,EAAWzN,EAAgByB,SAASzB,GAAe,EAAIlC,IAAOwP,GAAc5L,IAAI,EAAG6L,GACnF7F,EAAoB1H,EAAgBlC,IAAO0P,EAAc,KAAKE,QAAQ1J,EAAQrC,QAAQ,SAAW6L,EAAaE,QAAQ1J,EAAQrC,QAAQ,SACtIgG,IAAgB3H,GAAuByN,EAASvL,SAAS+B,EAAQlB,MAAM,SACvE4K,EAAU,SAAAjN,GACd8D,EAAiB,CACfrF,cAAe,GACfc,YAAa,GACbD,cAAe,OAEjByE,EAAmB,CACjB1D,gBAAiB,KACjBC,cAAe,GACfV,gBAAiB,KAEnBmF,EAAU/E,GACV8E,GAAa,IAEToI,EAAY,SAAA5O,GAChByG,EAAU,MACVhB,EAAmB,CACjB1D,gBAAiB,KACjBC,cAAe,GACfV,gBAAiB,KAEnB,IAAMnB,EAAgBJ,EAAiBC,EAAM6O,WAAY5O,EAAaC,GACtEsF,EAAiB,CACfxE,cAAeb,EAAca,cAC7BC,YAAad,EAAcc,YAC3Bd,cAAeA,EAAcA,gBAE/BqG,GAAa,IAEXsI,EAAS,GASb,OAPEA,EADE9N,EACOlC,IAAOkC,EAAe,KAAK/B,OAAO,QAClC8C,EACH,GAAAhD,OAAMD,IAAOiD,EAAiB,OAAO9C,OAAO,QAA5C,KAEGH,IAAOwP,GAAcrP,OAAO,sBAIrC+I,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,qBACV6G,SAAU,EACVC,UAAW,SAAAnE,GACLA,IACa,cAAXA,EAAGtK,MACJS,EAA8D4N,EAAUN,EAAe,GAAvEK,EAAQ7P,IAAOwP,GAAc5L,KAAK,EAAG6L,KAEzC,eAAX1D,EAAGtK,MACJS,EAA6D4N,EAAUnM,SAAS6L,GAAgB,GAAhFK,EAAQ7P,IAAOwP,GAAc5L,IAAI,EAAG6L,QAI9DvG,EAAAnI,EAAAoI,cAAA,KACEC,UAAWC,IAAW,sBAAuB,CAACS,UAAaF,IAC3DL,QAAS,WAAOK,GAAqBjC,EAAU3H,IAAOwP,GAAc5L,KAAK,EAAG6L,OAE5EO,EACF9G,EAAAnI,EAAAoI,cAAA,KACEC,UAAWC,IAAW,uBAAwB,CAACS,UAAaD,IAC5DN,QAAS,kBAAMM,GAAiBlC,EAAU3H,IAAOwP,GAAc5L,IAAI,EAAG6L,eAjFzDrD,IAAMC,WAyGdtD,eAjBS,SAAAhB,GAAK,MAAK,CAChC7B,QAAS6B,EAAMD,IAAI5B,QACnBC,QAAS4B,EAAMD,IAAI3B,QACnBlC,YAAa8D,EAAMY,SAAS1E,YAC5B/B,cAAe6F,EAAMD,IAAI5F,cACzBe,gBAAiB8E,EAAMD,IAAI7E,gBAC3B9B,YAAa4G,EAAMD,IAAI3G,YACvBC,QAAS2G,EAAMD,IAAI1G,UAGM,SAAA4H,GAAQ,MAAK,CACtCrB,UAAW,SAAA3F,GAAG,OAAIgH,EAASrB,EAAU3F,KACrC0F,aAAc,SAAA1F,GAAG,OAAIgH,EAAStB,EAAa1F,KAC3C0E,iBAAkB,SAAA1E,GAAG,OAAIgH,EAAStC,EAAiB1E,KACnD2E,mBAAoB,SAAA3E,GAAG,OAAIgH,EAASrC,EAAmB3E,OAG1C+G,CAA6CuG,ICxC7Ca,eArEb,SAAAA,EAAYlH,GAAO,IAAAwD,EAAA,OAAAnL,OAAAoL,EAAA,EAAApL,CAAA8I,KAAA+F,IACjB1D,EAAAnL,OAAAqL,EAAA,EAAArL,CAAA8I,KAAA9I,OAAAsL,EAAA,EAAAtL,CAAA6O,GAAAtD,KAAAzC,KAAMnB,KAeRmH,WAAa,WACX,IACMC,EADStM,IAAU0I,EAAK6D,KAAKC,MAAMC,MAAM/D,EAAKxD,MAAMwH,UACnCC,UAAU,QAAQpQ,KAAK,SAAA8H,GAAC,OAAIA,IAOnDiI,EAAQM,YAERN,EAAQ7F,aACLoG,KAAK,OAAQ,WAEhB,IAAMC,EAAQR,EAAQQ,QAAQC,OAAO,KAAKC,QAAQ,OAAO,GACzDF,EAAMD,KAAK,OAAQ,WAEnBC,EACGC,OAAO,QACPF,KAAK,SAAU,GACfA,KAAK,YAAa,SAAAxI,GAAC,mBAAAnI,OAAiBmI,EAAEvC,EAAnB,MAAA5F,OAAyBwM,EAAKxD,MAAM+H,WAApC,OACnBC,GAAG,YAAa,SAAC7I,EAAGtF,GAAJ,OAAU2J,EAAKO,SAAS,CAAEkE,WAAYpO,MACtDmO,GAAG,aAAc,kBAAMxE,EAAKO,SAAS,CAAEkE,YAAa,MACpDD,GAAG,QAAS,SAAA7I,GAAC,OApBE,SAAAA,GAChBqE,EAAKO,SAAS,CACZmE,UAAW/I,IAkBKgJ,CAAUhJ,KAEjBiI,EAAQgB,OAAON,QAAQ,OAAO,GAExCH,KAAK,OAAQ,WACbA,KAAK,UAAW,IAChBpG,aACAoG,KAAK,UAAW,GAChBU,SAEHjB,EACGkB,MAAMV,GACNW,OAAO,QACPZ,KAAK,QAAS,SAAAxI,GAAC,OAAIA,EAAEsD,QACrBkF,KAAK,WAAY,SAAAxI,GAAC,gBAAAnI,OAAcmI,EAAE9H,KAAhB,2BAAAL,OAA8CmI,EAAEtE,eAClE8M,KAAK,WAAY,eACjBG,QAAQ,cAAe,SAAC3I,EAAGtF,GAAJ,OAAUA,IAAM2J,EAAK1E,MAAMmJ,aAClD1G,aACAC,SAAS,KACTmG,KAAK,YAAa,SAAAxI,GAAC,mBAAAnI,OAAiBmI,EAAEvC,EAAnB,MAAA5F,OAAyBmI,EAAE0D,EAA3B,OACnB8E,KAAK,SAAU,SAAAxI,GAAC,OAAIA,EAAEuD,UAzDzBc,EAAK1E,MAAQ,CACXmJ,YAAa,EACbC,UAAW,MAJI1E,mFASjBrC,KAAKgG,0DAILhG,KAAKgG,8CAkDL,OACElH,EAAAnI,EAAAoI,cAAA,KAAGsI,IAAI,gBAjEMrF,IAAM0B,eC6BV4D,8MApBbC,WAAa,WACX,IAAMC,EAAQ7N,IAAc0I,EAAKxD,MAAM4I,QACvC9N,IAAU0I,EAAK6D,KAAKsB,OACjBpH,aACAqC,KAAK+E,uFAXRxH,KAAKuH,0DAILvH,KAAKuH,8CAWL,OACEzI,EAAAnI,EAAAoI,cAAA,KAAGC,UAAU,cACV0I,UAAS,eAAA7R,OAAiBmK,KAAKnB,MAAM+H,WAAa,GAAzC,KACTS,IAAI,QACJlH,KAAK,OACLwH,SAAU,GACVpE,WAAW,kBAvBAvB,IAAM0B,eCuBXkE,8MAdbL,WAAa,WACX,IAAMM,EAAQlO,IAAY0I,EAAKxD,MAAMiJ,QAAQC,MAAM1F,EAAKxD,MAAMmJ,WAAWC,WAAWtO,IAAU,MAC9FA,IAAU0I,EAAK6D,KAAK2B,OACjBzH,aACAqC,KAAKoF,uFAXR7H,KAAKuH,0DAILvH,KAAKuH,8CAWL,OACEzI,EAAAnI,EAAAoI,cAAA,KAAGC,UAAU,cAAcqI,IAAI,iBAlBjBrF,IAAM0B,eCEpBwE,eACJ,SAAAA,EAAYrJ,GAAO,IAAAwD,EAAA,OAAAnL,OAAAoL,EAAA,EAAApL,CAAA8I,KAAAkI,IACjB7F,EAAAnL,OAAAqL,EAAA,EAAArL,CAAA8I,KAAA9I,OAAAsL,EAAA,EAAAtL,CAAAgR,GAAAzF,KAAAzC,KAAMnB,KAqBRsJ,WAAa,WACX,IAAIC,EAAOzO,IAAa,SACxB,GAAIyO,EAAKC,OAAQ,CACf,IAAMC,EAAcF,EAAKC,OAAOE,iBAChCH,EACG5B,KAAK,mBAAoB8B,GACzB9B,KAAK,oBAAqB8B,GAC1B9B,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfpG,aACAC,SAAS,KACTmG,KAAK,eAAgB,GACrBA,KAAK,oBAAqB,GAEpB7M,IAAa,SAErB6M,KAAK,YAAa,oBAClBpG,aACAoI,MAAM,KACNnI,SAAS,KACTmG,KAAK,YAAa,mBA1CJnE,EA8CnBoG,gBAAkB,SAACC,EAAQC,GAAW,IAAAxD,EACL9C,EAAKxD,MAA5BiJ,EAD4B3C,EAC5B2C,OAAQlB,EADoBzB,EACpByB,WAIhBjN,IAAU,eACP6M,KAAK,IAAK,WACT,IAAIxI,EAAI,IAAM0K,EAAS,KAAO9B,EAAa,IAE3C,OADA5I,GAAK,IAAM0K,EAAS,OAIxB,IACIE,EADEC,EAAQC,SAASC,uBAAuB,QAG9CpP,IAAa,mBACV6M,KAAK,YAAa,SAASxI,EAAGtF,GAK7B,IAJA,IAAIsQ,EAAY,EACd5N,EAAMyN,GAASA,EAAMnQ,GAAG6P,iBACxB3E,EAAS,KAEJxI,IACLwI,EAAS5C,KAAKgC,OAAOgG,EAAY5N,GAAO,GACxCwN,EAAMC,EAAMnQ,GAAGuQ,iBAAiBrF,GAC3BA,IAAWxI,GAAOwI,IAAWoF,GAAcJ,EAAInN,IAAMiN,IAG1D,GAAIE,EAAInN,EAAIiN,EAAatN,EAAMwI,MAC1B,MAAIgF,EAAInN,EAAIiN,GACZ,MADoBM,EAAYpF,EAOvC,OAHAjK,IAAUqG,MAAMoH,OAAO,QACpB8B,KAAKvQ,OAAOmP,EAAOqB,OAAOP,EAAIlH,IAAI9I,QAAQ,IAEtC,aAAe8P,EAAS,IAAME,EAAIlH,EAAG,OA/EhDW,EAAK1E,MAAQ,CACXyL,kBAAmB,EACnBlN,aAAa,EACbmN,QAAS,KACTC,QAAS,MANMjH,qFAUGzC,EAAWC,GAC/B,OAAOD,EAAU/F,cAAgBmG,KAAKnB,MAAMhF,wDAI5CmG,KAAKmI,0DAILnI,KAAKmI,8CAkEE,IAAAoB,EAAAvJ,KAAAwJ,EACmDxJ,KAAKnB,MAAvD4I,EADD+B,EACC/B,OAAQgC,EADTD,EACSC,UAAW7C,EADpB4C,EACoB5C,WAAY8C,EADhCF,EACgCE,OAAQ5B,EADxC0B,EACwC1B,OAEzCrN,EAAUuF,KAAKnB,MAAMzE,aAGrBuP,EAAOhQ,MACV8B,EAAE,SAAAuC,GAAC,OAAIyJ,EAAOzJ,KACd4L,GAAGhD,EAAa8C,EAAOG,IAAMH,EAAOI,QACpCC,GAAG,SAAA/L,GAAC,OAAI8J,EAAOrN,EAAQuD,MACvBgM,MAAMrQ,KAEHsQ,EAAYtQ,MACf8B,EAAE,SAACuC,EAAGtF,GAAJ,OAAU+O,EAAO/O,KACnBgJ,EAAE,SAAA1D,GAAC,OAAI8J,EAAOrN,EAAQuD,MACtBgM,MAAMrQ,KAET,OACEmF,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,YAAYqI,IAAI,aAC7BvI,EAAAnI,EAAAoI,cAAA,YACED,EAAAnI,EAAAoI,cAAA,kBAAgBuF,GAAG,OAAO4F,IAAE,EAACC,GAAG,KAAKJ,GAAG,OAAOK,GAAG,KAAKC,GAAG,KAAKC,aAAa,OAC1ExL,EAAAnI,EAAAoI,cAAA,QAAMkE,OAAO,MAAMsH,UAAU,OAAOC,YAAa,KACjD1L,EAAAnI,EAAAoI,cAAA,QAAMkE,OAAO,MAAMsH,UAAU,UAAUC,YAAa,OAGxD1L,EAAAnI,EAAAoI,cAAA,QAAMC,UAAU,OACVmB,KAAK,aACLnC,EAAG2L,EAAKzS,OAAOC,KAAKsD,MAE1BqE,EAAAnI,EAAAoI,cAAA,QAAMC,UAAU,cACVhB,EAAGiM,EAAU/S,OAAOC,KAAKsD,MAE/BqE,EAAAnI,EAAAoI,cAAA,KAAGC,UAAU,sBACXF,EAAAnI,EAAAoI,cAAA,QACEC,UAAU,aACVoC,OAAO,OACPC,YAAa,EACboJ,QAAS,IAGX3L,EAAAnI,EAAAoI,cAAA,KACEC,UAAU,kBAEVF,EAAAnI,EAAAoI,cAAA,UACErI,EAAG,EACHyJ,KAAK,UACLkB,YAAa,EACbD,OAAO,OACPqJ,QAAS,IAEX3L,EAAAnI,EAAAoI,cAAA,QACE2I,UAAU,kBACVC,SAAU,MAId7I,EAAAnI,EAAAoI,cAAA,QACEuC,MAAOmI,EAAY,GACnBlI,OAAQqF,EACRzG,KAAK,OACLuK,cAAc,MACdC,aAAc,WACZhR,IAAU,eACPiR,MAAM,UAAW,KACpBjR,IAAa,0BACViR,MAAM,UAAW,KACpBjR,IAAa,wBACViR,MAAM,UAAW,MAEtBC,YAAa,WACXlR,IAAU,eACPiR,MAAM,UAAW,KACpBjR,IAAa,0BACViR,MAAM,UAAW,KACpBjR,IAAa,wBACViR,MAAM,UAAW,MAEtBE,YAAa,SAAAnJ,GAAE,OAAI4H,EAAKd,gBAAgB9G,EAAGoJ,YAAYC,QAAU,GAAIrJ,EAAGoJ,YAAYE,qBAnKxEjJ,IAAMC,WAmLftD,eAPS,SAAAhB,GAAK,MAAK,CAChC5G,YAAa4G,EAAMD,IAAI3G,YACvB8C,YAAajE,IAAO+H,EAAMY,SAAS1E,aACnC3D,KAAMyH,EAAMD,IAAIxH,OAIHyI,CAAyBuJ,ICrKlCgD,uBACJ,SAAAA,EAAYrM,GAAO,IAAAwD,EAAA,OAAAnL,OAAAoL,EAAA,EAAApL,CAAA8I,KAAAkL,IACjB7I,EAAAnL,OAAAqL,EAAA,EAAArL,CAAA8I,KAAA9I,OAAAsL,EAAA,EAAAtL,CAAAgU,GAAAzI,KAAAzC,KAAMnB,KAsBRsM,OAAS,WACP,IAAIC,EAEJ,OAAO,SAAAC,IACK,IAAND,GACFE,aAAaF,GAEfA,EAAIG,WAAW,WACb,IAAM5N,EAAQzG,OAAOmH,OAAOgE,EAAK1E,MAAO,CACtC2D,MAAOwH,SAAS0C,eAAe,QAAQC,YAAcpJ,EAAKxD,MAAM6K,OAAOgC,KAAOrJ,EAAKxD,MAAM6K,OAAOiC,QAElGtJ,EAAKO,SAASjF,IACb,OAnCY0E,EAuCnBuJ,YAAc,SAAC/M,EAAO3I,GACpB,IAAMuR,EAAS9N,MACTkS,EAAYlS,MACZmO,EAASnO,MAAiBmS,OAE1BC,EAAsB1J,EAAK1E,MAAMqO,uBAAyBpS,EAAuByI,EAAKxD,MAAMoN,QAAS5J,EAAKxD,MAAMhF,YAAawI,EAAKxD,MAAM9H,aAExIoH,EAAM4N,EACV/K,KAAKkL,KAAKlL,KAAK7C,IAAIxE,IAAOzC,OAAOS,OAAOoU,IAAuBpS,IAAOzC,OAAOS,OAAOzB,MACpFyD,IAAOzC,OAAOS,OAAOzB,IAEjBiW,EAAOjV,OAAA+J,EAAA,EAAA/J,CAAOuH,MAAM,IAAItH,QACxBiV,EAAU,CAAC,EAAGjO,GAgBpB,OAdAsJ,EACG4E,OAAOF,GACPpI,MAAM,CAAC,EAAG1B,EAAK1E,MAAM2D,MAAQzC,EAAM6K,OAAOiC,QAC1CW,aAAazN,EAAMyN,cACnBC,aAAa1N,EAAM0N,cAEtBV,EACGQ,OAAO,CAAC,EAAG,KACXtI,MAAM,CAAC,EAAG1B,EAAK1E,MAAM2D,MAAQzC,EAAM6K,OAAOiC,QAE7C7D,EACGuE,OAAOD,GACPrI,MAAM,CAAClF,EAAM0C,OAAS1C,EAAM6K,OAAOG,IAAMhL,EAAM6K,OAAOI,OAAQ,IAE1D,CAACrC,SAAQK,SAAQ+D,cAnEPxJ,EAsEnBmK,eAAiB,SAAA3N,GAGf,MAAO,CAAC4K,UAFUpH,EAAK1E,MAAM2D,OAASzC,EAAM6K,OAAOgC,KAAO7M,EAAM6K,OAAOiC,OAEpD/E,WADA/H,EAAM0C,SAtEzBc,EAAK1E,MAAQ,CACXyL,kBAAmB,EACnB4C,uBAAuB,EACvBS,wBAAwB,EACxBC,0BAA0B,EAC1BpL,MAAOwH,SAAS0C,eAAe,QAAQC,YAAc5M,EAAM6K,OAAOgC,KAAO7M,EAAM6K,OAAOiC,OAPvEtJ,oFAYjBrC,KAAKmL,qDAILxO,OAAO8H,iBAAiB,SAAUzE,KAAKmL,yDAIvCxO,OAAOgQ,oBAAoB,SAAU3M,KAAKmL,uDAyD1CyB,IAAaC,2CAGN,IAAAtD,EAAAvJ,KACD1C,IAAiB0C,KAAKnB,MAAM9H,YAAYiJ,KAAKnB,MAAMhF,gBACrDmG,KAAKnB,MAAM5H,cAAcqB,UACzB0H,KAAKnB,MAAMzG,gBAAgBE,OAwI/B,OACEwG,EAAAnI,EAAAoI,cAAC4F,GAAD,KACE7F,EAAAnI,EAAAoI,cAAC+N,GAAD,CAAUjT,YAAamG,KAAKnB,MAAMhF,cAClCiF,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,YAET1B,EA3Ia,WACrB,IAAIpH,EAAO,GAETA,EADIqT,EAAK1K,MAAM5H,cAAcqB,OACtBiR,EAAK1K,MAAM9G,YACPwR,EAAK1K,MAAMzG,gBAAgBE,OAC/BiR,EAAK1K,MAAM/F,cAEXyQ,EAAK1K,MAAM3I,KAPO,IAuCvB6W,EAvCuBC,EASYzD,EAAKqC,YAAYrC,EAAK1K,MAAO3I,GAA5DuR,EATmBuF,EASnBvF,OAAQK,EATWkF,EASXlF,OAAQ+D,EATGmB,EASHnB,UATGoB,EAUO1D,EAAKiD,eAAejD,EAAK1K,OAAnD4K,EAVmBwD,EAUnBxD,UAAW7C,EAVQqG,EAURrG,WAEbzI,EAAMxE,IAAOzC,OAAOS,OAAOzB,IAG3BgX,EAAW,CACfzF,SACAK,SACA2B,YACA7C,aACAoB,UAPgB7J,EAAM,GAAKA,EAAMA,EAAM,GASnCkI,EAAW,CACfA,SAAUnP,OAAOC,KAAKjB,GAAME,IAAI,SAACC,EAAMqC,GAAP,MAAc,CAC5C4L,GAAI5L,EACJxC,KAAMG,EACNoF,EAAGgM,EAAOpR,GACVqL,EAAGoG,EAAO5R,EAAKG,IACfiL,MAAOmG,EAAO0F,YACd5L,OAAQqF,EAAakB,EAAO5R,EAAKG,IAASkT,EAAK1K,MAAM6K,OAAOG,IAAMN,EAAK1K,MAAM6K,OAAOI,OACpFpQ,YAAaxD,EAAKG,OAGhBqR,EAAS,aAAA7R,OAAgB0T,EAAK1K,MAAM6K,OAAOgC,KAAlC,KAAA7V,OAA0C0T,EAAK1K,MAAM6K,OAAOG,IAA5D,KAETkC,EAAsBxC,EAAK5L,MAAMqO,uBAAyBpS,EAAuB2P,EAAK1K,MAAMoN,QAAS1C,EAAK1K,MAAMhF,YAAa0P,EAAK1K,MAAM9H,aACxIqW,EAAuB7D,EAAK5L,MAAM8O,wBlB6CP,SAACvW,EAAM2D,EAAa9C,GAKzD,IAJA,IAAM+C,EAAYlE,IAAOiE,GAAaJ,QAAQ,SACxCM,EAAUnE,IAAOiE,GAAagB,MAAM,SACtC7B,EAAO,GACPR,EAAMsB,EACHtB,EAAIwB,SAASD,IAClBf,EAAKpC,KAAK4B,EAAIyB,UACdzB,EAAMA,EAAI0B,QAAQV,IAAI,EAAG,KAE3B,IAAMW,EAAgBnB,EAAK5C,IAAI,SAAAoC,GAAG,OAAI5C,IAAO4C,GAAKzC,OAAO,gBAErDkB,EADeC,OAAOC,KAAKjB,GAAMkB,OAAO,SAAAC,GAAG,OAAI8C,EAAcE,SAAShD,KAC3CZ,OAAO,SAACe,EAAKnB,GAE1C,OADAmB,EAAIZ,KAAK,CAAE4B,IAAKnC,EAAMqD,YAAa3C,EAAYV,KACxCmB,GACN,IACHP,EAAgBA,EAAcb,IAAI,SAAAU,GAAK,OACrCA,EAAM4C,YAAYtD,IAAI,SAAAC,GACpB,IAAM8C,EAAIvD,IAAM,GAAAC,OAAIiB,EAAM0B,IAAV,KAAA3C,OAAiBQ,IACjC,OAAO8C,EAAEC,UAAYD,EAAEE,UAAYF,EAAEG,cACjCC,SAASJ,EAAEK,IAAI,EAAG,QAAQC,QAAQ,QAAQ1D,OAAO,OACjDwD,SAASJ,EAAEM,QAAQ,QAAQ1D,OAAO,WAY1C,IARA,IAAMuC,EAASU,EAAK5B,OAAO,SAAAoB,GAAG,OAAItC,EAAKN,IAAO4C,GAAKzC,OAAO,iBAAgBuC,OAEpE+U,EAAmB,GAAGxX,OAAO2E,MAAM,GAAIvD,GAAeR,OAAO,SAACe,EAAKnB,GAEvE,OADAmB,EAAInB,IAASmB,EAAInB,IAAS,GAAK,EACxBmB,GACN,IAEC8V,EAAW,GACN5U,EAAI,EAAGA,EAAI,GAAIA,IACtB4U,EAAS5U,GAAK2U,EAAiB3U,GAAKC,OAAO0U,EAAiB3U,GAAIJ,GAAQM,QAAQ,GAAK,EAGvF,OAAO0U,EkBjF+DC,CAAwBhE,EAAK1K,MAAMoN,QAAS1C,EAAK1K,MAAMhF,YAAa0P,EAAK1K,MAAM9H,aAC3IyW,EAAyBjE,EAAK5L,MAAM+O,0BAA4BzU,EAAmBrC,IAAO2T,EAAK1K,MAAMhF,aAAa9D,OAAO,OAAQwT,EAAK1K,MAAM9H,YAAawS,EAAK1K,MAAM7H,QAASuS,EAAK1K,MAAM1G,gBAAiBoR,EAAK1K,MAAMoN,SAY1N,OATI1C,EAAK5L,MAAMqO,wBACbe,EAAWhB,GAETxC,EAAK5L,MAAM8O,yBACbM,EAAWK,GAET7D,EAAK5L,MAAM+O,2BACbK,EAAWS,EAAuB/U,YAGlCqG,EAAAnI,EAAAoI,cAAA,OAAKuC,MAAM,OAAOC,OAAQgI,EAAK1K,MAAM0C,OAAQ8F,IAAI,YAC/CvI,EAAAnI,EAAAoI,cAAA,KAAG2I,UAAWA,EAAWpG,MAAOmI,EAAWlI,OAAQqF,GACjD9H,EAAAnI,EAAAoI,cAAC0O,GAADvW,OAAAmH,OAAA,GAAW6O,EAAX,CAAqBxF,UAAS,eAAA7R,OAAiB+Q,EAAjB,QAC9B9H,EAAAnI,EAAAoI,cAAC2O,GAAUR,GACXpO,EAAAnI,EAAAoI,cAAC4O,GAADzW,OAAAmH,OAAA,GAAU6O,EAAc7G,KAErBkD,EAAK5L,MAAMqO,uBAAyBzC,EAAK5L,MAAM8O,wBAA0BlD,EAAK5L,MAAM+O,2BACrF5N,EAAAnI,EAAAoI,cAAC6O,GAAD,CACEnG,OAAQoE,EACR/D,OAAQA,EACR2B,UAAWA,EACX7C,WAAYA,EACZ8C,OAAQH,EAAK1K,MAAM6K,OACnBtP,aAAc2S,EACdrT,YAAaxD,EACbwR,UAAWA,MA2EXmG,GACA/O,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,eAAf,oBAEJ1B,GAAgBwB,EAAAnI,EAAAoI,cAACgG,EAAApO,EAAD,CAAc2N,GAAG,cAAcU,WAAS,EAACC,MAAM,cAEjE3H,GAxEe,WACnB,IAAMwQ,EAAmB,WACvBvE,EAAK3G,SAAS,CACZoJ,uBAAwBzC,EAAK5L,MAAMqO,sBACnCS,wBAAwB,EACxBC,0BAA0B,GACzB,WACDnD,EAAK1K,MAAM1B,iBAAiBoM,EAAK5L,MAAMqO,uBACvCzC,EAAK1K,MAAMzB,mBAAkB,GAC7BmM,EAAK1K,MAAMxB,qBAAoB,MAG7B0Q,EAAwB,WAC5BxE,EAAK3G,SAAS,CACZ6J,wBAAyBlD,EAAK5L,MAAM8O,uBACpCT,uBAAuB,EACvBU,0BAA0B,GACzB,WACDnD,EAAK1K,MAAMzB,kBAAkBmM,EAAK5L,MAAM8O,wBACxClD,EAAK1K,MAAM1B,kBAAiB,GAC5BoM,EAAK1K,MAAMxB,qBAAoB,MAG7B2Q,EAA0B,WAC9BzE,EAAK3G,SAAS,CACZ8J,0BAA2BnD,EAAK5L,MAAM+O,yBACtCD,wBAAwB,EACxBT,uBAAuB,GACtB,WACDzC,EAAK1K,MAAMxB,oBAAoBkM,EAAK5L,MAAM+O,0BAC1CnD,EAAK1K,MAAMzB,mBAAkB,GAC7BmM,EAAK1K,MAAM1B,kBAAiB,MAUhC,OACE2B,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,oBACbF,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,cACdF,EAAAnI,EAAAoI,cAAA,QAAMC,UAAWC,IAAW,WAAY,CAACC,KAAQqK,EAAK5L,MAAMqO,wBAAyB7M,QAAS2O,GAA9F,iBACgBhP,EAAAnI,EAAAoI,cAAA,SAAO1C,KAAK,WAAW4R,QAAS1E,EAAK5L,MAAMqO,sBAAuBkC,gBAAgB,EAAOC,SAAUL,KAElHhP,EAAAnI,EAAAoI,cAAA,QAAMC,UAAWC,IAAW,WAAY,CAACC,KAAQqK,EAAK5L,MAAM8O,yBAA0BtN,QAAS4O,GAA/F,kBACgBjP,EAAAnI,EAAAoI,cAAA,SAAO1C,KAAK,WAAW4R,QAAS1E,EAAK5L,MAAM8O,uBAAwByB,gBAAgB,EAAOC,SAAUJ,KAEpHjP,EAAAnI,EAAAoI,cAAA,QAAMC,UAAWC,IAAW,WAAY,CAACC,KAAQqK,EAAK5L,MAAM+O,2BAA4BvN,QAAS6O,GAAjG,YACUlP,EAAAnI,EAAAoI,cAAA,SAAO1C,KAAK,WAAW4R,QAAS1E,EAAK5L,MAAM+O,yBAA0BwB,gBAAgB,EAAOC,SAAUH,MAGlHlP,EAAAnI,EAAAoI,cAAA,UAAQI,QApBU,WACpBoK,EAAK1K,MAAMvB,cAAa,GACxBiM,EAAK1K,MAAMtB,UAAU,MACrBgM,EAAK1K,MAAM1B,kBAAiB,GAC5BoM,EAAK1K,MAAMzB,mBAAkB,GAC7BmM,EAAK1K,MAAMxB,qBAAoB,KAe7B,kBAkBiB+Q,WAvOJpM,IAAM0B,gBAiQd/E,eApBS,SAAAhB,GAAK,MAAK,CAChC5G,YAAa4G,EAAMD,IAAI3G,YACvBE,cAAe0G,EAAMD,IAAIzG,cACzBmB,gBAAiBuF,EAAMD,IAAItF,gBAC3BL,YAAa4F,EAAMD,IAAI3F,YACvBe,cAAe6E,EAAMD,IAAI5E,cACzBe,YAAajE,IAAO+H,EAAMY,SAAS1E,aAAa9D,OAAO,cACvDkW,QAAStO,EAAMD,IAAIxH,KACnBc,QAAS2G,EAAMD,IAAI1G,QACnBmB,gBAAiBwF,EAAMY,SAASpG,kBAGP,SAAAyG,GAAQ,MAAK,CACtCrB,UAAW,SAAA3F,GAAG,OAAIgH,EAASrB,EAAU3F,KACrCuF,iBAAkB,SAAAvF,GAAG,OAAIgH,EAASzB,EAAiBvF,KACnDwF,kBAAmB,SAAAxF,GAAG,OAAIgH,EAASxB,EAAkBxF,KACrDyF,oBAAqB,SAAAzF,GAAG,OAAIgH,EAASvB,EAAoBzF,KACzD0F,aAAc,SAAA1F,GAAG,OAAIgH,EAAStB,EAAa1F,OAG9B+G,CAA6CuM,oGCzD7CvM,uBA5BS,SAAAhB,GAAK,MAAK,CAChC3G,QAAS2G,EAAMD,IAAI1G,QACnBd,KAAMyH,EAAMD,IAAIxH,KAChB8F,YAAa2B,EAAMD,IAAI1B,YACvBjF,YAAa4G,EAAMD,IAAI3G,YACvB8C,YAAajE,IAAO+H,EAAMY,SAAS1E,aAAa9D,OAAO,cACvDkG,MAAO0B,EAAMD,IAAIzB,MACjBO,kBAAmBmB,EAAMS,SAAS5B,kBAClCQ,kBAAmBW,EAAMY,SAASvB,kBAClCqR,wBAAyB1Q,EAAMD,IAAI2Q,wBACnClS,iBAAkBwB,EAAMD,IAAIvB,mBAGH,SAAAyC,GAAQ,MAAK,CACtC0P,WAAY,SAAA1W,GAAG,OAAIgH,ElB/HK,SAAAhH,GAAG,MAAK,CAAEyE,KA1EhB,cA0EmCzE,OkB+HzB0W,CAAW1W,KACvC2W,aAAc,SAAA3W,GAAG,OAAIgH,EjB7KK,SAAAhH,GAAG,MAAK,CAAEyE,KAjChB,gBAiCqCzE,OiB6K3B2W,CAAa3W,KAC3C4W,QAAS,SAAA5W,GAAG,OAAIgH,ElBlIK,SAAAhH,GAAG,MAAK,CAAEyE,KA1EhB,WA0EgCzE,OkBkItB4W,CAAQ5W,KACjC6W,eAAgB,SAAA7W,GAAG,OAAIgH,ElBjIK,SAAAhH,GAAG,MAAK,CAAEyE,KA1Ef,mBA0EuCzE,OkBiI9B6W,CAAe7W,KAC/C0F,aAAc,SAAA1F,GAAG,OAAIgH,EAAStB,EAAa1F,KAC3CwE,YAAa,SAAAxE,GAAG,OAAIgH,EAASxC,EAAYxE,KACzC0E,iBAAkB,SAAA1E,GAAG,OAAIgH,EAAStC,EAAiB1E,KACnD2E,mBAAoB,SAAA3E,GAAG,OAAIgH,EAASrC,EAAmB3E,KACvD2F,UAAW,SAAA3F,GAAG,OAAIgH,EAASrB,EAAU3F,KACrCuF,iBAAkB,SAAAvF,GAAG,OAAIgH,EAASzB,EAAiBvF,KACnDwF,kBAAmB,SAAAxF,GAAG,OAAIgH,EAASxB,EAAkBxF,KACrDyF,oBAAqB,SAAAzF,GAAG,OAAIgH,EAASvB,EAAoBzF,OAG5C+G,CA/LH,SAAAE,GAwBIA,EAAM5C,MAAM7F,IAAI,SAACsY,EAAMhW,GAAP,OAC5BoG,EAAAnI,EAAAoI,cAAA,QAAM1H,IAAKqB,GACNoG,EAAAnI,EAAAoI,cAAA,KAAG1H,IAAKqX,EAAKC,MACVD,EAAKC,MAER7P,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,aAZF,SAAA4P,GAElB,GAAc,IAAVA,EAAa,MAAO,SACxB,IAAMlW,EAAIa,SAASyH,KAAKgC,MAAMhC,KAAK8B,IAAI8L,GAAS5N,KAAK8B,IAAI,QACzD,OAAO9B,KAAK6N,MAAMD,EAAQ5N,KAAK8N,IAAI,KAAMpW,GAAI,GAAK,IAHpC,CAAC,QAAS,KAAM,KAAM,KAAM,MAGoBA,GAStDqW,CAAYL,EAAK7K,UA7B3B,IAkCMmL,EAAgB,SAAAC,GACpBtV,IAAOsV,GAASC,KAAK,SAAAhZ,GACnB2I,EAAM2P,QAAQtY,GACd2I,EAAM0P,cAAa,KAClBY,MAAM,SAAAC,GACP,MAAMA,KA2CV,OACEtQ,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,OACbF,EAAAnI,EAAAoI,cAAA,UAAQC,UAAU,UAChBF,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,SAAf,mCAEFF,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,YATE,EA0CfF,EAAAnI,EAAAoI,cAAA,eACED,EAAAnI,EAAAoI,cAAA,2BACAD,EAAAnI,EAAAoI,cAACsQ,EAAA1Y,EAAD,CACEqI,UAAU,WACVsQ,QA3FM,CAAC,gBAAiB,gBAAiB,gBAAiB,iBA4F1DC,YAAY,YACZxO,MAAOlC,EAAM7C,YACbmS,SApEO,SAAA9X,GAhBfwI,EAAMvB,cAAa,GACnBuB,EAAM0P,cAAa,GACnB1P,EAAMvC,iBAAiB,CACrBrF,cAAe,GACfc,YAAa,KAEf8G,EAAMtC,mBAAmB,CACvB1D,gBAAiB,KACjBC,cAAe,GACfV,gBAAiB,KAEnByG,EAAMtB,UAAU,MAChBsB,EAAM1B,kBAAiB,GACvB0B,EAAMzB,mBAAkB,GACxByB,EAAMxB,qBAAoB,GAI1B,IAAM0D,EAAQ1K,EAAK0K,MACnBlC,EAAM4P,eAAe1N,GACrBlC,EAAMzC,aAAY,GACJ,kBAAV2E,GACFiO,EAAcQ,MAEF,kBAAVzO,GACFiO,EAAcS,MAEF,kBAAV1O,GACFiO,EAAcU,MAEF,kBAAV3O,GACFiO,EAAcW,UAyDV9Q,EAAMrC,mBACNsC,EAAAnI,EAAAoI,cAAA,eACED,EAAAnI,EAAAoI,cAAA,6BACAD,EAAAnI,EAAAoI,cAAC6Q,GAAD,OAIF/Q,EAAM7B,mBACN8B,EAAAnI,EAAAoI,cAAA,eACED,EAAAnI,EAAAoI,cAAA,yBACAD,EAAAnI,EAAAoI,cAAC8Q,GAAD,CACE3Z,KAAM2I,EAAM7H,QAAQ6H,EAAMhF,aAC1B6P,OAAQ,CAAEG,IAAK,GAAI8B,MAAO,GAAI7B,OAAQ,GAAI4B,KAAM,IAChDnK,OAAQ,IACR+K,aAAc,GACdC,aAAc,MAKlB1N,EAAM1C,kBACN2C,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,WACbF,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,mBACfF,EAAAnI,EAAAoI,cAAA,OAAKC,UAAU,yBC3KP8Q,QACW,cAA7BnT,OAAOoT,SAASC,UAEe,UAA7BrT,OAAOoT,SAASC,UAEhBrT,OAAOoT,SAASC,SAASC,MACvB,2DCRN,IAKMC,GAAQC,YACZ3S,EACAb,OAAOyT,8BAAgCzT,OAAOyT,6BAA6B,CACzEC,gBARoB,SAACvS,GAAD,MACN,0BAAhBA,EAAOzB,MAAoCyB,EAAO5H,KAAlDgB,OAAA+G,EAAA,EAAA/G,CAAA,GACO4G,EADP,CACe5H,KAAM,kBAAoB4H,GAOvCwS,eAAgB,SAAC3S,GAAD,OAAWA,EAAMzH,KAANgB,OAAA+G,EAAA,EAAA/G,CAAA,GAAkByG,EAAlB,CAAyBzH,KAAM,kBAAoByH,MAIlF4S,IAASC,OACP1R,EAAAnI,EAAAoI,cAAC0R,EAAA,EAAD,CAAUP,MAAOA,IACfpR,EAAAnI,EAAAoI,cAAC2R,GAAD,OAEF5H,SAAS0C,eAAe,SDsGpB,kBAAmBmF,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC,wDEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,oECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.ff27276e.chunk.js","sourcesContent":["import moment from 'moment';\nimport * as d3 from \"d3\";\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    // debugger\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    const max = d3.max(Object.values(occurrences));\n    const nrOfTicks = max < 10 ? max : max / 2;\n    let obj = {};\n    for (let i = 1; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    // acc.push(occurrences);\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).isoWeekday(1);\n  const endDate = moment(selectedDay).isoWeekday(8);\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let weekObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).startOf('month');\n  const endDate = moment(selectedDay).endOf('month');\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n\n  return monthObj;\n};\n\nexport const getCurrentWeek = selectedDay => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = selectedDay => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = selectedDay => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  return {\n    daysArr: daysArr.concat(daysArr1),\n    length: daysArr.concat(daysArr1).length\n  }\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedMonth: null,\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\n","const SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: action.screenWidth\n      });\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import {getCurrentWeek, getCurrentMonth, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\n\nconst initialState = {\n  isBarChartVisible: false,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val,\n        currentWeek: getCurrentWeek(action.val),\n        currentMonth: getCurrentMonth(action.val),\n        currentWeekdays: getCurrentWeekdays(action.val)\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {setWeekdayInsights, setMonthInsights} from \"../../reducers/app\";\nimport {selectDay, showBarChart} from \"../../reducers/barChart\";\nimport {getMonthInsights, getWeekdayInsights} from \"../../helpers/parser\";\nimport {connect} from \"react-redux\";\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = props => {\n  const onWeekdayClick = day => {\n    props.selectDay(null);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    const weekdayInsights = getWeekdayInsights(day, props.dayInsights, props.allDays);\n    props.setWeekdayInsights({\n      selectedWeekday: weekdayInsights.selectedWeekday,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      weekdayInsights: weekdayInsights.weekdayInsights\n    });\n    props.showBarChart(true);\n  };\n  return (\n    <div className='dayLabelsContainer'>\n    <span>\n      {\n        weekArray.map(day =>\n          <text\n            key={day}\n            className={classNames('dayLabels', {'bold': props.selectedWeekday === day})}\n            onClick={() => onWeekdayClick(day)}\n          >\n            {day}\n          </text>\n        )\n      }\n    </span>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='yearLabel'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {selectDay, showBarChart, showMonthOverview, showWeekOverview} from '../../reducers/barChart';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    const isCurrentWeek = nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY')) ||\n      this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY'));\n    const isCurrentMonth = nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY')) ||\n      this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY'));\n    const isCurrentWeekday = nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY')) ||\n      this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY'));\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.fill !== nextProps.fill ||\n      isCurrentWeek ||\n      isCurrentMonth ||\n      isCurrentWeekday;\n  }\n\n  componentDidUpdate() {\n    d3.select('.day.fill')\n      .transition()\n      .duration(1000)\n  }\n\n  render() {\n    const props = this.props;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const month = props.month;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(props.data).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n    const isCurrentWeek = props.currentWeek.includes(moment(d).format('DD-MM-YYYY'));\n    const isCurrentMonth = props.currentMonth.includes(moment(d).format('DD-MM-YYYY'));\n    const isCurrentWeekday = props.currentWeekdays.daysArr.includes(moment(d).format('DD-MM-YYYY'));\n\n    const item = Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    const interpolateColor = ((isCurrentWeek && props.showWeekOverview) || (isCurrentMonth && props.showMonthOverview) || (isCurrentWeekday && props.showWeekdayOverview))\n      ? d3.interpolateReds(value) : d3.interpolatePurples(value);\n    let fillColor = !!props.data[item] ? (isCurrentDay ? d3.interpolateReds(value) : interpolateColor) : '#ececec';\n\n    // #af5159\n    const onDayClick = ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      props.selectDay(d);\n      props.showBarChart(true);\n      // props.showMonthOverviewFct(false);\n      // props.showWeekOverviewFct(false);\n    };\n    return (\n      <rect\n        key={d}\n        className='day'\n        stroke={isCurrentDay ? '#000' : ''}\n        strokeWidth={isCurrentDay ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={onDayClick}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.barChart.selectedDay,\n  selectedWeekday: state.app.selectedWeekday,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.barChart.currentWeek,\n  currentMonth: state.barChart.currentMonth,\n  currentWeekdays: state.barChart.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showWeekOverviewFct: val => dispatch(showWeekOverview(val)),\n  showMonthOverviewFct: val => dispatch(showMonthOverview(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights } from '../../helpers/parser';\nimport {setMonthInsights, setWeekdayInsights} from \"../../reducers/app\";\nimport { showBarChart, selectDay } from \"../../reducers/barChart\";\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    const { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count+1 }));\n    } else {\n      console.log('now show day and month labels');\n    }\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const renderMonthOverview = month => {\n      props.selectDay(null);\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), props.dayInsights, props.allDays);\n      props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      props.showBarChart(true);\n    };\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className={classNames('month-name', {'bold': isCurrentMonth})}\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n            onClick={() => renderMonthOverview(monthName(month))}\n          >\n            { monthName(month) }\n          </text>\n          { renderList.map(d => <Day fill={isCurrentMonth || moment(d).format('ddd') === props.selectedWeekday} day={d} month={month} key={d} />) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    return (\n      <div>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Card>\n        <DayLabels />\n        <YearLabel />\n        <div className='months'>\n          <Year />\n        </div>\n        <ReactTooltip id='svgTooltip' multiline class='tooltipx'/>\n      </Card>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {selectDay, showBarChart} from '../../reducers/barChart';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport { getMonthInsights } from '../../helpers/parser';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  render() {\n    const { minDate, maxDate, selectDay, showBarChart, setMonthInsights, setWeekdayInsights,\n      selectedMonth, selectedDay, dayInsights, allDays, selectedWeekday } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay;\n    let unit = '';\n    if (selectedMonth) {\n      unit = 'months';\n    } else if (selectedWeekday) {\n      unit = 'weeks';\n    } else {\n      unit = 'days';\n    }\n    const previousItem = selectedMonth ? selectedMonth-1 : moment(selectedItem).subtract(1, unit);\n    const nextItem = selectedMonth ? parseInt(selectedMonth)+1 : moment(selectedItem).add(1, unit);\n    const showPreviousArrow = selectedMonth ? moment(previousItem, 'M').isAfter(minDate.startOf('year')) : previousItem.isAfter(minDate.startOf('year'));\n    const showNextArrow = selectedMonth ? true : nextItem.isBefore(maxDate.endOf('year'));\n    const pickDay = day => {\n      setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: [],\n        selectedMonth: null\n      });\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      selectDay(day);\n      showBarChart(true);\n    };\n    const pickMonth = month => {\n      selectDay(null);\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(month.toString(), dayInsights, allDays);\n      setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      showBarChart(true);\n    };\n    let string = '';\n    if (selectedMonth) {\n      string = moment(selectedMonth, 'M').format('MMMM');\n    } else if (selectedWeekday) {\n      string = `${moment(selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      string = moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n\n    return (\n      <div className='yearLabel dayTitle'\n           tabIndex={0}\n           onKeyDown={ev => {\n             if (ev) {\n               if (ev.key === 'ArrowLeft') {\n                 !selectedMonth ? pickDay(moment(selectedItem).add(-1, unit)) : pickMonth(selectedItem - 1)\n               }\n               if (ev.key === 'ArrowRight') {\n                 !selectedMonth ? pickDay(moment(selectedItem).add(1, unit)) : pickMonth(parseInt(selectedItem) + 1)\n               }\n             }\n      }}>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => {showPreviousArrow && selectDay(moment(selectedItem).add(-1, unit))}}\n        />\n        { string }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showNextArrow && selectDay(moment(selectedItem).add(1, unit))}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.barChart.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1,\n      modalOpen: null\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n    const openModal = d => {\n      this.setState({\n        modalOpen: d\n      });\n    };\n\n    current.interrupt();\n\n    current.transition()\n      .attr('fill', '#6595ec');\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter.attr('fill', '#6595ec');\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', '#6595ec')\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `Time - ${d.data}:00 <br> Occurrences - ${d.occurrences}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nexport default Bars;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale);\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={`translate(0,${this.props.plotHeight - 50})`}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale).ticks(this.props.nrOfTicks).tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1,\n      showTooltip: false,\n      domainX: null,\n      domainY: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { yScale, plotHeight } = this.props;\n\n    // mouseX = mouseX - 40;\n\n    d3.select(\".mouse-line\")\n      .attr(\"d\", function() {\n        let d = \"M\" + mouseX + \",\" + (plotHeight - 50);\n        d += \" \" + mouseX + \",\" + 0;\n        return d;\n      });\n\n    const lines = document.getElementsByClassName('line');\n    let pos;\n\n    d3.selectAll(\".mouse-per-line\")\n      .attr(\"transform\", function(d, i) {\n        let beginning = 0,\n          end = lines && lines[i].getTotalLength(),\n          target = null;\n\n        while (end){\n          target = Math.floor((beginning + end) / 2);\n          pos = lines[i].getPointAtLength(target);\n          if ((target === end || target === beginning) && pos.x !== mouseX) {\n            break;\n          }\n          if (pos.x > mouseX)      end = target;\n          else if (pos.x < mouseX) beginning = target;\n          else break; //position found\n        }\n\n        d3.select(this).select('text')\n          .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n        return \"translate(\" + mouseX + \",\" + pos.y +\")\";\n      });\n  };\n\n  render() {\n    const { xScale, plotWidth, plotHeight, margin, yScale } = this.props;\n\n    const weekObj = this.props.weekInsights;\n\n    // define the area\n    const area = d3.area()\n      .x(d => xScale(d))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    const valueline = d3.line()\n      .x((d, i) => xScale(i))\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id=\"grad\" is x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\" spreadMethod=\"pad\">\n            <stop offset=\"10%\" stopColor=\"#fff\" stopOpacity={.4}/>\n            <stop offset=\"80%\" stopColor=\"#7888BF\" stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className=\"area\"\n              fill=\"url(#grad)\"\n              d={area(Object.keys(weekObj))}\n        />\n        <path className=\"line shadow\"\n              d={valueline(Object.keys(weekObj))}\n        />\n        <g className=\"mouse-over-effects\">\n          <path\n            className=\"mouse-line\"\n            stroke=\"#000\"\n            strokeWidth={1}\n            opacity={0}\n          >\n          </path>\n          <g\n            className=\"mouse-per-line\"\n          >\n            <circle\n              r={5}\n              fill=\"#7888BF\"\n              strokeWidth={1}\n              stroke=\"#000\"\n              opacity={0}\n            />\n            <text\n              transform='translate(10,3)'\n              fontSize={14}\n              // fill=\"#777\"\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => {\n              d3.select(\".mouse-line\")\n                .style(\"opacity\", \"0\");\n              d3.selectAll(\".mouse-per-line circle\")\n                .style(\"opacity\", \"0\");\n              d3.selectAll(\".mouse-per-line text\")\n                .style(\"opacity\", \"0\");\n            }}\n            onMouseOver={() => {\n              d3.select(\".mouse-line\")\n                .style(\"opacity\", \"1\");\n              d3.selectAll(\".mouse-per-line circle\")\n                .style(\"opacity\", \"1\");\n              d3.selectAll(\".mouse-per-line text\")\n                .style(\"opacity\", \"1\");\n            }}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay),\n  data: state.app.data\n});\n\n\nexport default connect(mapStateToProps)(AreaChart);\n","import React from 'react';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\n\nimport Card from '../widget/Card';\n\nimport DayLabel from './DayLabel';\nimport Bars from './Bars';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport AreaChart from './AreaChart';\n\nimport './BarChart.scss';\nimport {selectDay, showWeekOverview, showMonthOverview, showWeekdayOverview, showBarChart} from \"../../reducers/barChart\";\nimport {getCurrentWeekInsights, getCurrentMonthInsights, getWeekdayInsights} from \"../../helpers/parser\";\n\nclass BarChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1,\n      isWeekOverviewChecked: false,\n      isMonthOverviewChecked: false,\n      isWeekdayOverviewChecked: false,\n      width: document.getElementById('card').clientWidth - props.margin.left - props.margin.right\n    };\n  }\n\n  componentWillMount() {\n    this.resize();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize());\n  }\n\n  resize = () => {\n    let t;\n\n    return event => {\n      if (t !== false) {\n        clearTimeout(t);\n      }\n      t = setTimeout(() => {\n        const state = Object.assign(this.state, {\n          width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n        });\n        this.setState(state);\n      }, 100);\n    };\n  };\n\n  updateScale = (props, data) => {\n    const xScale = d3.scaleBand();\n    const newXScale = d3.scaleLinear();\n    const yScale = d3.scaleLinear().nice();\n\n    const currentWeekInsights = this.state.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n\n    const max = currentWeekInsights ?\n      Math.ceil(Math.max(d3.max(Object.values(currentWeekInsights)), d3.max(Object.values(data)))) :\n      d3.max(Object.values(data));\n\n    const xDomain = [...Array(24).keys()];\n    const yDomain = [0, max];\n\n    xScale\n      .domain(xDomain)\n      .range([0, this.state.width - props.margin.right])\n      .paddingInner(props.paddingInner)\n      .paddingOuter(props.paddingOuter);\n\n    newXScale\n      .domain([0, 23])\n      .range([0, this.state.width - props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([props.height - props.margin.top - props.margin.bottom, 0]);\n\n    return {xScale, yScale, newXScale};\n  };\n\n  updatePlotSize = props => {\n    const plotWidth = this.state.width - (props.margin.left + props.margin.right);\n    const plotHeight = props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const showBarChart = !!this.props.dayInsights[this.props.selectedDay] ||\n      !!this.props.monthInsights.length ||\n      !!this.props.weekdayInsights.length;\n\n    const renderBarChart = () => {\n      let data = [];\n      if (!!this.props.monthInsights.length) {\n        data = this.props.daysOfMonth;\n      } else if (!!this.props.weekdayInsights.length) {\n        data = this.props.daysOfWeekday;\n      } else {\n        data = this.props.data;\n      }\n      const { xScale, yScale, newXScale } =  this.updateScale(this.props, data);\n      const { plotWidth, plotHeight } = this.updatePlotSize(this.props);\n\n      const max = d3.max(Object.values(data));\n      const nrOfTicks = max < 10 ? max : max / 2;\n\n      const metaData = {\n        xScale,\n        yScale,\n        plotWidth,\n        plotHeight,\n        nrOfTicks\n      };\n      const plotData = {\n        plotData: Object.keys(data).map((item, i) => ({\n          id: i,\n          data: item,\n          x: xScale(item),\n          y: yScale(data[item]),\n          width: xScale.bandwidth(),\n          height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n          occurrences: data[item]\n        }))\n      };\n      const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n\n      const currentWeekInsights = this.state.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n      const currentMonthInsights = this.state.isMonthOverviewChecked && getCurrentMonthInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n      const currentWeekdayInsights = this.state.isWeekdayOverviewChecked && getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.dataArr);\n\n      let insights;\n      if (this.state.isWeekOverviewChecked) {\n        insights = currentWeekInsights;\n      }\n      if (this.state.isMonthOverviewChecked) {\n        insights = currentMonthInsights;\n      }\n      if (this.state.isWeekdayOverviewChecked) {\n        insights = currentWeekdayInsights.weekdayObj;\n      }\n      return (\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} />\n            {\n              (this.state.isWeekOverviewChecked || this.state.isMonthOverviewChecked || this.state.isWeekdayOverviewChecked) &&\n              <AreaChart\n                xScale={newXScale}\n                yScale={yScale}\n                plotWidth={plotWidth}\n                plotHeight={plotHeight}\n                margin={this.props.margin}\n                weekInsights={insights}\n                occurrences={data}\n                transform={transform}\n              />\n            }\n          </g>\n        </svg>\n      )\n    };\n\n    const renderFooter = () => {\n      const onCheckboxChange = () => {\n        this.setState({\n          isWeekOverviewChecked: !this.state.isWeekOverviewChecked,\n          isMonthOverviewChecked: false,\n          isWeekdayOverviewChecked: false\n        }, () => {\n          this.props.showWeekOverview(this.state.isWeekOverviewChecked);\n          this.props.showMonthOverview(false);\n          this.props.showWeekdayOverview(false);\n        });\n      };\n      const onMonthCheckboxChange = () => {\n        this.setState({\n          isMonthOverviewChecked: !this.state.isMonthOverviewChecked,\n          isWeekOverviewChecked: false,\n          isWeekdayOverviewChecked: false\n        }, () => {\n          this.props.showMonthOverview(this.state.isMonthOverviewChecked);\n          this.props.showWeekOverview(false);\n          this.props.showWeekdayOverview(false);\n        });\n      };\n      const onWeekdayCheckboxChange = () => {\n        this.setState({\n          isWeekdayOverviewChecked: !this.state.isWeekdayOverviewChecked,\n          isMonthOverviewChecked: false,\n          isWeekOverviewChecked: false\n        }, () => {\n          this.props.showWeekdayOverview(this.state.isWeekdayOverviewChecked);\n          this.props.showMonthOverview(false);\n          this.props.showWeekOverview(false);\n        });\n      };\n      const onRemoveClick = () => {\n        this.props.showBarChart(false);\n        this.props.selectDay(null);\n        this.props.showWeekOverview(false);\n        this.props.showMonthOverview(false);\n        this.props.showWeekdayOverview(false);\n      };\n      return (\n        <div className='footer yearLabel'>\n          <div className='checkboxes'>\n           <span className={classNames('checkbox', {'bold': this.state.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n             Week overview <input type='checkbox' checked={this.state.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n           </span>\n            <span className={classNames('checkbox', {'bold': this.state.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n             Month overview <input type='checkbox' checked={this.state.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n           </span>\n            <span className={classNames('checkbox', {'bold': this.state.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n             Weekdays <input type='checkbox' checked={this.state.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n           </span>\n          </div>\n          <button onClick={onRemoveClick}>\n            Remove charts\n          </button>\n        </div>\n      )\n    };\n\n    return (\n      <Card>\n        <DayLabel selectedDay={this.props.selectedDay} />\n        <div className='barChart'>\n            {\n              showBarChart\n              ? renderBarChart()\n              : <div className='emptyString'>No data recorded</div>\n            }\n          { showBarChart && <ReactTooltip id='rectTooltip' multiline class='tooltipx'/> }\n        </div>\n        { showBarChart &&  renderFooter() }\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD'),\n  dataArr: state.app.data,\n  allDays: state.app.allDays,\n  currentWeekdays: state.barChart.currentWeekdays\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport {setData, uploadFile, setDatasetName, showSpinner, setMonthInsights, setWeekdayInsights} from '../reducers/app';\nimport { showCalendar } from '../reducers/calendar';\nimport { showBarChart, selectDay, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../reducers/barChart';\n\nimport { parseDayInsights } from '../helpers/parser';\n\nimport Heatmap from './calendar/Heatmap';\nimport BarChart from './bar-chart/BarChart';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd_filtered.csv';\nimport dataset4 from '../data/data.csv';\n\nimport { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = false;\n\n  // whyDidYouUpdate(React);\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        {\n          showDropzone &&\n          <section>\n          <p>Upload file</p>\n          <Dropzone\n            accept='text/csv'\n            onDrop={onDrop}\n          >\n            {({getRootProps, getInputProps, isDragActive}) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n                >\n                  <input {...getInputProps()} />\n                  {\n                    !!files.length\n                      ? <span className='file-name'>\n                          <i className=\"fa fa-remove\" />\n                        {files}\n                        </span>\n                      : <span className='upload-message'>\n                          <i className=\"fa fa-upload\" />\n                            Drag & Drop your file or <u>Browse</u>\n                        </span>\n                  }\n                </div>\n              )\n            }}\n          </Dropzone>\n        </section>\n        }\n        <section>\n          <p>Select dataset</p>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </section>\n        {\n          props.isCalendarVisible &&\n          <section>\n            <p>Calendar heatmap</p>\n            <Heatmap />\n          </section>\n        }\n        {\n          props.isBarChartVisible &&\n          <section>\n            <p>Day overview</p>\n            <BarChart\n              data={props.allDays[props.selectedDay]}\n              margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n              height={300}\n              paddingInner={0.2}\n              paddingOuter={0.1}\n            />\n          </section>\n        }\n        {\n          props.isSpinnerVisible &&\n          <div className='spinner'>\n            <div className=\"double-bounce1\" />\n            <div className=\"double-bounce2\" />\n          </div>\n        }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD'),\n  files: state.app.files,\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.9f78b97e.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";"],"sourceRoot":""}