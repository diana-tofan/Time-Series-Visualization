{"version":3,"sources":["icons/github-logo.svg","icons/pdf-logo.svg","icons/clock.svg","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv","icons/github-logo-hover.svg","icons/pdf-logo-hover.svg","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","helpers/colors.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/widget/Modal.js","components/bar-chart/Footer.js","components/radial-chart/RadialChart.js","components/bar-chart/BarChart.js","components/bar-chart/Container.js","components/widget/Upload.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","countOccurrences","arr","reduce","obj","item","getDayInsights","data","newData","map","date","columns","time","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getDatasetOverview","weekdayInsights","weekday","length","getWeekdayInsights","currentWeekdays","isoWeekday","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","parseDayInsights","days","roundedHours","hour","m","parseInt","startOf","occurrences","getCurrentWeekInsights","selectedDay","Array","from","x","add","weekInsights","includes","week","weekOccurrences","apply","weekObj","getCurrentMonthInsights","daysInMonth","monthOccurrences","monthObj","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","clone","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","getExactTimes","selectedHour","exactTimes","parseData","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","showSpinner","type","setMonthInsights","setWeekdayInsights","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","selectDay","saveColor","isRadialChartVisible","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","modalData","timeArray","showBarChart","openModal","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","toConsumableArray","Set","value","radialChart","barChart","weekArray","_","connect","dispatch","props","realError","console","error","react_default","createElement","className","classNames","bold","onClick","onWeekdayClick","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","contains","showOverview","Day","isEqual","nextProps","isCurrentWeek","_this","isCurrentMonth","isCurrentWeekday","onDayClick","ev","preventDefault","stopPropagation","d3","nextState","formatDate","this","fill","_this2","_this$props","isCurrentDay","getDay","find","Date","setHours","count","Math","interpolateColor","fillColor","getDayColor","stroke","strokeWidth","width","height","rx","ry","y","getFullYear","getMonth","data-tip","data-for","React","Component","Month","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","getWeeksInMonth","floor","offset","renderMonthOverview","renderDays","renderList","calendar_Day","monthName","lastDay","firstDay","extraSpace","textAnchor","PureComponent","Year","getChunk","target","size","memo","index","months","range","monthsArr","hidden","calendar_Month","Card","id","children","Section","title","Heatmap","addEventListener","onScreenResize","components_widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","dist_default","multiline","class","DayLabel","pickDay","pickMonth","toString","pickWeekday","dataArr","getUnit","getString","selectedItem","select","unit","previousItem","nextItem","isAfter","isBefore","tabIndex","onKeyDown","XAxis","renderAxis","xAxis","xScale","ticks","tickFormat","refs","transition","transform","ref","fontSize","YAxis","yAxis","yScale","nrOfTicks","Bars","renderBars","current","bars","datum","plotData","selectAll","interrupt","attr","hoverIndex","darker","enter","append","classed","plotHeight","on","exit","remove","merge","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","xScaleArea","getPosition","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","text","invert","formatTime","hide","style","indexOf","setLineOpacity","plotWidth","_this$props2","margin","area","y0","top","bottom","y1","curve","x1","x2","y2","spreadMethod","stopColor","stopOpacity","strokeDasharray","opacity","pointerEvents","onMouseLeave","onMouseOver","onMouseMove","nativeEvent","offsetX","offsetY","Modal","hideModal","convertRange","r1","r2","display-block","display-none","src","clock","alt","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","showDatasetOverview","checked","defaultChecked","onChange","RadialChart","normalize","getPercentage","toggleFadeCss","blocks","out","visible","renderArcs","svg","sort","b","defaultValue","label","arcs","innerRadius","arcSize","outerRadius","arcsGrey","pieData","arc","object","pie","g","gText","j","attrTween","startAngle","endAngle","t","each","labelObj","centroidText","centroid","BarChart","resize","getElementById","clientWidth","left","right","getData","getInsights","showAreaChart","updateScale","nice","insights","ceil","yDomain","midnight","domain","updatePlotSize","_this3","removeEventListener","ReactTooltip","rebuild","_this4","_this$updateScale","_this$updatePlotSize","metaData","rgb","filteredColors","forEach","getAverageColor","components_radial_chart_RadialChart","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","components_widget_Modal","barChartProps","section-one-third","section-two-thirds","bar_chart_DayLabel","bar_chart_BarChart","uploadFile","setData","setDatasetName","showCalendar","file","name","bytes","log","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","react_dropdown_dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","renderBarChart","bar_chart_Container","href","rel","githubLogo","currentTarget","githubLogoHover","pdfLogo","pdfLogoHover","widget_Upload","calendar_Heatmap","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56567027.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.7338f8ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo.eb8752b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.d668b059.svg\";","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","module.exports = __webpack_public_path__ + \"static/media/github-logo-hover.b2035e53.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo-hover.eebd97c5.svg\";","import moment from 'moment';\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx').utc()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getDatasetOverview = (allDays, data, dayInsights) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .reduce((obj, key) => {\n      const weekday = moment(key, 'YYYY-MM-DD').format('ddd');\n      obj[weekday] = obj[weekday] || [];\n      obj[weekday].push(dayInsights[key]);\n      return obj;\n    }, {});\n  return Object.keys(weekdayInsights)\n    .reduce((obj, key) => {\n      obj[key] = weekdayInsights[key].flat().length;\n      return obj;\n    }, {});\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return parseInt(m.startOf('hour').format('HH'));\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 0; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: 7}, (x, i) => moment(selectedDay).startOf('isoWeek').add(i, 'days').format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => days.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let weekObj = {};\n\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: moment(selectedDay).daysInMonth()}, (x, i) => moment(selectedDay).startOf('isoMonth').add(i, 'days').format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => days.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n  return monthObj;\n};\n\nexport const getCurrentWeek = selectedDay => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = selectedDay => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = selectedDay => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  return {\n    daysArr: daysArr.concat(daysArr1),\n    length: daysArr.concat(daysArr1).length\n  }\n};\n\nexport const getExactTimes = (selectedHour, arr) => {\n  const exactTimes = arr.filter(i => moment(i, 'HH:mm:ss').format('HH') === moment(selectedHour.data, 'H').format('HH'));\n  return countOccurrences(exactTimes.map(i => moment(i, 'HH:mm:ss').format('HH:mm')));\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedMonth: null,\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay),\n        currentMonth: getCurrentMonth(selectedDay),\n        currentWeekdays: getCurrentWeekdays(selectedDay)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: [...new Set(state.colors.concat({\n            day: action.val.day,\n            value: action.val.value\n        }))]\n      });\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { getExactTimes } from '../helpers/parser';\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst OPEN_MODAL = 'OPEN_MODAL';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false,\n  modalData: null,\n  timeArray: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalData: action.val && action.val.data,\n        timeArray: action.val ? getExactTimes(action.val.data, action.val.arr) : []\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const openModal = val => ({ type: OPEN_MODAL, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { setWeekdayInsights, setMonthInsights } from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = props => {\n  const onWeekdayClick = day => {\n    props.selectDay(null);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    const weekdayInsights = getWeekdayInsights(day, props.dayInsights, props.allDays);\n    props.setWeekdayInsights({\n      selectedWeekday: weekdayInsights.selectedWeekday,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      weekdayInsights: weekdayInsights.weekdayInsights\n    });\n    props.showBarChart(true);\n  };\n  const realError = console.error;\n  console.error = (...x) => {\n    // debugger;\n    if (x[0] === 'Warning: The tag <text> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.') {\n      return;\n    }\n    realError(...x);\n  };\n\n  return (\n    <div className='day-labels-container'>\n    {\n      weekArray.map(day =>\n        <text\n          key={day}\n          className={classNames('day-labels', {'bold': props.selectedWeekday === day})}\n          onClick={() => onWeekdayClick(day)}\n        >\n          {day}\n        </text>\n      )\n    }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\nexport const getAverageColor = (selectedMonth, selectedWeekday, colors) => {\n  let rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  const filteredColors = selectedMonth\n    ? colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('M') === selectedMonth)\n    : colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('ddd') === selectedWeekday);\n\n  filteredColors.forEach(color => {\n    rgb.r += color.value.r;\n    rgb.g += color.value.g;\n    rgb.b += color.value.b;\n  });\n\n  return d3.rgb(rgb.r / filteredColors.length, rgb.g / filteredColors.length, rgb.b / filteredColors.length);\n};\n\nconst normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\nconst contains = (a, showOverview, obj) => {\n  if (a && showOverview) {\n    let i = a.length;\n    while (i--) {\n      if (a[i] === obj) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\nexport const getDayColor = (props, isCurrentDay) => {\n  const item = Object.keys(props.data).find(key => new Date(key).setHours(0,0,0,0) === props.day.setHours(0,0,0,0));\n\n  if (item) {\n    const day = moment(props.day).format('DD-MM-YYYY');\n\n    const isCurrentWeek = contains(props.currentWeek, props.showWeekOverview, day);\n    const isCurrentMonth = contains(props.currentMonth, props.showMonthOverview, day) || (props.selectedMonth && props.selectedMonth === moment(props.day).format('M'));\n    const isCurrentWeekday = contains(props.currentWeekdays, props.showWeekdayOverview, day) || (props.selectedWeekday && props.selectedWeekday === moment(props.day).format('ddd'));\n\n    const daysArr = Array.from({length: moment(props.month).daysInMonth()}, (x, i) => moment(props.month).startOf('month').add(i, 'days').format('YYYY-MM-DD'));\n\n    const count = Object.keys(props.data).reduce((acc, item) => {\n      daysArr.includes(item) && acc.push(props.data[item]);\n      return acc;\n    }, []);\n\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    const interpolateColor = (isCurrentDay || isCurrentWeek || isCurrentMonth || isCurrentWeekday) ? d3.interpolateOranges(value) : d3.interpolatePurples(value);\n\n    // const isColorSaved = props.colors.find(color => color.day === moment(props.day).format('DD-MM-YYYY'));\n    // !isColorSaved && props.saveColor({ day: moment(props.day).format('DD-MM-YYYY'), value: d3.color(d3.interpolateOranges(value)) });\n\n    return {\n      value,\n      count: props.data[item],\n      fillColor: interpolateColor\n    }\n  }\n\n  return {\n    fillColor: '#ececec',\n    count: 0\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport {getDayColor} from '../../helpers/colors';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.isEqual(nextProps) ||\n      this.props.fill !== nextProps.fill ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  isEqual = nextProps => {\n    const isCurrentWeek = (nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentMonth = (nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentWeekday = (nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    return isCurrentWeek || isCurrentMonth || isCurrentWeekday;\n  };\n\n  componentDidUpdate() {\n    // d3.select('.day.fill')\n    //   .transition()\n    //   .duration(1000)\n  }\n\n  onDayClick = (ev, day, color) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.selectDay({ day, color: d3.interpolateOranges(color.value) });\n    this.props.showBarChart(true);\n  };\n\n  render() {\n    const props = this.props;\n    const { cellMargin, cellSize } = this.props;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const color = getDayColor(props, isCurrentDay);\n\n    return (\n      <rect\n        key={d}\n        className='day'\n        stroke={isCurrentDay ? '#000' : ''}\n        strokeWidth={isCurrentDay ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={color.fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={ev => this.onDayClick(ev, d, color)}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${color.count}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeekday: state.app.selectedWeekday,\n  selectedMonth: state.app.selectedMonth,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights } from '../../helpers/parser';\nimport {setMonthInsights, setWeekdayInsights} from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    let { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth() + 1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count + 1 }));\n    }\n  };\n\n  getWeeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  renderMonthOverview = month => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    const monthInsights = getMonthInsights(moment().month(month).format('M'), this.props.dayInsights, this.props.allDays);\n    this.props.setMonthInsights({\n      selectedMonth: monthInsights.selectedMonth,\n      daysOfMonth: monthInsights.daysOfMonth,\n      monthInsights: monthInsights.monthInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  renderDays = (renderList, isCurrentMonth) =>\n    renderList.map(d => <Day fill={isCurrentMonth || moment(d).format('ddd') === this.props.selectedWeekday} day={d} month={this.props.month} key={d} />);\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className={classNames('month-name', {'bold': isCurrentMonth})}\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n            onClick={() => this.renderMonthOverview(monthName(month))}\n          >\n            { monthName(month) }\n          </text>\n          { this.renderDays(renderList, isCurrentMonth) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    const monthsArr = this.getChunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper'>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\n\nimport './Section.scss';\n\nconst Section = props =>\n  <section className={`section ${props.className || ''}`}>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n          </div>\n          <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport {getMonthInsights, getWeekdayInsights} from '../../helpers/parser';\nimport * as d3 from 'd3';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  pickDay = day => {\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    const color = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n    const value = color && d3.color(color.value);\n    this.props.selectDay({ day, color: value });\n    this.props.showBarChart(true);\n  };\n\n  pickMonth = month => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    const monthInsights = getMonthInsights(month.toString(), this.props.dayInsights, this.props.allDays);\n    this.props.setMonthInsights({\n      selectedMonth: monthInsights.selectedMonth,\n      daysOfMonth: monthInsights.daysOfMonth,\n      monthInsights: monthInsights.monthInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  pickWeekday = weekday => {\n    this.props.selectDay(null);\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    const weekdayInsights = getWeekdayInsights(weekday, this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.dataArr);\n    this.props.setWeekdayInsights({\n      weekdayInsights: weekdayInsights.weekdayInsights,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      selectedWeekday: weekdayInsights.selectedWeekday\n    });\n    this.props.showBarChart(true);\n  };\n\n  getUnit = () => {\n    if (this.props.selectedMonth) {\n      return 'months';\n    } else if (this.props.selectedWeekday) {\n      return 'weeks';\n    } else {\n      return 'days';\n    }\n  };\n\n  getString = selectedItem => {\n    if (this.props.selectedMonth) {\n      return moment(this.props.selectedMonth, 'M').format('MMMM');\n    } else if (this.props.selectedWeekday) {\n      return `${moment(this.props.selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      return moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n  };\n\n  select = (selectedItem, val, unit) => {\n    if (this.props.selectedDay) {\n      this.pickDay(moment(selectedItem).add(val, unit));\n    } else if (this.props.selectedMonth) {\n      this.pickMonth(parseInt(selectedItem) + val);\n    } else if (this.props.selectedWeekday) {\n      const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n      this.pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + val)).format('ddd'));\n    }\n  };\n\n  render() {\n    const { minDate, maxDate, selectedMonth, selectedDay, selectedWeekday } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay;\n    const unit = this.getUnit();\n\n    const previousItem = selectedMonth ? selectedMonth-1 : moment(selectedItem).subtract(1, unit);\n    const nextItem = selectedMonth ? parseInt(selectedMonth)+1 : moment(selectedItem).add(1, unit);\n\n    const showPreviousArrow = selectedMonth ? moment(previousItem, 'M').isAfter(minDate.startOf('year')) : previousItem.isAfter(minDate.startOf('year'));\n    const showNextArrow = selectedMonth ? true : nextItem.isBefore(maxDate.endOf('year'));\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}\n           onKeyDown={ev =>\n             (ev.key === 'ArrowLeft' && this.select(selectedItem, -1, unit)) ||\n             (ev.key === 'ArrowRight' && this.select(selectedItem, 1, unit))\n           }>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => showPreviousArrow && this.select(selectedItem, -1, unit)}\n        />\n        { this.getString(selectedItem) }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showPreviousArrow && this.select(selectedItem, 1, unit)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dataArr: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale)\n      .ticks(24)\n      .tickFormat(d3.timeFormat('%H'));\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale)\n      .ticks(this.props.nrOfTicks)\n      .tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { openModal } from '../../reducers/barChart';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  openModal = d => {\n    this.props.openModal({ data: d, arr: this.props.dayInsights[this.props.selectedDay] });\n  };\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n\n    current.interrupt();\n\n    const color = this.props.color;\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('id', (d, i) => `bar-${i}`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => this.openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `${d.occurrences} occurrences<br>between ${moment(d.data, 'hh').format('H:mm')} - ${moment(parseInt(d.data)+1, 'hh').format('H:mm')}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bars);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport {openModal} from \"../../reducers/barChart\";\n\nclass AreaChart extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { xScaleArea, yScale, plotHeight, color, plotData, openModal, dayInsights, selectedDay } = this.props;\n\n    const getPosition = i => {\n      const lines = document.getElementsByClassName('line');\n      let pos;\n\n      let beginning = 0,\n        end = lines && lines[i].getTotalLength(),\n        target = null;\n\n      while (end){\n        target = Math.floor((beginning + end) / 2);\n        pos = lines[i].getPointAtLength(target);\n        if ((target === end || target === beginning) && pos.x !== mouseX) {\n          break;\n        }\n        if (pos.x > mouseX)      end = target;\n        else if (pos.x < mouseX) beginning = target;\n        else break; //position found\n      }\n\n      d3.select('.line-text')\n        .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n      return pos;\n    };\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const formatTime = d3.timeFormat('%H');\n    const parseTime = d3.timeParse('%H');\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        const pos = getPosition(i);\n        const x = xScaleArea.invert(pos.x);\n\n        d3.selectAll('.bar')\n          .attr('fill', d =>  formatTime(parseTime(d.data)) === formatTime(x) ? d3.rgb(color).darker() : color);\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n\n    const hide = () => {\n      d3.select('.bar-text')\n        .style('opacity', 0);\n      d3.select('.bar-circle')\n        .style('opacity', 0);\n    };\n\n    d3.selectAll('.mouse-per-bar')\n      .attr('transform', function(d, i) {\n\n        const bars = plotData.map(i => moment(i.data, 'H').format('HH'));\n\n        const x = xScaleArea.invert(getPosition(i).x);\n\n        if (bars.indexOf(formatTime(x)) > -1) {\n          const item = plotData.find(i => moment(i.data, 'H').format('HH') === formatTime(x));\n          d3.select('.mouse-over-effects')\n            .style('cursor', 'pointer')\n            .on('click', () => {\n              openModal({ data: item, arr: dayInsights[moment(selectedDay).format('YYYY-MM-DD')] });\n              hide();\n            });\n\n          d3.select('.bar-text')\n            .style('opacity', 1)\n            .text(item.occurrences);\n          d3.select('.bar-circle')\n            .style('opacity', 1);\n          return `translate(${mouseX},${item.y - 3.8})`\n        }\n        d3.select('.mouse-over-effects')\n          .style('cursor', 'auto')\n          .on('click', null);\n        hide();\n      });\n  };\n\n  setLineOpacity = val => {\n    d3.select('.mouse-line')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-circle')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-text')\n      .style('opacity', val);\n  };\n\n  render() {\n    const { xScaleArea, plotWidth, plotHeight, margin, yScale } = this.props;\n\n    const weekObj = this.props.weekInsights;\n\n    const parseTime = d3.timeParse('%H:%M');\n\n    const area = d3.area()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    const line = d3.line()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(weekObj))}\n        />\n        <path className='line shadow'\n              d={line(Object.keys(weekObj))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#777'\n            strokeWidth={1}\n            strokeDasharray='3,3'\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              className='line-circle'\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='line-text'\n              transform='translate(10,3)'\n              fontSize={14}\n            />\n          </g>\n          <g className='mouse-per-bar'>\n            <circle\n              className='bar-circle'\n              r={5}\n              fill={d3.rgb(this.props.color).darker()}\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='bar-text'\n              transform='translate(-17,3)'\n              fontSize={14}\n              opacity={0}\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            transform='translate(0,0)'\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => this.setLineOpacity('0')}\n            onMouseOver={() => this.setLineOpacity('1')}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './Modal.scss';\n\nimport { openModal } from \"../../reducers/barChart\";\nimport moment from 'moment';\nimport clock from \"../../icons/clock.svg\";\n\nclass Modal extends React.PureComponent {\n\n  hideModal = () => {\n    this.props.openModal(null);\n  };\n\n  convertRange = (val, r1, r2 )=> (val - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\n  render() {\n    const { selectedDay, modalData, timeArray } = this.props;\n      return (\n      <div className={classNames('modal', 'modal-animation', {'display-block': modalData}, {'display-none': !modalData})} onClick={this.hideModal}>\n        <section className='modal-main' onClick={ev => ev.stopPropagation()}>\n          <i className='fas fa-times' onClick={this.hideModal} />\n          <div className='modal-title'>{selectedDay}</div>\n          {modalData && <div>between {moment(modalData.data, 'hh').format('H:mm')} - {moment(parseInt(modalData.data)+1, 'hh').format('H:mm')}</div>}\n          <div className='clock-icon'>\n            <img src={clock} alt='' width={50} height={50} />\n          </div>\n          <div className='time-container'>\n            {\n              Object.keys(timeArray).map(key =>\n                  <span className='time' style={{ fontSize: this.convertRange(timeArray[key], [1,20], [15,50]) }}>\n              {key}\n            </span>\n              )\n            }\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  modalData: state.barChart.modalData,\n  selectedDay: moment(state.calendar.selectedDay).format('dddd, MMMM DD YYYY'),\n  timeArray: state.barChart.timeArray\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.onReset();\n  };\n  const renderCheckboxes = () =>\n    props.showDatasetOverview ?\n      <div className='checkboxes'>\n         <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n           Weekdays <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n         </span>\n        <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n           Weekends <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n         </span>\n      </div> :\n      <div className='checkboxes'>\n         <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n           Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n         </span>\n        <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n           Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n         </span>\n        <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n           Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n         </span>\n      </div>;\n\n  return (\n    <div className='footer year-label'>\n      { renderCheckboxes() }\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport './RadialChart.scss';\n\nclass RadialChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true\n    }\n  }\n\n  componentDidMount() {\n    this.renderArcs();\n  }\n\n  componentDidUpdate() {\n    this.renderArcs();\n  }\n\n  normalize = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n  };\n\n  getPercentage = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (80 - 5) * ((val - min) / (max - min)) + 5;\n  };\n\n  toggleFadeCss = blocks => {\n    blocks\n      .style('opacity', undefined)\n      .classed({ out: this.state.visible });\n    this.setState({\n      visible: !this.state.visible\n    })\n  };\n\n  renderArcs = () => {\n    const svg = d3.select(this.refs.radialChart);\n\n    const width = 350;\n    const arcSize = (5 * width / 100);\n    const innerRadius = arcSize * 2;\n\n    const keysArray = Object.keys(this.props.data)\n      .sort((a, b) => moment(a, 'ddd').isoWeekday() - moment(b, 'ddd').isoWeekday());\n\n    const data = keysArray.map(key => {\n      return {\n        defaultValue: this.props.data[key],\n        value: this.getPercentage(this.props.data[key]),\n        label: key,\n        color: d3.interpolateBlues(this.normalize(this.props.data[key]))\n      }\n    });\n\n    const arcs = data.map((obj, i) => {\n      return d3.arc().innerRadius(i * arcSize + innerRadius).outerRadius((i + 1) * arcSize - (width / 100) + innerRadius);\n    });\n\n    const arcsGrey = data.map(function (obj, i) {\n      return d3.arc().innerRadius(i * arcSize + (innerRadius + ((arcSize / 2) - 2))).outerRadius((i + 1) * arcSize - ((arcSize / 2)) + (innerRadius));\n    });\n\n    const pieData = data.map(function (obj, i) {\n      return [\n        {value: obj.value * 0.75, arc: arcs[i], object: obj},\n        {value: (100 - obj.value) * 0.75, arc: arcsGrey[i], object: obj},\n        {value: 100 * 0.25, arc: arcs[i], object: obj}];\n    });\n\n    const pie = d3.pie()\n      .sort(null)\n      .value(d => d.value);\n\n    const g = svg.selectAll('g').data(pieData)\n      .enter()\n      .append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    const gText = svg.selectAll('g.textClass').data([{}]).enter()\n      .append('g')\n      .classed('textClass', true)\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    g.selectAll('path').data(function (d) {\n      return pie(d);\n    })\n      .enter()\n      .append('path')\n      .attr('id', function (d, i) {\n        if (i === 0) {\n          return 'Arc' + d.data.object.label;\n        }\n        if (i === 1) {\n          return 'Text' + d.data.object.label;\n        }\n      })\n      .style('cursor', 'pointer')\n      .on('mouseover', function (d, i) {\n        if (i === 0) {\n          const id = d3.select(this).attr('id');\n          d3.selectAll('path')\n            .transition()\n            .filter(function () {\n              return d3.select(this).attr('id') !== id;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.25 : 1;\n            });\n\n          d3.selectAll('.textClass text')\n            .transition()\n            .filter(function () {\n              return d3.select(this).text() !== d.data.object.label;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.25 : 1;\n            });\n        }\n      })\n      .on('mouseleave', (d, i) => {\n        d3.selectAll('path').attr('opacity', 1);\n        d3.selectAll('.textClass text').attr('opacity', 1);\n      })\n      .attr('fill', (d, i) => i === 0 ? d.data.object.color : i === 1 ? '#F1F1F1' : 'none')\n      .transition()\n      .duration(1000)\n        .attrTween('d', function (d) {\n          const i = d3.interpolate(d.startAngle+0.1, d.endAngle);\n          return function(t) {\n            d.endAngle = i(t);\n            return d.data.arc(d);\n          }\n      });\n\n    svg.selectAll('g').each(function (d, index) {\n      const el = d3.select(this);\n      el.selectAll('path').each(function (r, i) {\n        if (i === 1) {\n          const labelObj = r.data.object;\n          g.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', '#777')\n            .attr('dominant-baseline', 'central')\n            .append('textPath')\n            .attr('textLength', function (d, i) {\n              return 0;\n            })\n            .attr('xlink:href', '#Text' + labelObj.label)\n            .attr('startOffset', '5')\n            .attr('dy', '-3em')\n            .transition()\n            .delay(1000)\n              .text(labelObj.defaultValue);\n        }\n        if (i === 0) {\n          const centroidText = r.data.arc.centroid({\n            startAngle: r.startAngle,\n            endAngle: r.startAngle\n          });\n          const labelObj = r.data.object;\n          gText.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', () => labelObj.color)\n            .attr('font-weight', '600')\n            .transition()\n            .delay(1000)\n              .text(labelObj.label)\n            .attr('transform', 'translate(' + (centroidText[0] - ((1.5 * width) / 100)) + ',' + (centroidText[1] + ') rotate(' + (180) + ')'))\n            .attr('dominant-baseline', 'central');\n        }\n      })\n    });\n  };\n\n  render() {\n    return (\n      <svg className='radial-chart' ref='radialChart' width='100%' height={350} />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(RadialChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights, getDatasetOverview} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport Modal from '../widget/Modal';\nimport { showBarChart, showMonthOverview, showWeekdayOverview, showWeekOverview } from '../../reducers/barChart';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\nimport {getAverageColor} from \"../../helpers/colors\";\nimport RadialChart from '../radial-chart/RadialChart';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: (document.getElementById('card').clientWidth - props.margin.left - props.margin.right) * 0.66\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    this.setState({\n      width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n    });\n  };\n\n  getData = () => {\n    if (!!this.props.monthInsights.length) {\n      return this.props.daysOfMonth;\n    }\n    if (!!this.props.weekdayInsights.length) {\n      return this.props.daysOfWeekday;\n    }\n    return this.props.data;\n  };\n\n  getInsights = () => {\n    if (this.props.showDatasetOverview) {\n      return getDatasetOverview(this.props.allDays, this.props.dataArr, this.props.dayInsights);\n    }\n    if (this.props.isWeekOverviewChecked) {\n      return getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isMonthOverviewChecked) {\n      return getCurrentMonthInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      return getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.dataArr).weekdayObj;\n    }\n  };\n\n  showAreaChart = () => !this.props.showDatasetOverview &&\n    (this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked);\n\n  updateScale = data => {\n    const xScale = d3.scaleTime();\n    const xScaleArea = d3.scaleTime();\n    const yScale = d3.scaleLinear().nice();\n\n    const insights = this.getInsights();\n\n    const max = insights ?\n      Math.ceil(Math.max(d3.max(Object.values(insights)), d3.max(Object.values(data)))) :\n      d3.max(Object.values(data));\n\n    const yDomain = [0, this.showAreaChart() ? max + max / 20 : max];\n\n    const parseTime = d3.timeParse('%H:%M');\n    const midnight = parseTime('00:00');\n\n    xScale\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    xScaleArea\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([this.props.height - this.props.margin.top - this.props.margin.bottom, 0]);\n\n    return {xScale, yScale, xScaleArea};\n  };\n\n  updatePlotSize = () => {\n    const plotWidth = this.state.width - (this.props.margin.left + this.props.margin.right);\n    const plotHeight = this.props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    const data = this.props.showDatasetOverview ? this.getInsights() : this.getData();\n\n    const { xScale, yScale, xScaleArea } =  this.updateScale(data);\n    const { plotWidth, plotHeight } = this.updatePlotSize();\n\n    const max = d3.max(Object.values(data));\n    const nrOfTicks = max < 10 ? max : (max > 20 ? max / 4 : max / 2);\n\n    const parseTime = d3.timeParse('%H');\n\n    const metaData = {\n      xScale,\n      yScale,\n      xScaleArea,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n    const color = this.props.color || getAverageColor(this.props.selectedMonth, this.props.selectedWeekday, this.props.colors);\n\n    return (\n      <div>\n        { !this.props.showDatasetOverview ?\n          <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight - 50})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} color={color}/>\n            {this.showAreaChart() &&\n            <AreaChart {...metaData} {...plotData} margin={this.props.margin} weekInsights={this.getInsights()} color={color}/>}\n          </g>\n        </svg> :\n          <RadialChart data={data} />\n        }\n        { !this.props.showDatasetOverview && <Footer showDatasetOverview={this.props.showDatasetOverview} /> }\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n        { !this.props.showDatasetOverview && <Modal /> }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dataArr: state.app.data,\n  allDays: state.app.allDays,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport moment from 'moment';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[props.selectedDay] ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    data: props.data,\n    margin: props.margin,\n    height: props.height\n  };\n\n  return (\n    <Section className={classNames({'section-one-third': props.showDatasetOverview, 'section-two-thirds': !props.showDatasetOverview})}>\n      <Card>\n        {\n          props.showDatasetOverview ?\n          <div className='year-label dayTitle dataset-overview-title'>Weekdays vs. weekends</div> :\n          <DayLabel selectedDay={props.selectedDay} />\n        }\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} showDatasetOverview={props.showDatasetOverview} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekdayInsights, uploadFile } from '../../reducers/app';\nimport { showCalendar, selectDay, saveColor } from '../../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../../reducers/barChart';\n\nimport Section from './Section';\n\nimport dataset1 from '../../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../../data/itch_tbc.csv';\nimport dataset3 from '../../data/ptsd_filtered.csv';\nimport dataset4 from '../../data/data.csv';\n\nconst Upload = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n    props.saveColor([]);\n  };\n\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n\n  return (\n    <Section title='Select dataset' className='upload-section'>\n      <div className='upload-dataset'>\n        <Dropdown\n          className='dropdown'\n          options={options}\n          placeholder='Choose...'\n          value={props.datasetName}\n          onChange={onSelect}\n        />\n        <Dropzone\n          accept='text/csv'\n          onDrop={onDrop}\n        >\n          {({getRootProps, getInputProps, isDragActive}) => {\n            return (\n              <div\n                {...getRootProps()}\n                className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n              >\n                <input {...getInputProps()} />\n                {\n                  !!files.length\n                    ? <span className='file-name'>\n                          <i className='fa fa-remove' />\n                      {files}\n                        </span>\n                    : <span className='upload-message'>\n                          <i className='fa fa-upload' />\n                            Drag & Drop\n                        </span>\n                }\n              </div>\n            )\n          }}\n        </Dropzone>\n      </div>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files,\n  datasetName: state.app.datasetName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport Upload from './widget/Upload';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport githubLogo from '../icons/github-logo.svg';\nimport githubLogoHover from '../icons/github-logo-hover.svg';\nimport pdfLogo from '../icons/pdf-logo.svg';\nimport pdfLogoHover from '../icons/pdf-logo-hover.svg';\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = showDatasetOverview =>\n    <Container\n      data={props.allDays[props.selectedDay]}\n      margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n      height={300}\n      showDatasetOverview={showDatasetOverview}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n        <div className='icons'>\n          <a href='https://github.com/diana-tofan/Time-Series-Visualization' target='_blank' rel='noopener noreferrer'>\n            <img className='github-icon' src={githubLogo} alt='Github' onMouseOver={ev => ev.currentTarget.src = githubLogoHover} onMouseLeave={ev => ev.currentTarget.src = githubLogo} />\n          </a>\n          <a href='https://www.overleaf.com/read/vptjwvyzjnvg' target='_blank' rel='noopener noreferrer'>\n            <img className='pdf-icon' src={pdfLogo} alt='Report' onMouseOver={ev => ev.currentTarget.src = pdfLogoHover} onMouseLeave={ev => ev.currentTarget.src = pdfLogo} />\n          </a>\n        </div>\n      </header>\n      <div className='content'>\n        <Upload />\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible &&\n          <div>\n            <p>Day overview</p>\n            <div className='charts-container'>\n              { renderBarChart() }\n              { renderBarChart(true) }\n            </div>\n          </div>\n        }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}