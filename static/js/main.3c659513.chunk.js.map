{"version":3,"sources":["helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","components/bar-chart/Container.js","components/widget/DragAndDrop.js","components/App.js","serviceWorker.js","index.js","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv"],"names":["parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","reduce","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","obj","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","isoWeekday","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","parseDayInsights","days","roundedHours","hour","m","minute","second","millisecond","parseInt","add","startOf","occurrences","d3","getCurrentWeekInsights","selectedDay","startDate","endDate","isBefore","toDate","clone","formattedDays","weekInsights","includes","week","weekOccurrences","apply","weekObj","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","parseData","x","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","setData","type","showSpinner","setMonthInsights","setWeekdayInsights","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","showCalendar","isRadialChartVisible","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","showBarChart","selectDay","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","radialChart","barChart","weekArray","Array","_","connect","dispatch","props","react_default","createElement","className","classNames","bold","onClick","onWeekdayClick","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","Day","nextProps","nextState","formatDate","isCurrentWeek","this","isCurrentMonth","isCurrentWeekday","fill","isCurrentDay","getDay","count","Date","getFullYear","getMonth","find","setHours","j","value","Math","toConsumableArray","interpolateColor","fillColor","stroke","strokeWidth","width","height","rx","ry","y","ev","preventDefault","stopPropagation","data-tip","data-for","React","Component","showWeekOverviewFct","showMonthOverviewFct","Month","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","console","log","weeksInMonth","floor","offset","monthName","lastDay","firstDay","extraSpace","renderList","textAnchor","renderMonthOverview","calendar_Day","PureComponent","Year","target","size","months","range","monthsArr","memo","index","hidden","calendar_Month","Card","id","children","Section","title","Heatmap","addEventListener","onScreenResize","widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","react_tooltip_dist_default","multiline","class","DayLabel","_this$props","selectedItem","unit","previousItem","nextItem","isAfter","pickDay","pickMonth","toString","string","tabIndex","onKeyDown","XAxis","renderAxis","xAxis","xScale","refs","transition","transform","ref","fontSize","YAxis","yAxis","yScale","ticks","nrOfTicks","tickFormat","Bars","renderBars","current","bars","datum","plotData","selectAll","interrupt","attr","enter","append","classed","plotHeight","on","hoverIndex","modalOpen","openModal","exit","remove","merge","select","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","text","invert","circleHoverIndex","domainX","domainY","plotWidth","_this2","_this$props2","margin","area","y0","top","bottom","y1","curve","valueline","x1","x2","y2","spreadMethod","stopColor","stopOpacity","opacity","pointerEvents","onMouseLeave","style","onMouseOver","onMouseMove","nativeEvent","offsetX","offsetY","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","left","right","updateScale","newXScale","nice","currentWeekInsights","dataArr","ceil","xDomain","yDomain","domain","paddingInner","paddingOuter","updatePlotSize","_this3","removeEventListener","ReactTooltip","rebuild","_this4","insights","_this$updateScale","_this$updatePlotSize","metaData","bandwidth","currentMonthInsights","monthOccurrences","monthObj","getCurrentMonthInsights","currentWeekdayInsights","showAreaChart","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","barChartProps","bar_chart_DayLabel","bar_chart_BarChart","uploadFile","file","name","bytes","round","pow","bytesToSize","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","forEach","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","isEmptyContainerVisible","setDatasetName","renderHeatmap","dataset","then","catch","err","widget_DragAndDrop","dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","bar_chart_Container","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3c659513.chunk.js","sourcesContent":["import moment from 'moment';\nimport * as d3 from \"d3\";\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    // debugger\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    const max = d3.max(Object.values(occurrences));\n    const nrOfTicks = max < 10 ? max : max / 2;\n    let obj = {};\n    for (let i = 1; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    // acc.push(occurrences);\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).isoWeekday(1);\n  const endDate = moment(selectedDay).isoWeekday(8);\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let weekObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).startOf('month');\n  const endDate = moment(selectedDay).endOf('month');\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n\n  return monthObj;\n};\n\nexport const getCurrentWeek = selectedDay => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = selectedDay => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = selectedDay => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  return {\n    daysArr: daysArr.concat(daysArr1),\n    length: daysArr.concat(daysArr1).length\n  }\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedMonth: null,\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val,\n        currentWeek: getCurrentWeek(action.val),\n        currentMonth: getCurrentMonth(action.val),\n        currentWeekdays: getCurrentWeekdays(action.val)\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import {getCurrentWeek, getCurrentMonth, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val,\n        currentWeek: getCurrentWeek(action.val),\n        currentMonth: getCurrentMonth(action.val),\n        currentWeekdays: getCurrentWeekdays(action.val)\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { setWeekdayInsights, setMonthInsights } from '../../reducers/app';\nimport { selectDay, showBarChart } from '../../reducers/barChart';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = props => {\n  const onWeekdayClick = day => {\n    props.selectDay(null);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    const weekdayInsights = getWeekdayInsights(day, props.dayInsights, props.allDays);\n    props.setWeekdayInsights({\n      selectedWeekday: weekdayInsights.selectedWeekday,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      weekdayInsights: weekdayInsights.weekdayInsights\n    });\n    props.showBarChart(true);\n  };\n  return (\n    <div className='day-labels-container'>\n    {\n      weekArray.map(day =>\n        <text\n          key={day}\n          className={classNames('day-labels', {'bold': props.selectedWeekday === day})}\n          onClick={() => onWeekdayClick(day)}\n        >\n          {day}\n        </text>\n      )\n    }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {selectDay, showBarChart, showMonthOverview, showWeekOverview} from '../../reducers/barChart';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    const isCurrentWeek = nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY')) ||\n      this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY'));\n    const isCurrentMonth = nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY')) ||\n      this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY'));\n    const isCurrentWeekday = nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY')) ||\n      this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY'));\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.fill !== nextProps.fill ||\n      isCurrentWeek ||\n      isCurrentMonth ||\n      isCurrentWeekday ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  componentDidUpdate() {\n    // d3.select('.day.fill')\n    //   .transition()\n    //   .duration(1000)\n  }\n\n  render() {\n    const props = this.props;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const month = props.month;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(props.data).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n    const isCurrentWeek = props.currentWeek && props.currentWeek.includes(moment(d).format('DD-MM-YYYY'));\n    const isCurrentMonth = props.currentMonth && props.currentMonth.includes(moment(d).format('DD-MM-YYYY'));\n    const isCurrentWeekday = props.currentWeekdays && props.currentWeekdays.daysArr.includes(moment(d).format('DD-MM-YYYY'));\n\n    const item = Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    const interpolateColor = ((isCurrentWeek && props.showWeekOverview) || (isCurrentMonth && props.showMonthOverview) || (isCurrentWeekday && props.showWeekdayOverview))\n      ? d3.interpolateOranges(value) : d3.interpolatePurples(value);\n    let fillColor = !!props.data[item] ? (isCurrentDay ? d3.interpolateOranges(value) : interpolateColor) : '#ececec';\n\n    // #af5159\n    const onDayClick = ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      props.selectDay(d);\n      props.showBarChart(true);\n      // props.showMonthOverviewFct(false);\n      // props.showWeekOverviewFct(false);\n    };\n    return (\n      <rect\n        key={d}\n        className='day'\n        stroke={isCurrentDay ? '#000' : ''}\n        strokeWidth={isCurrentDay ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={onDayClick}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.barChart.selectedDay,\n  selectedWeekday: state.app.selectedWeekday,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.barChart.currentWeek,\n  currentMonth: state.barChart.currentMonth,\n  currentWeekdays: state.barChart.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showWeekOverviewFct: val => dispatch(showWeekOverview(val)),\n  showMonthOverviewFct: val => dispatch(showMonthOverview(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights } from '../../helpers/parser';\nimport {setMonthInsights, setWeekdayInsights} from \"../../reducers/app\";\nimport { showBarChart, selectDay } from \"../../reducers/barChart\";\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    const { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count+1 }));\n    } else {\n      console.log('now show day and month labels');\n    }\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const renderMonthOverview = month => {\n      props.selectDay(null);\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), props.dayInsights, props.allDays);\n      props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      props.showBarChart(true);\n    };\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className={classNames('month-name', {'bold': isCurrentMonth})}\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n            onClick={() => renderMonthOverview(monthName(month))}\n          >\n            { monthName(month) }\n          </text>\n          { renderList.map(d => <Day fill={isCurrentMonth || moment(d).format('ddd') === props.selectedWeekday} day={d} month={month} key={d} />) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper'>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\n\nconst Section = props =>\n  <section>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n          </div>\n          <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {selectDay, showBarChart} from '../../reducers/barChart';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport { getMonthInsights } from '../../helpers/parser';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  render() {\n    const { minDate, maxDate, selectDay, showBarChart, setMonthInsights, setWeekdayInsights,\n      selectedMonth, selectedDay, dayInsights, allDays, selectedWeekday } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay;\n    let unit = '';\n    if (selectedMonth) {\n      unit = 'months';\n    } else if (selectedWeekday) {\n      unit = 'weeks';\n    } else {\n      unit = 'days';\n    }\n    const previousItem = selectedMonth ? selectedMonth-1 : moment(selectedItem).subtract(1, unit);\n    const nextItem = selectedMonth ? parseInt(selectedMonth)+1 : moment(selectedItem).add(1, unit);\n    const showPreviousArrow = selectedMonth ? moment(previousItem, 'M').isAfter(minDate.startOf('year')) : previousItem.isAfter(minDate.startOf('year'));\n    const showNextArrow = selectedMonth ? true : nextItem.isBefore(maxDate.endOf('year'));\n    const pickDay = day => {\n      setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: [],\n        selectedMonth: null\n      });\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      selectDay(day);\n      showBarChart(true);\n    };\n    const pickMonth = month => {\n      selectDay(null);\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(month.toString(), dayInsights, allDays);\n      setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      showBarChart(true);\n    };\n    let string = '';\n    if (selectedMonth) {\n      string = moment(selectedMonth, 'M').format('MMMM');\n    } else if (selectedWeekday) {\n      string = `${moment(selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      string = moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}\n           onKeyDown={ev => {\n             if (ev) {\n               if (ev.key === 'ArrowLeft') {\n                 !selectedMonth ? pickDay(moment(selectedItem).add(-1, unit)) : pickMonth(selectedItem - 1)\n               }\n               if (ev.key === 'ArrowRight') {\n                 !selectedMonth ? pickDay(moment(selectedItem).add(1, unit)) : pickMonth(parseInt(selectedItem) + 1)\n               }\n             }\n      }}>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => {showPreviousArrow && selectDay(moment(selectedItem).add(-1, unit))}}\n        />\n        { string }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showNextArrow && selectDay(moment(selectedItem).add(1, unit))}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.barChart.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale);\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale).ticks(this.props.nrOfTicks).tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1,\n      modalOpen: null\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n    const openModal = d => {\n      this.setState({\n        modalOpen: d\n      });\n    };\n\n    current.interrupt();\n\n    const color = '#6595ec';\n\n    current.transition()\n      .attr('fill', color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter.attr('fill', color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `Time - ${d.data}:00 <br> Occurrences - ${d.occurrences}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nexport default Bars;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1,\n      showTooltip: false,\n      domainX: null,\n      domainY: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { yScale, plotHeight } = this.props;\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const lines = document.getElementsByClassName('line');\n    let pos;\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        let beginning = 0,\n          end = lines && lines[i].getTotalLength(),\n          target = null;\n\n        while (end){\n          target = Math.floor((beginning + end) / 2);\n          pos = lines[i].getPointAtLength(target);\n          if ((target === end || target === beginning) && pos.x !== mouseX) {\n            break;\n          }\n          if (pos.x > mouseX)      end = target;\n          else if (pos.x < mouseX) beginning = target;\n          else break; //position found\n        }\n\n        d3.select(this).select('text')\n          .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n  };\n\n  render() {\n    const { xScale, plotWidth, plotHeight, margin, yScale } = this.props;\n\n    const weekObj = this.props.weekInsights;\n\n    // define the area\n    const area = d3.area()\n      .x(d => xScale(d))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    const valueline = d3.line()\n      .x((d, i) => xScale(i))\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(weekObj))}\n        />\n        <path className='line shadow'\n              d={valueline(Object.keys(weekObj))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#000'\n            strokeWidth={1}\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              transform='translate(10,3)'\n              fontSize={14}\n              // fill='#777'\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => {\n              d3.select('.mouse-line')\n                .style('opacity', '0');\n              d3.selectAll('.mouse-per-line circle')\n                .style('opacity', '0');\n              d3.selectAll('.mouse-per-line text')\n                .style('opacity', '0');\n            }}\n            onMouseOver={() => {\n              d3.select('.mouse-line')\n                .style('opacity', '1');\n              d3.selectAll('.mouse-per-line circle')\n                .style('opacity', '1');\n              d3.selectAll('.mouse-per-line text')\n                .style('opacity', '1');\n            }}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay),\n  data: state.app.data\n});\n\n\nexport default connect(mapStateToProps)(AreaChart);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  selectDay,\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.onReset();\n  };\n\n  return (\n    <div className='footer year-label'>\n      <div className='checkboxes'>\n           <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n             Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n             Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n             Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n           </span>\n      </div>\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport {\n  selectDay,\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview\n} from '../../reducers/barChart';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: document.getElementById('card').clientWidth - props.margin.left - props.margin.right\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    this.setState({\n      width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n    });\n  };\n\n  updateScale = (props, data) => {\n    const xScale = d3.scaleBand();\n    const newXScale = d3.scaleLinear();\n    const yScale = d3.scaleLinear().nice();\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n\n    const max = currentWeekInsights ?\n      Math.ceil(Math.max(d3.max(Object.values(currentWeekInsights)), d3.max(Object.values(data)))) :\n      d3.max(Object.values(data));\n\n    const xDomain = [...Array(24).keys()];\n    const yDomain = [0, max];\n\n    xScale\n      .domain(xDomain)\n      .range([0, this.state.width - props.margin.right])\n      .paddingInner(props.paddingInner)\n      .paddingOuter(props.paddingOuter);\n\n    newXScale\n      .domain([0, 23])\n      .range([0, this.state.width - props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([props.height - props.margin.top - props.margin.bottom, 0]);\n\n    return {xScale, yScale, newXScale};\n  };\n\n  updatePlotSize = props => {\n    const plotWidth = this.state.width - (props.margin.left + props.margin.right);\n    const plotHeight = props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    let data = [];\n    if (!!this.props.monthInsights.length) {\n      data = this.props.daysOfMonth;\n    } else if (!!this.props.weekdayInsights.length) {\n      data = this.props.daysOfWeekday;\n    } else {\n      data = this.props.data;\n    }\n    const { xScale, yScale, newXScale } =  this.updateScale(this.props, data);\n    const { plotWidth, plotHeight } = this.updatePlotSize(this.props);\n\n    const max = d3.max(Object.values(data));\n    const nrOfTicks = max < 10 ? max : max / 2;\n\n    const metaData = {\n      xScale,\n      yScale,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(item),\n        y: yScale(data[item]),\n        width: xScale.bandwidth(),\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentMonthInsights = this.props.isMonthOverviewChecked && getCurrentMonthInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentWeekdayInsights = this.props.isWeekdayOverviewChecked && getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.dataArr);\n\n    let insights;\n    if (this.props.isWeekOverviewChecked) {\n      insights = currentWeekInsights;\n    }\n    if (this.props.isMonthOverviewChecked) {\n      insights = currentMonthInsights;\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      insights = currentWeekdayInsights.weekdayObj;\n    }\n\n    const showAreaChart = this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked;\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight-50})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} />\n            {\n              showAreaChart &&\n              <AreaChart\n                xScale={newXScale}\n                yScale={yScale}\n                plotWidth={plotWidth}\n                plotHeight={plotHeight}\n                margin={this.props.margin}\n                weekInsights={insights}\n                occurrences={data}\n                transform={transform}\n              />\n            }\n          </g>\n        </svg>\n        <Footer />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD'),\n  dataArr: state.app.data,\n  allDays: state.app.allDays,\n  currentWeekdays: state.barChart.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[props.selectedDay] ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    data: props.data,\n    margin: props.margin,\n    height: props.height,\n    paddingInner: props.paddingInner,\n    paddingOuter: props.paddingOuter\n  };\n\n  return (\n    <Section title='Day overview'>\n      <Card>\n        <DayLabel selectedDay={props.selectedDay} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Section from '../widget/Section';\n\nimport { setData, uploadFile } from '../../reducers/app';\nimport { showCalendar } from '../../reducers/calendar';\n\nconst DragAndDrop = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  return (\n    <Section title='Upload file'>\n      <Dropzone\n        accept='text/csv'\n        onDrop={onDrop}\n      >\n        {({getRootProps, getInputProps, isDragActive}) => {\n          return (\n            <div\n              {...getRootProps()}\n              className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n            >\n              <input {...getInputProps()} />\n              {\n                !!files.length\n                  ? <span className='file-name'>\n                            <i className='fa fa-remove' />\n                    {files}\n                          </span>\n                  : <span className='upload-message'>\n                            <i className='fa fa-upload' />\n                              Drag & Drop your file or <u>Browse</u>\n                          </span>\n              }\n            </div>\n          )\n        }}\n      </Dropzone>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  showCalendar: val => dispatch(showCalendar(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDrop);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekdayInsights } from '../reducers/app';\nimport { showCalendar } from '../reducers/calendar';\nimport { showBarChart, selectDay, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../reducers/barChart';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport DragAndDrop from './widget/DragAndDrop';\nimport Section from './widget/Section';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd_filtered.csv';\nimport dataset4 from '../data/data.csv';\n\nimport { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = true;\n\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      data={props.allDays[props.selectedDay]}\n      margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n      height={300}\n      paddingInner={0.2}\n      paddingOuter={0.1}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        { showDropzone && <DragAndDrop /> }\n        <Section title='Select dataset'>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </Section>\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible && renderBarChart() }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";"],"sourceRoot":""}