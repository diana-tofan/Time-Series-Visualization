{"version":3,"sources":["data/data.csv","reducers/mortgage.js","reducers/index.js","helpers/parser.js","components/Heatmap.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","initial","rate","years","monthlyOverpayment","rootReducer","combineReducers","mortgage","state","arguments","length","undefined","action","type","Object","objectSpread","val","parseTimestamp","timeStamp","dateString","split","timeString","slice","moment","concat","toDate","parseTime","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","push","reduce","r","a","create","parseData","timestamp","x","obj","Heatmap","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showTooltip","renderBarChart","style","currentYear","i","renderChart","bind","assertThisInitialized","updateDimensions","changeYear","renderYear","renderMonth","renderDay","setState","cellSize","window","innerWidth","cellMargin","_this2","react_default","createElement","id","drawDayLabels","className","count","onClick","drawCalendar","value","d","day","dayInsights","rawData","console","log","dateData","target","size","minDate","Date","maxDate","months","d3","range","yearsArr","year","monthsArr","memo","index","_this3","previousYear","subtract","nextYear","add","includes","classNames","hidden","key","month","_this4","weeksInMonth","m","floor","offset","monthName","days","getFullYear","getMonth","lastDay","endOf","firstDay","startOf","extraSpace","height","width","y","textAnchor","max","min","_this5","getDay","week","keys","find","setHours","filter","j","Math","apply","toConsumableArray","fillColor","rx","ry","fill","onMouseOver","ev","top","clientY","left","clientX","onMouseOut","weekArray","Array","_","isoWeekday","React","Component","App","then","catch","err","src_components_Heatmap","Boolean","location","hostname","match","store","createStore","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e1bae4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","const SET_INITIAL = 'SET/INITIAL';\nconst SET_YEARS = 'SET/YEARS';\nconst SET_RATE = 'SET/RATE';\nconst SET_MONTHLY_OVERPAYMENT = 'SET/MONTHLY_OVERPAYMENT';\n\nconst initialState = {\n  initial: 200000,\n  rate: 5,\n  years: 25,\n  monthlyOverpayment: 0\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIAL:\n      return {\n        ...state,\n        initial: action.val\n      };\n    case SET_RATE:\n      return {\n        ...state,\n        rate: action.val\n      };\n    case SET_YEARS:\n      return {\n        ...state,\n        years: action.val\n      };\n    case SET_MONTHLY_OVERPAYMENT:\n      return {\n        ...state,\n        monthlyOverpayment: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setInitial = val => ({ type: SET_INITIAL, val });\nexport const setYears = val => ({ type: SET_YEARS, val });\nexport const setRate = val => ({ type: SET_RATE, val });\nexport const setMonthlyOverpayment = val => ({ type: SET_MONTHLY_OVERPAYMENT, val });\n","import { combineReducers } from 'redux';\nimport mortgage from './mortgage';\n\nconst rootReducer = combineReducers({\n  mortgage\n});\n\nexport default rootReducer;\n","import moment from 'moment';\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDD')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  let newData = data.map(item => ({ timestamp: parseDate(item[data.columns[0]]) }));\n  newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, Object.create(null));\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport default parseData;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { getDayInsights } from '../helpers/parser';\nimport './Heatmap.css';\n\nclass Heatmap extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      showTooltip: false,\n      renderBarChart: false,\n      style: {},\n      currentYear: 2018,\n      i: 0\n    };\n    this.renderChart = this.renderChart.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.changeYear = this.changeYear.bind(this);\n    this.renderYear = this.renderYear.bind(this);\n    this.renderMonth = this.renderMonth.bind(this);\n    this.renderDay = this.renderDay.bind(this);\n  }\n\n  updateDimensions() {\n    this.setState({\n      cellSize: window.innerWidth / 120,\n      cellMargin: window.innerWidth / 400\n    });\n  }\n\n  componentWillMount() {\n    this.updateDimensions();\n  }\n\n  componentDidMount() {\n    // window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUnmount() {\n    // window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <div id='calendar'>\n        { this.drawDayLabels() }\n        {\n          this.state.showTooltip &&\n            <div className='tooltip' style={this.state.style}>\n              {moment(this.state.showTooltip).format('dddd, MMMM DD YYYY')}\n              <div className='text'>\n                Count: {this.state.count}\n              </div>\n            </div>\n        }\n        <div className='yearLabel'>\n          <i className=\"fas fa-chevron-left\" onClick={() => this.changeYear(-1)} />\n          { this.state.currentYear }\n          <i className=\"fas fa-chevron-right\" onClick={() => this.changeYear(+1)} />\n        </div>\n        <div className='months'>\n          { this.drawCalendar(this.props.data, this.state.i) }\n        </div>\n      </div>\n    );\n  }\n\n  changeYear(value) {\n    this.setState({\n      currentYear: this.state.currentYear+value,\n      i: this.state.i+value\n    });\n  }\n\n  renderChart(d) {\n    const day = moment(d).format('YYYY-MM-DD');\n    const dayInsights = getDayInsights(this.props.rawData);\n    console.log(dayInsights[day]);\n  }\n\n  drawCalendar(dateData, i) {\n    // const monthName = d3.timeFormat('%B'),\n    // months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n    //   new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    const minDate = new Date(2018, 0, 1);\n    const maxDate = new Date(2020, 11, 31);\n\n    const months = d3.timeMonth.range(minDate, maxDate);\n    const years = d3.timeYear.range(minDate, maxDate);\n\n    const yearsArr = years.map(year => moment(year).format('YYYY'));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        // Here it comes the only difference\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    // render only first year\n    return this.renderYear(yearsArr, years[0], months, dateData, monthsArr);\n  }\n\n  renderYear(years, year, months, dateData, monthsArr) {\n    const previousYear = moment(year).subtract(1, 'years').format('YYYY');\n    const nextYear = moment(year).add(1, 'years').format('YYYY');\n    const showPreviousArrow = years.includes(previousYear);\n    const showNextArrow = years.includes(nextYear);\n    return (\n      <div>\n          {\n            monthsArr.map((months, i) =>\n              <div className={classNames('year', {'hidden': i !== this.state.i})} key={year}>\n                { months.map(month => this.renderMonth(month, dateData)) }\n              </div>\n            )\n          }\n      </div>\n      );\n  }\n\n  renderMonth(month, dateData) {\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = this.state.cellMargin,\n      cellSize = this.state.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n    const yearName = d3.timeFormat('%Y');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className='month-name'\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n          >\n            { monthName(month) }\n          </text>\n          { days.map(d => this.renderDay(d, month, dateData)) }\n        </g>\n      </svg>\n    );\n  }\n\n  renderDay(d, month, dateData) {\n    const cellMargin = this.state.cellMargin,\n      cellSize = this.state.cellSize;\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(dateData).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && dateData[i]).filter(j => !!j);\n\n    const item = Object.keys(dateData).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!dateData[item] && normalize(dateData[item], Math.max(...count), Math.min(...count));\n    const fillColor = !!dateData[item] ? d3.interpolatePurples(value) : '#eaeaea';\n    return (\n      <rect\n        key={d}\n        className='day'\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onMouseOver={(ev) => this.setState({\n          showTooltip: d,\n          count: !!dateData[item] ? dateData[item] : 0,\n          style: {\n            top: ev.clientY + 10,\n            left: ev.clientX + 10\n          }\n        })}\n        onMouseOut={() => this.setState({\n          showTooltip: false\n        })}\n        onClick={() => this.renderChart(d)}\n      >\n      </rect>\n    )\n  }\n\n  drawDayLabels() {\n    const weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n      return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n    });\n    return (<g>\n      {\n        weekArray.map(day =>\n          <text\n            key={day}\n            className='dayLabels'\n          >\n            {day}\n          </text>\n        )\n      }\n    </g>);\n  }\n}\n\nexport default Heatmap;\n","import React, { Component } from 'react';\nimport './App.css';\nimport * as d3 from 'd3';\nimport data from '../data/data.csv';\nimport parseData from '../helpers/parser';\nimport Heatmap from './Heatmap';\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount () {\n    d3.csv(data).then(data => {\n      this.setState({ data: parseData(data), rawData: data });\n    }).catch(err => {\n      throw err;\n    });\n  }\n\n  render () {\n    return (\n      <div className='app'>\n        <header className='header'>\n          <div className='title'> Visualizing Time-Series Data </div>\n        </header>\n        <div className='content'>\n          <section>\n            <p>Calendar heatmap</p>\n            {\n              Object.keys(this.state.data).length > 0 &&\n              <Heatmap\n                data={this.state.data}\n                rawData={this.state.rawData}\n              />\n            }\n          </section>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}