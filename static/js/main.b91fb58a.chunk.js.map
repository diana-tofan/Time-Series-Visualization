{"version":3,"sources":["helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/Bars.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/AreaChart.js","components/bar-chart/BarChart.js","components/App.js","serviceWorker.js","index.js","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd.csv","data/data.csv"],"names":["parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","reduce","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","obj","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","parseDayInsights","days","roundedHours","hour","m","minute","second","millisecond","parseInt","add","startOf","occurrences","d3","i","parseData","x","replace","timestamp","initialState","rawData","minDate","maxDate","weekdayInsights","daysOfWeekday","selectedWeekday","datasetName","files","showTooltip","isSpinnerVisible","showSpinner","type","setMonthInsights","setWeekdayInsights","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","isRadialChartVisible","selectedDay","isBarChartVisible","showBarChart","selectDay","rootReducer","combineReducers","app","state","arguments","length","undefined","action","moments","d","objectSpread","min","max","calendar","assign","radialChart","barChart","weekArray","Array","apply","_","isoWeekday","connect","dispatch","props","onWeekdayClick","day","weekday","getWeekdayInsights","react_default","createElement","className","classNames","bold","onClick","changeYear","previousYear","subtract","nextYear","showPreviousArrow","showNextArrow","disabled","Day","renderDots","nextProps","nextState","formatDate","this","fill","isCurrentDay","getDay","week","count","Date","getFullYear","getMonth","find","setHours","j","value","Math","toConsumableArray","fillColor","width","height","rx","ry","y","ev","preventDefault","stopPropagation","data-tip","data-for","React","Component","Month","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","console","log","weeksInMonth","floor","offset","monthName","lastDay","endOf","firstDay","extraSpace","renderList","isCurrentMonth","textAnchor","renderMonthOverview","calendar_Day","PureComponent","Year","target","size","months","range","monthsArr","memo","index","hidden","calendar_Month","Card","id","children","Heatmap","addEventListener","onScreenResize","components_widget_Card","calendar_DayLabels","calendar_YearLabel","calendar_Year","react_tooltip_dist_default","multiline","class","DayLabel","_this$props","selectedItem","unit","previousItem","nextItem","isAfter","isBefore","pickDay","pickMonth","toString","string","tabIndex","onKeyDown","Bars","renderBars","current","refs","bars","datum","plotData","selectAll","interrupt","transition","attr","enter","append","classed","plotHeight","on","hoverIndex","modalOpen","openModal","exit","remove","merge","select","duration","ref","XAxis","renderAxis","xAxis","xScale","transform","fontSize","YAxis","yAxis","yScale","ticks","nrOfTicks","tickFormat","AreaChart","circleHoverIndex","_this2","margin","startDate","endDate","toDate","clone","formattedDays","weekInsights","includes","weekOccurrences","weekObj","Number","toFixed","area","y0","top","bottom","y1","curve","valueline","is","x1","x2","y2","spreadMethod","stopColor","stopOpacity","cx","cy","data-key","data-value","onMouseOver","onMouseLeave","BarChart","updateScale","nice","xDomain","yDomain","domain","right","paddingInner","paddingOuter","updatePlotSize","plotWidth","left","isChecked","document","getElementById","clientWidth","resize","bind","assertThisInitialized","t","event","clearTimeout","setTimeout","ReactTooltip","rebuild","_this3","bar_chart_DayLabel","_this3$updateScale","_this3$updatePlotSize","metaData","bandwidth","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","renderBarChart","onCheckboxChange","checked","defaultChecked","onChange","renderFooter","isEmptyContainerVisible","uploadFile","showCalendar","setData","setDatasetName","file","name","bytes","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","components_bar_chart_BarChart","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"sPASMA,EAAY,SAAAC,GAChB,IAAMC,EAAaD,EAAUE,MAAM,KAAK,GAAGC,MAAM,GAAI,GACrD,OAAOC,IAAM,GAAAC,OAAIJ,GAAc,UAAUK,MAAMC,OAAO,aAGlDC,EAAY,SAAAR,GAAS,OAAII,IAAM,GAAAC,OAAIL,EAAUE,MAAM,KAAK,IAAM,eACjEK,OAAO,cAAcL,MAAM,KAAK,IAqBtBO,EAAiB,SAAAC,GAC5B,IAAIC,EAAUD,EAAKE,IAAI,SAAAC,GAAI,MAAK,CAAEC,KAAMN,EAAUK,EAAKH,EAAKK,QAAQ,KAAMC,KAAMjB,EAAUc,EAAKH,EAAKK,QAAQ,QAE5G,OAAeJ,EATUM,OAAO,SAAUC,EAAGC,GAG7C,OAFAD,EAAEC,EAAEL,MAAQI,EAAEC,EAAEL,OAAS,GACzBI,EAAEC,EAAEL,MAAMM,KAAKD,EAAEH,MACVE,GACN,KAQUG,EAAmB,SAACC,EAAOC,EAAaC,GACnD,IAAMC,EAAgBC,OAAOC,KAAKJ,GAC/BK,OAAO,SAAAC,GAAG,OAAIzB,IAAOyB,GAAKtB,OAAO,OAASe,IAC1CL,OAAO,SAACa,EAAKD,GAEZ,OADAC,EAAID,GAAON,EAAYM,GAChBC,GACN,IACCC,EAAaL,OAAOC,KAAKF,GAAeR,OAAO,SAACe,EAAKH,GAEzD,OADAG,EAAIZ,KAAKK,EAAcI,IAChBG,GACN,IACGC,EAAiBP,OAAOC,KAAKH,GAChCI,OAAO,SAAAC,GAAG,OAAIzB,IAAOyB,GAAKtB,OAAO,OAASe,IAC1CL,OAAO,SAACa,EAAKD,GAEZ,OADAC,EAAID,GAAOL,EAAQK,GACZC,GACN,IACCI,EAAaR,OAAOS,OAAOF,GAAgBhB,OAAO,SAACe,EAAKI,GAQ5D,OAPAV,OAAOC,KAAKS,GAAKxB,IAAI,SAAAiB,GACfG,EAAIK,eAAeR,GACrBG,EAAIH,IAAQO,EAAIP,GAEhBG,EAAIH,GAAOO,EAAIP,KAGZG,GACN,IACH,MAAO,CACLM,cAAehB,EACfiB,YAAaL,EACbT,cAAeM,EAAWS,SAsCjBC,EAAmB,SAAA/B,GAC9B,IAAMa,EAAcd,EAAeC,GACnC,OAAOgB,OAAOC,KAAKJ,GAAaN,OAAO,SAACe,EAAKnB,GAiB3C,IAfA,IAAM6B,EAAOnB,EAAYV,GACnB8B,EAAeD,GAAQA,EAAK9B,IAAI,SAAAgC,GAClC,IAAMC,EAAIzC,IAAM,GAAAC,OAAIQ,EAAJ,KAAAR,OAAYuC,IAC5B,OAAOC,EAAEC,UAAYD,EAAEE,UAAYF,EAAEG,cACjCC,SAASJ,EAAEK,IAAI,EAAG,QAAQC,QAAQ,QAAQ5C,OAAO,OACjD0C,SAASJ,EAAEM,QAAQ,QAAQ5C,OAAO,SAGpC6C,EAAcT,GAAgBA,EAAa1B,OAAO,SAACe,EAAKnB,GAE5D,OADAmB,EAAInB,IAASmB,EAAInB,IAAS,GAAK,EACxBmB,GACN,IAGCF,GAFQuB,IAAO3B,OAAOS,OAAOiB,IAEvB,IACDE,EAAI,EAAGA,GAAK,GAAIA,IACvBxB,EAAIwB,GAAKF,EAAYE,IAAM,EAI7B,OAFAtB,EAAInB,GAAQuC,EAELpB,GACN,KAGUuB,EApHG,SAAA7C,GAChB,IAGM8C,EAHc9C,EAAKE,IAAI,SAAAC,GAAI,OAAKA,EAAKH,EAAKK,QAAQ,IAAK0C,QAAQ,SAAU,MACrD7C,IAAI,SAAAC,GAAI,MAAK,CAAE6C,UAAWlD,EAAUK,MAE5CD,IAAI,SAAAC,GAAI,OAAIA,EAAK6C,YACnC,OAAwBF,EAVUvC,OAAO,SAASa,EAAKjB,GAEvD,OADAiB,EAAIjB,IAASiB,EAAIjB,IAAS,GAAK,EACxBiB,GACN,KCVG6B,EAAe,CACnBjD,KAAM,GACNkD,QAAS,GACTC,QAAS,KACTC,QAAS,KACTvC,YAAa,GACbE,cAAe,GACfc,YAAa,GACbD,cAAe,KACfyB,gBAAiB,GACjBC,cAAe,GACfC,gBAAiB,KACjBC,YAAa,GACbC,MAAO,GACP3C,QAAS,GACT4C,aAAa,EACbC,kBAAkB,GAsDPC,EAAc,SAAAlC,GAAG,MAAK,CAAEmC,KA1EhB,eA0EoCnC,QAC5CoC,EAAmB,SAAApC,GAAG,MAAK,CAAEmC,KA1Ef,qBA0EyCnC,QACvDqC,EAAqB,SAAArC,GAAG,MAAK,CAAEmC,KA1Ef,uBA0E2CnC,QC9ElEuB,EAAe,CACnBe,mBAAmB,EACnBC,UAAW,EACXC,SAAUC,OAAOC,WAAa,IAC9BC,WAAYF,OAAOC,WAAa,IAChCE,YAA+B,kBAAXH,OAAsBA,OAAOC,WAAa,MCN1DnB,EAAe,CACnBsB,sBAAsB,EACtBC,YAAa,MCFTvB,EAAe,CACnBwB,mBAAmB,EACnBD,YAAa,MAoBFE,EAAe,SAAAhD,GAAG,MAAK,CAAEmC,KAzBf,iBAyBqCnC,QAC/CiD,EAAY,SAAAjD,GAAG,MAAK,CAAEmC,KAzBhB,aAyBkCnC,QCbtCkD,EAPKC,YAAgB,CAClCC,IJsBa,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB/B,EAAckC,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOtB,MACb,IA5Ba,WA6BX,IAAM7D,EAAO6C,EAAUsC,EAAOzD,KACxB0D,EAAUpE,OAAOC,KAAKjB,GAAME,IAAI,SAAAmF,GAAC,OAAI3F,IAAO2F,KAClD,OAAOrE,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEE7B,QAASiC,EAAOzD,IAChB1B,OACAa,YAAad,EAAeoF,EAAOzD,KACnCyB,QAASzD,IAAO6F,IAAIH,GACpBhC,QAAS1D,IAAO8F,IAAIJ,GACpBtE,QAASiB,EAAiBoD,EAAOzD,OAErC,IAvCgB,cAwCd,OAAOV,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEEtB,MAAO0B,EAAOzD,MAElB,IA3CqB,mBA4CnB,OAAOV,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEEvB,YAAa2B,EAAOzD,MAExB,IA/CiB,eAgDf,OAAOV,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEEpB,iBAAkBwB,EAAOzD,MAE7B,IAnDuB,qBAoDrB,OAAOV,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEEhE,cAAeoE,EAAOzD,IAAIX,cAC1Bc,YAAasD,EAAOzD,IAAIG,YACxBD,cAAeuD,EAAOzD,IAAIE,gBAE9B,IAzDyB,uBA0DvB,OAAOZ,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEE1B,gBAAiB8B,EAAOzD,IAAI2B,gBAC5BC,cAAe6B,EAAOzD,IAAI4B,cAC1BC,gBAAiB4B,EAAOzD,IAAI6B,kBAEhC,QACE,OAAOwB,IIjEXU,SHIa,WAAkC,IAAjCV,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB/B,EAAckC,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOtB,MACb,IAdkB,gBAehB,OAAO7C,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEEf,kBAAmBmB,EAAOzD,MAE9B,IAlBgB,cAmBd,OAAOV,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEEd,UAAWc,EAAMd,UAAYkB,EAAOzD,MAExC,IAtBkB,gBAuBhB,OAAOV,OAAO0E,OAAO,GAAIX,EAAO,CAC9BT,YAAaa,EAAOb,cAExB,QACE,OAAOS,IGpBXY,YFDa,WAAkC,IAAjCZ,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB/B,EAAckC,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOtB,MACb,IAVsB,oBAWpB,OAAO7C,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEER,qBAAsBY,EAAOzD,MAEjC,IAde,aAeb,OAAOV,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEEP,YAAaW,EAAOzD,MAExB,QACE,OAAOqD,IEXXa,SDFa,WAAkC,IAAjCb,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB/B,EAAckC,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOtB,MACb,IAVmB,iBAWjB,OAAO7C,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEEN,kBAAmBU,EAAOzD,MAE9B,IAde,aAeb,OAAOV,OAAAsE,EAAA,EAAAtE,CAAA,GACF+D,EADL,CAEEP,YAAaW,EAAOzD,MAExB,QACE,OAAOqD,4GEbPc,EAAYC,MAAMC,MAAM,KAAMD,MAAM,IAAI5F,IAAI,SAAU8F,EAAGpD,GAC7D,OAAOlD,IAAOkD,EAAG,KAAKH,QAAQ,QAAQwD,WAAWrD,EAAE,GAAG/C,OAAO,SAqDhDqG,cAhBS,SAAAnB,GAAK,MAAK,CAChCjE,QAASiE,EAAMD,IAAIhE,QACnBd,KAAM+E,EAAMD,IAAI9E,KAChBa,YAAakE,EAAMD,IAAIjE,YACvBqD,SAAUa,EAAMU,SAASvB,SACzBG,WAAYU,EAAMU,SAASpB,WAC3Bd,gBAAiBwB,EAAMD,IAAIvB,kBAGF,SAAA4C,GAAQ,MAAK,CACtCpC,mBAAoB,SAAArC,GAAG,OAAIyE,EAASpC,EAAmBrC,KACvDoC,iBAAkB,SAAApC,GAAG,OAAIyE,EAASrC,EAAiBpC,KACnDgD,aAAc,SAAAhD,GAAG,OAAIyE,EAASzB,EAAahD,KAC3CiD,UAAW,SAAAjD,GAAG,OAAIyE,EAASxB,EAAUjD,OAGxBwE,CAlDG,SAAAE,GAChB,IAAMC,EAAiB,SAAAC,GACrBF,EAAMzB,UAAU,MAChByB,EAAMtC,iBAAiB,CACrB/C,cAAe,GACfc,YAAa,KAEf,IAAMwB,ENyDwB,SAACkD,EAAS1F,EAAaC,GACvD,IAAMuC,EAAkBrC,OAAOC,KAAKJ,GACjCK,OAAO,SAAAC,GAAG,OAAIzB,IAAOyB,GAAK8E,eAAiBvG,IAAO6G,EAAS,OAAON,eAClE1F,OAAO,SAACa,EAAKD,GAEZ,OADAC,EAAID,GAAON,EAAYM,GAChBC,GACN,IACCC,EAAaL,OAAOC,KAAKoC,GAAiB9C,OAAO,SAACe,EAAKH,GAE3D,OADAG,EAAIZ,KAAK2C,EAAgBlC,IAClBG,GACN,IACGC,EAAiBP,OAAOC,KAAKH,GAChCI,OAAO,SAAAC,GAAG,OAAIzB,IAAOyB,GAAK8E,eAAiBvG,IAAO6G,EAAS,OAAON,eAClE1F,OAAO,SAACa,EAAKD,GAEZ,OADAC,EAAID,GAAOL,EAAQK,GACZC,GACN,IACCI,EAAaR,OAAOS,OAAOF,GAAgBhB,OAAO,SAACe,EAAKI,GAQ5D,OAPAV,OAAOC,KAAKS,GAAKxB,IAAI,SAAAiB,GACfG,EAAIK,eAAeR,GACrBG,EAAIH,IAAQO,EAAIP,GAEhBG,EAAIH,GAAOO,EAAIP,KAGZG,GACN,IACH,MAAO,CACLiC,gBAAiBgD,EACjBjD,cAAe9B,EACf6B,gBAAiBhC,EAAWS,QMvFJ0E,CAAmBF,EAAKF,EAAMvF,YAAauF,EAAMtF,SACzEsF,EAAMrC,mBAAmB,CACvBR,gBAAiBF,EAAgBE,gBACjCD,cAAeD,EAAgBC,cAC/BD,gBAAiBA,EAAgBA,kBAEnC+C,EAAM1B,cAAa,IAErB,OACE+B,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,sBACfF,EAAAhG,EAAAiG,cAAA,YAEIb,EAAU3F,IAAI,SAAAoG,GAAG,OACfG,EAAAhG,EAAAiG,cAAA,QACEvF,IAAKmF,EACLK,UAAWC,IAAW,YAAa,CAACC,KAAQT,EAAM7C,kBAAoB+C,IACtEQ,QAAS,kBAAMT,EAAeC,KAE7BA,SCDEJ,cATS,SAAAnB,GAAK,MAAK,CAChC5B,QAAS4B,EAAMD,IAAI3B,QACnBC,QAAS2B,EAAMD,IAAI1B,UAGM,SAAA+C,GAAQ,MAAK,CACtCY,WAAY,SAAArF,GAAG,OAAIyE,ELCK,SAAAzE,GAAG,MAAK,CAAEmC,KAjChB,cAiCmCnC,OKDzBqF,CAAWrF,OAG1BwE,CA9BG,SAAAE,GAChB,IAAMY,EAAetH,IAAO0G,EAAMjD,SAAS8D,SAAS,EAAG,SAASpH,OAAO,QACjEqH,EAAWxH,IAAO0G,EAAMhD,SAASZ,IAAI,EAAG,SAAS3C,OAAO,QACxDsH,EAAoBH,GAAgBZ,EAAMjD,QAAQtD,OAAO,QACzDuH,EAAgBF,GAAYd,EAAMhD,QAAQvD,OAAO,QAEvD,OACE4G,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,aACbF,EAAAhG,EAAAiG,cAAA,KACEC,UAAWC,IAAW,sBAAuB,CAACS,UAAaF,IAC3DL,QAAS,kBAAMK,GAAqBf,EAAMW,YAAY,MAEtDX,EAAMjD,QAAQtD,OAAO,QACvB4G,EAAAhG,EAAAiG,cAAA,KACEC,UAAWC,IAAW,uBAAwB,CAACS,UAAaD,IAC5DN,QAAS,kBAAMM,GAAiBhB,EAAMW,WAAW,iBCbnDO,6MAYJC,WAAa,kGAXSC,EAAWC,GAC/B,IAAMC,EAAa,SAAAtH,GAAI,OAAIV,IAAOU,GAAMP,OAAO,aAC/C,OAAO6H,EAAWC,KAAKvB,MAAME,OAASoB,EAAWF,EAAUhD,cACzDkD,EAAWF,EAAUlB,OAASoB,EAAWC,KAAKvB,MAAM5B,cACpDmD,KAAKvB,MAAMwB,OAASJ,EAAUI,kDAIhCD,KAAKJ,8CAgCL,IAAMnB,EAAQuB,KAAKvB,MACb/B,EAAa+B,EAAM/B,WACvBH,EAAWkC,EAAMlC,SACbmB,EAAIe,EAAME,IAEZuB,GAAe,EACfnI,IAAO2F,GAAGxF,OAAO,cAAgBH,IAAO0G,EAAM5B,aAAa3E,OAAO,cACpEgI,GAAe,GAGjB,IAGmBnG,EAAK8D,EAAKD,EAHvBe,EAAM,SAAAjB,GAAC,OAAKA,EAAEyC,SAAW,GAAK,GAClCC,EAAOpF,IAAc,MAIjB/B,EAAQwF,EAAMxF,MAOdoH,EALOrF,IAAY/B,EAAO,IAAIqH,KAAKrH,EAAMsH,cAAetH,EAAMuH,WAAW,EAAG,IAC/DjI,IAAI,SAAAmF,GAAC,OACtBrE,OAAOC,KAAKmF,EAAMpG,MAAMoI,KAAK,SAAAjH,GAAG,OAC9B,IAAI8G,KAAK9G,GAAKkH,SAAS,EAAE,EAAE,EAAE,KAAOhD,EAAEgD,SAAS,EAAE,EAAE,EAAE,OAEnCnI,IAAI,SAAA0C,GAAC,QAAMA,GAAKwD,EAAMpG,KAAK4C,KAAI1B,OAAO,SAAAoH,GAAC,QAAMA,IAE7DnI,EAAOa,OAAOC,KAAKmF,EAAMpG,MAAMoI,KAAK,SAAAjH,GAAG,OAC3C,IAAI8G,KAAK9G,GAAKkH,SAAS,EAAE,EAAE,EAAE,KAAOhD,EAAEgD,SAAS,EAAE,EAAE,EAAE,KACjDE,IAAUnC,EAAMpG,KAAKG,KAbRuB,EAa2B0E,EAAMpG,KAAKG,GAbjCqF,EAawCgD,KAAKhD,IAALO,MAAAyC,KAAIxH,OAAAyH,EAAA,EAAAzH,CAAQgH,IAb/CzC,EAauDiD,KAAKjD,IAALQ,MAAAyC,KAAIxH,OAAAyH,EAAA,EAAAzH,CAAQgH,KAb5CtG,EAAM6D,IAAQC,EAAMD,GAAnC,IAA2C,KAc5EmD,EAActC,EAAMpG,KAAKG,GAAQwC,IAAsB4F,GAAS,UAiBpE,OACE9B,EAAAhG,EAAAiG,cAAA,QACEvF,IAAKkE,EACLsB,UAAWC,IAAW,MAAO,CAACgB,KAAQC,GAAgBzB,EAAMwB,OAC5De,MAAOzE,EACP0E,OAAQ1E,EACR2E,GAAI,GACJC,GAAI,GACJlB,KAAMc,EACNK,EAAIzC,EAAIjB,GAAKnB,EAAaoC,EAAIjB,GAAKhB,EAAcA,EACjDvB,GAAKiF,EAAK1C,GAAK0C,EAAK,IAAIE,KAAK5C,EAAE6C,cAAc7C,EAAE8C,WAAW,KAAOjE,GAAc6D,EAAK1C,GAAK0C,EAAK,IAAIE,KAAK5C,EAAE6C,cAAc7C,EAAE8C,WAAW,KAAO9D,EAAcA,EACzJyC,QA1Be,SAAAkC,GACjBA,EAAGC,iBACHD,EAAGE,kBACH9C,EAAMtC,iBAAiB,CACrB/C,cAAe,GACfc,YAAa,KAEfuE,EAAMrC,mBAAmB,CACvBR,gBAAiB,KACjBD,cAAe,GACfD,gBAAiB,KAEnB+C,EAAMzB,UAAUU,GAChBe,EAAM1B,cAAa,IAcjByE,WAAA,GAAAxJ,OAAaD,IAAO2F,GAAGxF,OAAO,qBAA9B,eAAAF,OAAgEyG,EAAMpG,KAAKG,IAAS,GACpFiJ,WAAS,sBAlGCC,IAAMC,WAwHTpD,cAfS,SAAAnB,GAAK,MAAK,CAChC/E,KAAM+E,EAAMD,IAAI9E,KAChBwE,YAAaO,EAAMa,SAASpB,YAC5B3D,YAAakE,EAAMD,IAAIjE,YACvBqD,SAAUa,EAAMU,SAASvB,SACzBG,WAAYU,EAAMU,SAASpB,aAGF,SAAA8B,GAAQ,MAAK,CACtCzB,aAAc,SAAAhD,GAAG,OAAIyE,EAASzB,EAAahD,KAC3CiD,UAAW,SAAAjD,GAAG,OAAIyE,EAASxB,EAAUjD,KACrCoC,iBAAkB,SAAApC,GAAG,OAAIyE,EAASrC,EAAiBpC,KACnDqC,mBAAoB,SAAArC,GAAG,OAAIyE,EAASpC,EAAmBrC,OAG1CwE,CAA6CoB,GCrHtDiC,cACJ,SAAAA,EAAYnD,GAAO,IAAAoD,EAAA,OAAAxI,OAAAyI,EAAA,EAAAzI,CAAA2G,KAAA4B,IACjBC,EAAAxI,OAAA0I,EAAA,EAAA1I,CAAA2G,KAAA3G,OAAA2I,EAAA,EAAA3I,CAAAuI,GAAAK,KAAAjC,KAAMvB,KAcRyD,aAAe,WAAM,IACX7B,EAAUwB,EAAKzE,MAAfiD,MACApH,EAAU4I,EAAKpD,MAAfxF,MACFoB,EAAOW,IAAY/B,EAAO,IAAIqH,KAAKrH,EAAMsH,cAAetH,EAAMuH,WAAW,EAAG,IAC9EH,EAAQhG,EAAKiD,OACf6E,sBAAsB,kBAAMN,EAAKO,SAAS,CAAE/B,MAAOA,EAAM,MAEzDgC,QAAQC,IAAI,kCApBdT,EAAKzE,MAAQ,CACXiD,MAAO,GAHQwB,mFAQjB7B,KAAKkC,4DAILlC,KAAKkC,gDAeL,IAAMzD,EAAQuB,KAAKvB,MAEbxF,EAAQwF,EAAMxF,MAEdsJ,EAAe,SAAAtJ,GACnB,IAAMuB,EAAIQ,IAAawH,MAAMvJ,GAC7B,OAAO+B,IAAaA,IAAYwH,MAAMhI,GAAIQ,IAAayH,OAAOjI,EAAE,IAAI8C,QAGhEZ,EAAa+B,EAAM/B,WACvBH,EAAWkC,EAAMlC,SAEbmG,EAAY1H,IAAc,MAE1BX,EAAOW,IAAY/B,EAAO,IAAIqH,KAAKrH,EAAMsH,cAAetH,EAAMuH,WAAW,EAAG,IAC5EmC,EAAU5K,IAAOkB,GAAO2J,MAAM,SAAS1K,OAAO,OAC9C2K,EAAW9K,IAAOkB,GAAO4B,IAAI,EAAG,UAAUC,QAAQ,SAAS5C,OAAO,OACpE4K,EAAa,GACA,QAAZH,GAAkC,QAAbE,GAAoC,QAAZF,GAAkC,QAAbE,KACrEC,GAAc,IApBT,IAuBCzC,EAAUL,KAAK5C,MAAfiD,MAGF0C,EADa1C,GAAShG,EAAKiD,OACDjD,EAAOA,EAAKvC,MAAM,EAAGuI,GAkB/C2C,EAAiBjL,IAAOiI,KAAKvB,MAAMxE,cAAe,KAAK/B,OAAO,UAAYwK,EAAUzJ,GAC1F,OACE6F,EAAAhG,EAAAiG,cAAA,OACEC,UAAU,QACViC,OAAqB,EAAX1E,EAA8B,EAAbG,EAAkB,GAC7CsE,MAAQzE,EAAWgG,EAAatJ,GAAWyD,GAAc6F,EAAatJ,GAAS,GAAM6J,EACrFtJ,IAAKP,GAEL6F,EAAAhG,EAAAiG,cAAA,SACED,EAAAhG,EAAAiG,cAAA,QACEC,UAAWC,IAAW,aAAc,CAACC,KAAQ8D,IAC7C5B,EAAe,EAAX7E,EAA8B,EAAbG,EAAkB,GACvCvB,GAAKoB,EAAWgG,EAAatJ,GAAWyD,GAAc6F,EAAatJ,GAAS,IAAO,EACnFgK,WAAW,SACX9D,QAAS,kBA9BW,SAAAlG,GAC1BwF,EAAMzB,UAAU,MAChByB,EAAMrC,mBAAmB,CACvBR,gBAAiB,KACjBD,cAAe,GACfD,gBAAiB,KAEnB,IAAMtC,EAAgBJ,EAAiBjB,MAASkB,MAAMA,GAAOf,OAAO,KAAMuG,EAAMvF,YAAauF,EAAMtF,SACnGsF,EAAMtC,iBAAiB,CACrBlC,cAAeb,EAAca,cAC7BC,YAAad,EAAcc,YAC3Bd,cAAeA,EAAcA,gBAE/BqF,EAAM1B,cAAa,GAiBEmG,CAAoBR,EAAUzJ,MAE3CyJ,EAAUzJ,IAEZ8J,EAAWxK,IAAI,SAAAmF,GAAC,OAAIoB,EAAAhG,EAAAiG,cAACoE,EAAD,CAAKlD,KAAM+C,GAAkBjL,IAAO2F,GAAGxF,OAAO,SAAWuG,EAAM7C,gBAAiB+C,IAAKjB,EAAGzE,MAAOA,EAAOO,IAAKkE,eAzFvHgE,IAAM0B,eAiHX7E,cAjBS,SAAAnB,GAAK,MAAK,CAChCjE,QAASiE,EAAMD,IAAIhE,QACnBd,KAAM+E,EAAMD,IAAI9E,KAChBa,YAAakE,EAAMD,IAAIjE,YACvBqD,SAAUa,EAAMU,SAASvB,SACzBG,WAAYU,EAAMU,SAASpB,WAC3BzC,cAAemD,EAAMD,IAAIlD,cACzB2B,gBAAiBwB,EAAMD,IAAIvB,kBAGF,SAAA4C,GAAQ,MAAK,CACtCrC,iBAAkB,SAAApC,GAAG,OAAIyE,EAASrC,EAAiBpC,KACnDqC,mBAAoB,SAAArC,GAAG,OAAIyE,EAASpC,EAAmBrC,KACvDgD,aAAc,SAAAhD,GAAG,OAAIyE,EAASzB,EAAahD,KAC3CiD,UAAW,SAAAjD,GAAG,OAAIyE,EAASxB,EAAUjD,OAGxBwE,CAA6CqD,GCrHtDyB,mLAEF,IAMeC,EAAQC,EANjB9E,EAAQuB,KAAKvB,MACbjD,EAAUiD,EAAMjD,QAAQtD,OAAO,cAC/BuD,EAAUgD,EAAMhD,QAAQvD,OAAO,cAE/BsL,EAASxI,IAAayI,MAAM,IAAInD,KAAK1F,SAAQ,GAAA5C,OAAIwD,EAAQ3D,MAAM,KAAK,KAAO,EAAG,GAClF,IAAIyI,KAAK1F,SAAQ,GAAA5C,OAAIyD,EAAQ5D,MAAM,KAAK,KAAO,GAAI,KAQ/C6L,GAPSJ,EAOSE,EAPDD,EAOSC,EAAOlG,OAAS,GANvCgG,EAAO1K,OAAO,SAAC+K,EAAM/C,EAAOgD,GAGjC,OAFIA,GAASN,EAAOhG,OAASiG,KAAU,GAAe,IAAVK,GAAaD,EAAK5K,KAAK,IACnE4K,EAAKA,EAAKrG,OAAS,GAAGvE,KAAK6H,GACpB+C,GACN,CAAC,MAIN,OACE7E,EAAAhG,EAAAiG,cAAA,WAEI2E,EAAUnL,IAAI,SAACiL,EAAQvI,GAAT,OACZ6D,EAAAhG,EAAAiG,cAAA,OAAKC,UAAWC,IAAW,OAAQ,CAAC4E,OAAU5I,IAAMwD,EAAMnC,YAAa9C,IAAKyB,GAExEuI,EAAOjL,IAAI,SAACU,EAAOgC,GAAR,OACT6D,EAAAhG,EAAAiG,cAAC+E,EAAD,CACEtK,IAAKyB,EACLhC,MAAOA,iBA1BRyI,IAAM0B,eA6CV7E,cAPS,SAAAnB,GAAK,MAAK,CAChC/E,KAAM+E,EAAMD,IAAI9E,KAChBmD,QAAS4B,EAAMD,IAAI3B,QACnBC,QAAS2B,EAAMD,IAAI1B,QACnBa,UAAWc,EAAMU,SAASxB,YAGbiC,CAAyB8E,GCvCzBU,2LARX,OACEjF,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,OAAOgF,GAAG,QACtBhE,KAAKvB,MAAMwF,iBAJDvC,IAAM0B,gBCUnBc,qBACJ,SAAAA,EAAYzF,GAAO,IAAAoD,EAAA,OAAAxI,OAAAyI,EAAA,EAAAzI,CAAA2G,KAAAkE,GACjBrC,EAAAxI,OAAA0I,EAAA,EAAA1I,CAAA2G,KAAA3G,OAAA2I,EAAA,EAAA3I,CAAA6K,GAAAjC,KAAAjC,KAAMvB,IACNjC,OAAO2H,iBAAiB,SAAU,WAChC1F,EAAM2F,eAAe5H,OAAOC,cAHboF,mFAQjB7B,KAAKvB,MAAMxC,aAAY,oCAIvB,OACE6C,EAAAhG,EAAAiG,cAACsF,EAAD,KACEvF,EAAAhG,EAAAiG,cAACuF,EAAD,MACAxF,EAAAhG,EAAAiG,cAACwF,EAAD,MACAzF,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,UACbF,EAAAhG,EAAAiG,cAACyF,EAAD,OAEF1F,EAAAhG,EAAAiG,cAAC0F,EAAA3L,EAAD,CAAckL,GAAG,aAAaU,WAAS,EAACC,MAAM,qBApBhCjD,IAAM0B,gBA+Bb7E,cAAQ,KALI,SAAAC,GAAQ,MAAK,CACtCvC,YAAa,SAAAlC,GAAG,OAAIyE,EAASvC,EAAYlC,KACzCqK,eAAgB,SAAArK,GAAG,OAAIyE,EVNK,SAAAzE,GAAG,MAAK,CAAEmC,KAjClB,gBAiCuCnC,OUM3BqK,CAAerK,OAGlCwE,CAAkC2F,WCpC3CU,iMACkB/E,EAAWC,GAC/B,OAAOD,EAAUhD,cAAgBmD,KAAKvB,MAAM5B,aAC1CgD,EAAU5F,gBAAkB+F,KAAKvB,MAAMxE,eACvC4F,EAAUjE,kBAAoBoE,KAAKvB,MAAM7C,iDAGpC,IAAAiJ,EAEiE7E,KAAKvB,MADrEjD,EADDqJ,EACCrJ,QAASC,EADVoJ,EACUpJ,QAASuB,EADnB6H,EACmB7H,UAAWD,EAD9B8H,EAC8B9H,aAAcZ,EAD5C0I,EAC4C1I,iBAAkBC,EAD9DyI,EAC8DzI,mBACnEnC,EAFK4K,EAEL5K,cAAe4C,EAFVgI,EAEUhI,YAAa3D,EAFvB2L,EAEuB3L,YAAaC,EAFpC0L,EAEoC1L,QAASyC,EAF7CiJ,EAE6CjJ,gBAC9CkJ,EAAe7K,GAAiB2B,GAAmBiB,EACrDkI,EAAO,GAETA,EADE9K,EACK,SACE2B,EACF,QAEA,OAET,IAAMoJ,EAAe/K,EAAgBA,EAAc,EAAIlC,IAAO+M,GAAcxF,SAAS,EAAGyF,GAClFE,EAAWhL,EAAgBW,SAASX,GAAe,EAAIlC,IAAO+M,GAAcjK,IAAI,EAAGkK,GACnFvF,EAAoBvF,EAAgBlC,IAAOiN,EAAc,KAAKE,QAAQ1J,EAAQV,QAAQ,SAAWkK,EAAaE,QAAQ1J,EAAQV,QAAQ,SACtI2E,IAAgBxF,GAAuBgL,EAASE,SAAS1J,EAAQmH,MAAM,SACvEwC,EAAU,SAAAzG,GACdxC,EAAiB,CACf/C,cAAe,GACfc,YAAa,GACbD,cAAe,OAEjBmC,EAAmB,CACjBR,gBAAiB,KACjBD,cAAe,GACfD,gBAAiB,KAEnBsB,EAAU2B,GACV5B,GAAa,IAETsI,EAAY,SAAApM,GAChB+D,EAAU,MACVZ,EAAmB,CACjBR,gBAAiB,KACjBD,cAAe,GACfD,gBAAiB,KAEnB,IAAMtC,EAAgBJ,EAAiBC,EAAMqM,WAAYpM,EAAaC,GACtEgD,EAAiB,CACflC,cAAeb,EAAca,cAC7BC,YAAad,EAAcc,YAC3Bd,cAAeA,EAAcA,gBAE/B2D,GAAa,IAEXwI,EAAS,GASb,OAPEA,EADEtL,EACOlC,IAAOkC,EAAe,KAAK/B,OAAO,QAClC0D,EACH,GAAA5D,OAAMD,IAAO6D,EAAiB,OAAO1D,OAAO,QAA5C,KAEGH,IAAO+M,GAAc5M,OAAO,sBAIrC4G,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,qBACVwG,SAAU,EACVC,UAAW,SAAApE,GACLA,IACa,cAAXA,EAAG7H,MACJS,EAA8DoL,EAAUP,EAAe,GAAvEM,EAAQrN,IAAO+M,GAAcjK,KAAK,EAAGkK,KAEzC,eAAX1D,EAAG7H,MACJS,EAA6DoL,EAAUzK,SAASkK,GAAgB,GAAhFM,EAAQrN,IAAO+M,GAAcjK,IAAI,EAAGkK,QAI9DjG,EAAAhG,EAAAiG,cAAA,KACEC,UAAWC,IAAW,sBAAuB,CAACS,UAAaF,IAC3DL,QAAS,WAAOK,GAAqBxC,EAAUjF,IAAO+M,GAAcjK,KAAK,EAAGkK,OAE5EQ,EACFzG,EAAAhG,EAAAiG,cAAA,KACEC,UAAWC,IAAW,uBAAwB,CAACS,UAAaD,IAC5DN,QAAS,kBAAMM,GAAiBzC,EAAUjF,IAAO+M,GAAcjK,IAAI,EAAGkK,eAjFzDrD,IAAMC,WAyGdpD,eAjBS,SAAAnB,GAAK,MAAK,CAChC5B,QAAS4B,EAAMD,IAAI3B,QACnBC,QAAS2B,EAAMD,IAAI1B,QACnBoB,YAAaO,EAAMa,SAASpB,YAC5B5C,cAAemD,EAAMD,IAAIlD,cACzB2B,gBAAiBwB,EAAMD,IAAIvB,gBAC3B1C,YAAakE,EAAMD,IAAIjE,YACvBC,QAASiE,EAAMD,IAAIhE,UAGM,SAAAqF,GAAQ,MAAK,CACtCxB,UAAW,SAAAjD,GAAG,OAAIyE,EAASxB,EAAUjD,KACrCgD,aAAc,SAAAhD,GAAG,OAAIyE,EAASzB,EAAahD,KAC3CoC,iBAAkB,SAAApC,GAAG,OAAIyE,EAASrC,EAAiBpC,KACnDqC,mBAAoB,SAAArC,GAAG,OAAIyE,EAASpC,EAAmBrC,OAG1CwE,CAA6CqG,ICxC7Cc,eArEb,SAAAA,EAAYjH,GAAO,IAAAoD,EAAA,OAAAxI,OAAAyI,EAAA,EAAAzI,CAAA2G,KAAA0F,IACjB7D,EAAAxI,OAAA0I,EAAA,EAAA1I,CAAA2G,KAAA3G,OAAA2I,EAAA,EAAA3I,CAAAqM,GAAAzD,KAAAjC,KAAMvB,KAeRkH,WAAa,WACX,IACMC,EADS5K,IAAU6G,EAAKgE,KAAKC,MAAMC,MAAMlE,EAAKpD,MAAMuH,UACnCC,UAAU,QAAQ5N,KAAK,SAAAqF,GAAC,OAAIA,IAOnDkI,EAAQM,YAERN,EAAQO,aACLC,KAAK,OAAQ,WAEhB,IAAMC,EAAQT,EAAQS,QAAQC,OAAO,KAAKC,QAAQ,OAAO,GACzDF,EAAMD,KAAK,OAAQ,WAEnBC,EACGC,OAAO,QACPF,KAAK,SAAU,GACfA,KAAK,YAAa,SAAA1I,GAAC,mBAAA1F,OAAiB0F,EAAEvC,EAAnB,MAAAnD,OAAyB6J,EAAKpD,MAAM+H,WAApC,OACnBC,GAAG,YAAa,SAAC/I,EAAGzC,GAAJ,OAAU4G,EAAKO,SAAS,CAAEsE,WAAYzL,MACtDwL,GAAG,aAAc,kBAAM5E,EAAKO,SAAS,CAAEsE,YAAa,MACpDD,GAAG,QAAS,SAAA/I,GAAC,OApBE,SAAAA,GAChBmE,EAAKO,SAAS,CACZuE,UAAWjJ,IAkBKkJ,CAAUlJ,KAEjBkI,EAAQiB,OAAON,QAAQ,OAAO,GAExCH,KAAK,OAAQ,WACbA,KAAK,UAAW,IAChBD,aACAC,KAAK,UAAW,GAChBU,SAEHlB,EACGmB,MAAMV,GACNW,OAAO,QACPZ,KAAK,QAAS,SAAA1I,GAAC,OAAIA,EAAEsD,QACrBoF,KAAK,WAAY,SAAA1I,GAAC,gBAAA1F,OAAc0F,EAAErF,KAAhB,2BAAAL,OAA8C0F,EAAE3C,eAClEqL,KAAK,WAAY,eACjBG,QAAQ,cAAe,SAAC7I,EAAGzC,GAAJ,OAAUA,IAAM4G,EAAKzE,MAAMsJ,aAClDP,aACAc,SAAS,KACTb,KAAK,YAAa,SAAA1I,GAAC,mBAAA1F,OAAiB0F,EAAEvC,EAAnB,MAAAnD,OAAyB0F,EAAE0D,EAA3B,OACnBgF,KAAK,SAAU,SAAA1I,GAAC,OAAIA,EAAEuD,UAzDzBY,EAAKzE,MAAQ,CACXsJ,YAAa,EACbC,UAAW,MAJI9E,mFASjB7B,KAAK2F,0DAIL3F,KAAK2F,8CAkDL,OACE7G,EAAAhG,EAAAiG,cAAA,KAAGmI,IAAI,gBAjEMxF,IAAM0B,eC6BV+D,8MApBbC,WAAa,WACX,IAAMC,EAAQrM,IAAc6G,EAAKpD,MAAM6I,QACvCtM,IAAU6G,EAAKgE,KAAKwB,OACjBlB,aACAlE,KAAKoF,uFAXRrH,KAAKoH,0DAILpH,KAAKoH,8CAWL,OACEtI,EAAAhG,EAAAiG,cAAA,KAAGC,UAAU,cACVuI,UAAS,eAAAvP,OAAiBgI,KAAKvB,MAAM+H,WAAa,GAAzC,KACTU,IAAI,QACJjH,KAAK,OACLuH,SAAU,GACVvE,WAAW,kBAvBAvB,IAAM0B,eCuBXqE,8MAdbL,WAAa,WACX,IAAMM,EAAQ1M,IAAY6G,EAAKpD,MAAMkJ,QAAQC,MAAM/F,EAAKpD,MAAMoJ,WAAWC,WAAW9M,IAAU,MAC9FA,IAAU6G,EAAKgE,KAAK6B,OACjBvB,aACAlE,KAAKyF,uFAXR1H,KAAKoH,0DAILpH,KAAKoH,8CAWL,OACEtI,EAAAhG,EAAAiG,cAAA,KAAGC,UAAU,cAAckI,IAAI,iBAlBjBxF,IAAM0B,eCEpB2E,eACJ,SAAAA,EAAYtJ,GAAO,IAAAoD,EAAA,OAAAxI,OAAAyI,EAAA,EAAAzI,CAAA2G,KAAA+H,IACjBlG,EAAAxI,OAAA0I,EAAA,EAAA1I,CAAA2G,KAAA3G,OAAA2I,EAAA,EAAA3I,CAAA0O,GAAA9F,KAAAjC,KAAMvB,KACDrB,MAAQ,CACX4K,kBAAmB,GAHJnG,sHA6CjB,IAPO,IAAAoG,EAAAjI,KAAA6E,EACqF7E,KAAKvB,MAAzF6I,EADDzC,EACCyC,OAAQd,EADT3B,EACS2B,WAAY0B,EADrBrD,EACqBqD,OAAQP,EAD7B9C,EAC6B8C,OAAQ9K,EADrCgI,EACqChI,YAA0B3D,GAD/D2L,EACkD9J,YADlD8J,EAC+D3L,aAAab,EAD5EwM,EAC4ExM,KAE7E8P,EAAYpQ,IAAO8E,GAAayB,WAAW,GAC3C8J,EAAUrQ,IAAO8E,GAAayB,WAAW,GAC3CjE,EAAO,GACPsE,EAAMwJ,EACHxJ,EAAIwG,SAASiD,IAClB/N,EAAKtB,KAAK4F,EAAI0J,UACd1J,EAAMA,EAAI2J,QAAQzN,IAAI,EAAG,KAE3B,IAAM0N,EAAgBlO,EAAK9B,IAAI,SAAAoG,GAAG,OAAI5G,IAAO4G,GAAKzG,OAAO,gBAErDsQ,EADcnP,OAAOC,KAAKjB,GAAMkB,OAAO,SAAAC,GAAG,OAAI+O,EAAcE,SAASjP,KAC5CZ,OAAO,SAACe,EAAKnB,GAExC,OADAmB,EAAIZ,KAAK,CAAE4F,IAAKnG,EAAMuC,YAAa7B,EAAYV,KACxCmB,GACN,IACH6O,EAAeA,EAAajQ,IAAI,SAAA6H,GAAI,OAClCA,EAAKrF,YAAYxC,IAAI,SAAAC,GACnB,IAAMgC,EAAIzC,IAAM,GAAAC,OAAIoI,EAAKzB,IAAT,KAAA3G,OAAgBQ,IAChC,OAAOgC,EAAEC,UAAYD,EAAEE,UAAYF,EAAEG,cACjCC,SAASJ,EAAEK,IAAI,EAAG,QAAQC,QAAQ,QAAQ5C,OAAO,OACjD0C,SAASJ,EAAEM,QAAQ,QAAQ5C,OAAO,WAU1C,IANA,IAAMwQ,EAAkB,GAAG1Q,OAAOoG,MAAM,GAAIoK,GAAc5P,OAAO,SAACe,EAAKnB,GAErE,OADAmB,EAAInB,IAASmB,EAAInB,IAAS,GAAK,EACxBmB,GACN,IAECgP,EAAU,GACL1N,EAAI,EAAGA,GAAK,GAAIA,IACvB0N,EAAQ1N,GAAKyN,EAAgBzN,GAAK2N,OAAOF,EAAgBzN,GAAG,GAAG4N,QAAQ,GAAK,EAI9E,IAAMC,EAAO9N,MACVG,EAAE,SAAAuC,GAAC,OAAI4J,EAAO5J,GAAG,KACjBqL,GAAGvC,EAAa0B,EAAOc,IAAMd,EAAOe,QACpCC,GAAG,SAAAxL,GAAC,OAAIiK,EAAOgB,EAAQjL,MACvByL,MAAMnO,KAEHoO,EAAYpO,MACfG,EAAE,SAAAuC,GAAC,OAAI4J,EAAO5J,GAAG,KACjB0D,EAAE,SAAA1D,GAAC,OAAIiK,EAAOgB,EAAQjL,MACtByL,MAAMnO,KAET,OACE8D,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,aACbF,EAAAhG,EAAAiG,cAAA,YACED,EAAAhG,EAAAiG,cAAA,kBAAgBiF,GAAG,OAAOqF,IAAE,EAACC,GAAG,KAAKJ,GAAG,OAAOK,GAAG,KAAKC,GAAG,KAAKC,aAAa,OAC1E3K,EAAAhG,EAAAiG,cAAA,QAAM0D,OAAO,MAAMiH,UAAU,OAAOC,YAAa,KACjD7K,EAAAhG,EAAAiG,cAAA,QAAM0D,OAAO,MAAMiH,UAAU,UAAUC,YAAa,OAGxD7K,EAAAhG,EAAAiG,cAAA,QAAMC,UAAU,OACViB,KAAK,aACLvC,EAAGoL,EAAKzP,OAAOC,KAAKqP,MAE1B7J,EAAAhG,EAAAiG,cAAA,QAAMC,UAAU,cACVtB,EAAG0L,EAAU/P,OAAOC,KAAKqP,MAG7BtP,OAAOC,KAAKqP,GAASpQ,IAAI,SAACC,EAAMyC,GAAP,QACrB0N,EAAQnQ,IACVsG,EAAAhG,EAAAiG,cAAA,UAAQC,UAAU,MACVxF,IAAKyB,EACLpC,EAAG,EACH+Q,GAAItC,EAAO9O,GAAM,GACjBqR,GAAIlC,EAAOgB,EAAQnQ,IACnBsR,WAAUtR,EACVuR,aAAYpB,EAAQnQ,GACpBgJ,WAAA,GAAAxJ,OAAamQ,EAAUjQ,OAAO,UAA9B,KAAAF,OAA2CoQ,EAAQlQ,OAAO,UAA1D,WAAAF,OAA6EmQ,EAAU/H,OAAvF,iCAAApI,OAA6HQ,EAA7H,eAAAR,OAA4I2Q,EAAQnQ,IACpJyH,KAAI,GAAAjI,OAAKiD,IAAMgN,EAAK7K,MAAM4K,iBAAmB,UAAY,QACzDgC,YAAa,kBAAM/B,EAAK7F,SAAS,CAAE4F,iBAAkB/M,KACrDgP,aAAc,kBAAMhC,EAAK7F,SAAS,CAAE4F,kBAAmB,KACvDvG,WAAS,0BApHLC,IAAMC,WAmIfpD,eANS,SAAAnB,GAAK,MAAK,CAChClE,YAAakE,EAAMD,IAAIjE,YACvBb,KAAM+E,EAAMD,IAAI9E,OAIHkG,CAAyBwJ,ICtHlCmC,uBACJ,SAAAA,EAAYzL,GAAO,IAAAoD,EAAA,OAAAxI,OAAAyI,EAAA,EAAAzI,CAAA2G,KAAAkK,IACjBrI,EAAAxI,OAAA0I,EAAA,EAAA1I,CAAA2G,KAAA3G,OAAA2I,EAAA,EAAA3I,CAAA6Q,GAAAjI,KAAAjC,KAAMvB,KAyBR0L,YAAc,SAAC1L,EAAOpG,GACpB,IAAMiP,EAAStM,MACT2M,EAAS3M,MAAiBoP,OAE1BC,EAAOhR,OAAAyH,EAAA,EAAAzH,CAAO8E,MAAM,IAAI7E,QACxBgR,EAAU,CAAC,EAAGtP,IAAO3B,OAAOS,OAAOzB,KAYzC,OAVAiP,EACGiD,OAAOF,GACP5G,MAAM,CAAC,EAAG5B,EAAKzE,MAAM4D,MAAQvC,EAAMyJ,OAAOsC,QAC1CC,aAAahM,EAAMgM,cACnBC,aAAajM,EAAMiM,cAEtB/C,EACG4C,OAAOD,GACP7G,MAAM,CAAChF,EAAMwC,OAASxC,EAAMyJ,OAAOc,IAAMvK,EAAMyJ,OAAOe,OAAQ,IAE1D,CAAC3B,SAAQK,WA3CC9F,EA8CnB8I,eAAiB,SAAAlM,GAGf,MAAO,CAACmM,UAFU/I,EAAKzE,MAAM4D,OAASvC,EAAMyJ,OAAO2C,KAAOpM,EAAMyJ,OAAOsC,OAEpDhE,WADA/H,EAAMwC,SA9CzBY,EAAKzE,MAAQ,CACX4K,kBAAmB,EACnB8C,WAAW,EACX9J,MAAO+J,SAASC,eAAe,QAAQC,YAAcxM,EAAMyJ,OAAO2C,KAAOpM,EAAMyJ,OAAOsC,OAExFhO,OAAO2H,iBAAiB,SAAUtC,EAAKqJ,SAASC,KAAd9R,OAAA+R,EAAA,EAAA/R,QAAA+R,EAAA,EAAA/R,CAAAwI,MAPjBA,wEAUV,IACHwJ,EADGpD,EAAAjI,KAGP,OAAO,SAAAsL,IACK,IAAND,GACFE,aAAaF,GAEfA,EAAIG,WAAW,WACb,IAAMpO,EAAQ/D,OAAO0E,OAAOkK,EAAK7K,MAAO,CACtC4D,MAAO+J,SAASC,eAAe,QAAQC,YAAchD,EAAKxJ,MAAMyJ,OAAO2C,KAAO5C,EAAKxJ,MAAMyJ,OAAOsC,QAElGvC,EAAK7F,SAAShF,IACb,mDA+BLqO,IAAaC,2CAGN,IAAAC,EAAA3L,KACDjD,IAAiBiD,KAAKvB,MAAMvF,YAAY8G,KAAKvB,MAAM5B,gBACrDmD,KAAKvB,MAAMrF,cAAckE,UACzB0C,KAAKvB,MAAM/C,gBAAgB4B,OA2E/B,OACEwB,EAAAhG,EAAAiG,cAACsF,EAAD,KACEvF,EAAAhG,EAAAiG,cAAC6M,GAAD,CAAU/O,YAAamD,KAAKvB,MAAM5B,cAClCiC,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,YAETjC,EA9Ea,WACrB,IAAI1E,EAAO,GAETA,EADIsT,EAAKlN,MAAMrF,cAAckE,OACtBqO,EAAKlN,MAAMvE,YACPyR,EAAKlN,MAAM/C,gBAAgB4B,OAC/BqO,EAAKlN,MAAM9C,cAEXgQ,EAAKlN,MAAMpG,KAPO,IAAAwT,EASCF,EAAKxB,YAAYwB,EAAKlN,MAAOpG,GAAjDiP,EATmBuE,EASnBvE,OAAQK,EATWkE,EASXlE,OATWmE,EAUOH,EAAKhB,eAAegB,EAAKlN,OAAnDmM,EAVmBkB,EAUnBlB,UAAWpE,EAVQsF,EAURtF,WAEb3I,EAAM7C,IAAO3B,OAAOS,OAAOzB,IAG3B0T,EAAW,CACfzE,SACAK,SACAiD,YACApE,aACAqB,UAPgBhK,EAAM,GAAKA,EAAMA,EAAM,GASnCmI,EAAW,CACfA,SAAU3M,OAAOC,KAAKjB,GAAME,IAAI,SAACC,EAAMyC,GAAP,MAAc,CAC5C+I,GAAI/I,EACJ5C,KAAMG,EACN2C,EAAGmM,EAAO9O,GACV4I,EAAGuG,EAAOtP,EAAKG,IACfwI,MAAOsG,EAAO0E,YACd/K,OAAQuF,EAAamB,EAAOtP,EAAKG,IAASmT,EAAKlN,MAAMyJ,OAAOc,IAAM2C,EAAKlN,MAAMyJ,OAAOe,OACpFlO,YAAa1C,EAAKG,OAGhB+O,EAAS,aAAAvP,OAAgB2T,EAAKlN,MAAMyJ,OAAO2C,KAAlC,KAAA7S,OAA0C2T,EAAKlN,MAAMyJ,OAAOc,IAA5D,KAEf,OACElK,EAAAhG,EAAAiG,cAAA,OAAKiC,MAAM,OAAOC,OAAQ0K,EAAKlN,MAAMwC,OAAQiG,IAAI,YAC/CpI,EAAAhG,EAAAiG,cAAA,KAAGwI,UAAWA,EAAWvG,MAAO4J,EAAW3J,OAAQuF,GACjD1H,EAAAhG,EAAAiG,cAACkN,GAAD5S,OAAA0E,OAAA,GAAWgO,EAAX,CAAqBxE,UAAS,eAAAvP,OAAiBwO,EAAjB,QAC9B1H,EAAAhG,EAAAiG,cAACmN,GAAUH,GACXjN,EAAAhG,EAAAiG,cAACoN,GAAD9S,OAAA0E,OAAA,GAAUgO,EAAc/F,IAEtB2F,EAAKvO,MAAM0N,WACXhM,EAAAhG,EAAAiG,cAACqN,GAAD,CACE9E,OAAQA,EACRK,OAAQA,EACRnB,WAAYA,EACZ0B,OAAQyD,EAAKlN,MAAMyJ,OACnBrL,YAAa8O,EAAKlN,MAAM5B,YACxB9B,YAAa1C,EACbkP,UAAWA,MA6BX8E,GACAvN,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,eAAf,oBAEJjC,GAAgB+B,EAAAhG,EAAAiG,cAAC0F,EAAA3L,EAAD,CAAckL,GAAG,cAAcU,WAAS,EAACC,MAAM,cAEjE5H,GA1Be,WACnB,IAAMuP,EAAmB,WACvBX,EAAKvJ,SAAS,CACZ0I,WAAYa,EAAKvO,MAAM0N,aAG3B,OACEhM,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,oBACdF,EAAAhG,EAAAiG,cAAA,QAAMC,UAAWC,IAAW,WAAY,CAACC,KAAQyM,EAAKvO,MAAM0N,YAAa3L,QAASmN,GAAlF,sBACqBxN,EAAAhG,EAAAiG,cAAA,SAAO7C,KAAK,WAAWqQ,QAASZ,EAAKvO,MAAM0N,UAAW0B,gBAAgB,EAAOC,SAAUH,MAiB1FI,WAlJJhL,IAAM0B,gBAqKd7E,eAbS,SAAAnB,GAAK,MAAK,CAChClE,YAAakE,EAAMD,IAAIjE,YACvBE,cAAegE,EAAMD,IAAI/D,cACzBsC,gBAAiB0B,EAAMD,IAAIzB,gBAC3BxB,YAAakD,EAAMD,IAAIjD,YACvByB,cAAeyB,EAAMD,IAAIxB,cACzBkB,YAAa9E,IAAOqF,EAAMa,SAASpB,aAAa3E,OAAO,gBAG9B,SAAAsG,GAAQ,MAAK,CACtCxB,UAAW,SAAAjD,GAAG,OAAIyE,EAASxB,EAAUjD,OAGxBwE,CAA6C2L,oGC8B7C3L,uBAzBS,SAAAnB,GAAK,MAAK,CAChCjE,QAASiE,EAAMD,IAAIhE,QACnBd,KAAM+E,EAAMD,IAAI9E,KAChBwD,YAAauB,EAAMD,IAAItB,YACvB3C,YAAakE,EAAMD,IAAIjE,YACvB2D,YAAa9E,IAAOqF,EAAMa,SAASpB,aAAa3E,OAAO,cACvD4D,MAAOsB,EAAMD,IAAIrB,MACjBO,kBAAmBe,EAAMU,SAASzB,kBAClCS,kBAAmBM,EAAMa,SAASnB,kBAClC6P,wBAAyBvP,EAAMD,IAAIwP,wBACnC3Q,iBAAkBoB,EAAMD,IAAInB,mBAGH,SAAAwC,GAAQ,MAAK,CACtCoO,WAAY,SAAA7S,GAAG,OAAIyE,ElB5HK,SAAAzE,GAAG,MAAK,CAAEmC,KA1EhB,cA0EmCnC,OkB4HzB6S,CAAW7S,KACvC8S,aAAc,SAAA9S,GAAG,OAAIyE,EjB1KK,SAAAzE,GAAG,MAAK,CAAEmC,KAjChB,gBAiCqCnC,OiB0K3B8S,CAAa9S,KAC3C+S,QAAS,SAAA/S,GAAG,OAAIyE,ElB/HK,SAAAzE,GAAG,MAAK,CAAEmC,KA1EhB,WA0EgCnC,OkB+HtB+S,CAAQ/S,KACjCgT,eAAgB,SAAAhT,GAAG,OAAIyE,ElB9HK,SAAAzE,GAAG,MAAK,CAAEmC,KA1Ef,mBA0EuCnC,OkB8H9BgT,CAAehT,KAC/CgD,aAAc,SAAAhD,GAAG,OAAIyE,EAASzB,EAAahD,KAC3CkC,YAAa,SAAAlC,GAAG,OAAIyE,EAASvC,EAAYlC,KACzCoC,iBAAkB,SAAApC,GAAG,OAAIyE,EAASrC,EAAiBpC,KACnDqC,mBAAoB,SAAArC,GAAG,OAAIyE,EAASpC,EAAmBrC,KACvDiD,UAAW,SAAAjD,GAAG,OAAIyE,EAASxB,EAAUjD,OAGxBwE,CAzLH,SAAAE,GAwBIA,EAAM3C,MAAMvD,IAAI,SAACyU,EAAM/R,GAAP,OAC5B6D,EAAAhG,EAAAiG,cAAA,QAAMvF,IAAKyB,GACN6D,EAAAhG,EAAAiG,cAAA,KAAGvF,IAAKwT,EAAKC,MACVD,EAAKC,MAERnO,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,aAZF,SAAAkO,GAElB,GAAc,IAAVA,EAAa,MAAO,SACxB,IAAMjS,EAAIL,SAASiG,KAAK2B,MAAM3B,KAAKyB,IAAI4K,GAASrM,KAAKyB,IAAI,QACzD,OAAOzB,KAAKsM,MAAMD,EAAQrM,KAAKuM,IAAI,KAAMnS,GAAI,GAAK,IAHpC,CAAC,QAAS,KAAM,KAAM,KAAM,MAGoBA,GAStDoS,CAAYL,EAAKzJ,UA7B3B,IAkCM+J,EAAgB,SAAAC,GACpBvS,IAAOuS,GAASC,KAAK,SAAAnV,GACnBoG,EAAMqO,QAAQzU,GACdoG,EAAMoO,cAAa,KAClBY,MAAM,SAAAC,GACP,MAAMA,KAwCV,OACE5O,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,OACbF,EAAAhG,EAAAiG,cAAA,UAAQC,UAAU,UAChBF,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,SAAf,mCAEFF,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,YATE,EA0CfF,EAAAhG,EAAAiG,cAAA,eACED,EAAAhG,EAAAiG,cAAA,2BACAD,EAAAhG,EAAAiG,cAAC4O,EAAA7U,EAAD,CACEkG,UAAU,WACV4O,QAxFM,CAAC,gBAAiB,gBAAiB,gBAAiB,iBAyF1DC,YAAY,YACZjN,MAAOnC,EAAM5C,YACb4Q,SApEO,SAAAjU,GAbfiG,EAAM1B,cAAa,GACnB0B,EAAMoO,cAAa,GACnBpO,EAAMtC,iBAAiB,CACrB/C,cAAe,GACfc,YAAa,KAEfuE,EAAMrC,mBAAmB,CACvBR,gBAAiB,KACjBD,cAAe,GACfD,gBAAiB,KAEnB+C,EAAMzB,UAAU,MAIhB,IAAM4D,EAAQpI,EAAKoI,MACnBnC,EAAMsO,eAAenM,GACrBnC,EAAMxC,aAAY,GACJ,kBAAV2E,GACF0M,EAAcQ,MAEF,kBAAVlN,GACF0M,EAAcS,MAEF,kBAAVnN,GACF0M,EAAcU,MAEF,kBAAVpN,GACF0M,EAAcW,UAyDVxP,EAAMpC,mBACNyC,EAAAhG,EAAAiG,cAAA,eACED,EAAAhG,EAAAiG,cAAA,6BACAD,EAAAhG,EAAAiG,cAACmP,EAAD,OAIFzP,EAAM3B,mBACNgC,EAAAhG,EAAAiG,cAAA,eACED,EAAAhG,EAAAiG,cAAA,yBACAD,EAAAhG,EAAAiG,cAACoP,GAAD,CACE9V,KAAMoG,EAAMtF,QAAQsF,EAAM5B,aAC1BqL,OAAQ,CAAEc,IAAK,GAAIwB,MAAO,GAAIvB,OAAQ,GAAI4B,KAAM,IAChD5J,OAAQ,IACRwJ,aAAc,GACdC,aAAc,MAKlBjM,EAAMzC,kBACN8C,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,WACbF,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,mBACfF,EAAAhG,EAAAiG,cAAA,OAAKC,UAAU,yBCxKPoP,QACW,cAA7B5R,OAAO6R,SAASC,UAEe,UAA7B9R,OAAO6R,SAASC,UAEhB9R,OAAO6R,SAASC,SAASC,MACvB,2DCRN,IAKMC,GAAQC,YACZxR,EACAT,OAAOkS,8BAAgClS,OAAOkS,6BAA6B,CACzEC,gBARoB,SAACnR,GAAD,MACN,0BAAhBA,EAAOtB,MAAoCsB,EAAOnF,KAAlDgB,OAAAsE,EAAA,EAAAtE,CAAA,GACOmE,EADP,CACenF,KAAM,kBAAoBmF,GAOvCoR,eAAgB,SAACxR,GAAD,OAAWA,EAAM/E,KAANgB,OAAAsE,EAAA,EAAAtE,CAAA,GAAkB+D,EAAlB,CAAyB/E,KAAM,kBAAoB+E,MAIlFyR,IAASC,OACPhQ,EAAAhG,EAAAiG,cAACgQ,EAAA,EAAD,CAAUP,MAAOA,IACf1P,EAAAhG,EAAAiG,cAACiQ,GAAD,OAEFjE,SAASC,eAAe,SDsGpB,kBAAmBiE,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC,wDEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,oECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.b91fb58a.chunk.js","sourcesContent":["import moment from 'moment';\nimport * as d3 from \"d3\";\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat()\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    // debugger\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    const max = d3.max(Object.values(occurrences));\n    const nrOfTicks = max < 10 ? max : max / 2;\n    let obj = {};\n    for (let i = 1; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    // acc.push(occurrences);\n    return acc;\n  }, {});\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedMonth: null,\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\n","const SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: action.screenWidth\n      });\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","const SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isBarChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {setWeekdayInsights, setMonthInsights} from \"../../reducers/app\";\nimport {selectDay, showBarChart} from \"../../reducers/barChart\";\nimport {getMonthInsights, getWeekdayInsights} from \"../../helpers/parser\";\nimport {connect} from \"react-redux\";\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = props => {\n  const onWeekdayClick = day => {\n    props.selectDay(null);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    const weekdayInsights = getWeekdayInsights(day, props.dayInsights, props.allDays);\n    props.setWeekdayInsights({\n      selectedWeekday: weekdayInsights.selectedWeekday,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      weekdayInsights: weekdayInsights.weekdayInsights\n    });\n    props.showBarChart(true);\n  };\n  return (\n    <div className='dayLabelsContainer'>\n    <span>\n      {\n        weekArray.map(day =>\n          <text\n            key={day}\n            className={classNames('dayLabels', {'bold': props.selectedWeekday === day})}\n            onClick={() => onWeekdayClick(day)}\n          >\n            {day}\n          </text>\n        )\n      }\n    </span>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='yearLabel'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport { selectDay, showBarChart } from '../../reducers/barChart';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.fill !== nextProps.fill;\n  }\n\n  componentDidUpdate() {\n    this.renderDots();\n  }\n\n  renderDots = () => {\n    // let dots = d3.selectAll('.day')\n    //   .data(this.props.day, d => d);\n    //\n    // dots\n    //   .transition()\n    //   .duration(100)\n    //   .ease('ease-in')\n    //   .style('opacity', 1);\n    //\n    // dots.enter().append('rect')\n    //   .attr('class', 'day')\n    //   .attr('r', function(d) { return r(d.r); })\n    //   .attr('cx', function(d) { return x(d.x); })\n    //   .attr('cy', 0)\n    //   .style('stroke', '#3E6E9C')\n    //   .transition().duration(1000)\n    //   .attr('cy', function(d) { return y(d.y); })\n    //   .style('stroke', '#81E797');\n    //\n    // item.exit().filter(':not(.exiting)') // Don't select already exiting nodes\n    //   .classed('exiting', true)\n    //   .transition().duration(1000)\n    //   .attr('cy', height)\n    //   .style('stroke', '#3E6E9C')\n    //   .remove();\n  };\n\n  render() {\n    const props = this.props;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const month = props.month;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(props.data).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n    const item = Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    let fillColor = !!props.data[item] ? d3.interpolatePurples(value) : '#ececec';\n\n    const onDayClick = ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      props.selectDay(d);\n      props.showBarChart(true);\n    };\n    return (\n      <rect\n        key={d}\n        className={classNames('day', {'fill': isCurrentDay || props.fill})}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={onDayClick}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.barChart.selectedDay,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights } from '../../helpers/parser';\nimport {setMonthInsights, setWeekdayInsights} from \"../../reducers/app\";\nimport { showBarChart, selectDay } from \"../../reducers/barChart\";\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    const { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count+1 }));\n    } else {\n      console.log('now show day and month labels');\n    }\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const renderMonthOverview = month => {\n      props.selectDay(null);\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), props.dayInsights, props.allDays);\n      props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      props.showBarChart(true);\n    };\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className={classNames('month-name', {'bold': isCurrentMonth})}\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n            onClick={() => renderMonthOverview(monthName(month))}\n          >\n            { monthName(month) }\n          </text>\n          { renderList.map(d => <Day fill={isCurrentMonth || moment(d).format('ddd') === props.selectedWeekday} day={d} month={month} key={d} />) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    return (\n      <div>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Card>\n        <DayLabels />\n        <YearLabel />\n        <div className='months'>\n          <Year />\n        </div>\n        <ReactTooltip id='svgTooltip' multiline class='tooltipx'/>\n      </Card>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {selectDay, showBarChart} from '../../reducers/barChart';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport { getMonthInsights } from '../../helpers/parser';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  render() {\n    const { minDate, maxDate, selectDay, showBarChart, setMonthInsights, setWeekdayInsights,\n      selectedMonth, selectedDay, dayInsights, allDays, selectedWeekday } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay;\n    let unit = '';\n    if (selectedMonth) {\n      unit = 'months';\n    } else if (selectedWeekday) {\n      unit = 'weeks';\n    } else {\n      unit = 'days';\n    }\n    const previousItem = selectedMonth ? selectedMonth-1 : moment(selectedItem).subtract(1, unit);\n    const nextItem = selectedMonth ? parseInt(selectedMonth)+1 : moment(selectedItem).add(1, unit);\n    const showPreviousArrow = selectedMonth ? moment(previousItem, 'M').isAfter(minDate.startOf('year')) : previousItem.isAfter(minDate.startOf('year'));\n    const showNextArrow = selectedMonth ? true : nextItem.isBefore(maxDate.endOf('year'));\n    const pickDay = day => {\n      setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: [],\n        selectedMonth: null\n      });\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      selectDay(day);\n      showBarChart(true);\n    };\n    const pickMonth = month => {\n      selectDay(null);\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(month.toString(), dayInsights, allDays);\n      setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      showBarChart(true);\n    };\n    let string = '';\n    if (selectedMonth) {\n      string = moment(selectedMonth, 'M').format('MMMM');\n    } else if (selectedWeekday) {\n      string = `${moment(selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      string = moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n\n    return (\n      <div className='yearLabel dayTitle'\n           tabIndex={0}\n           onKeyDown={ev => {\n             if (ev) {\n               if (ev.key === 'ArrowLeft') {\n                 !selectedMonth ? pickDay(moment(selectedItem).add(-1, unit)) : pickMonth(selectedItem - 1)\n               }\n               if (ev.key === 'ArrowRight') {\n                 !selectedMonth ? pickDay(moment(selectedItem).add(1, unit)) : pickMonth(parseInt(selectedItem) + 1)\n               }\n             }\n      }}>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => {showPreviousArrow && selectDay(moment(selectedItem).add(-1, unit))}}\n        />\n        { string }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showNextArrow && selectDay(moment(selectedItem).add(1, unit))}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.barChart.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1,\n      modalOpen: null\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n    const openModal = d => {\n      this.setState({\n        modalOpen: d\n      });\n    };\n\n    current.interrupt();\n\n    current.transition()\n      .attr('fill', '#6595ec');\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter.attr('fill', '#6595ec');\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', '#6595ec')\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `Time - ${d.data}:00 <br> Occurrences - ${d.occurrences}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nexport default Bars;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale);\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={`translate(0,${this.props.plotHeight - 50})`}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale).ticks(this.props.nrOfTicks).tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1\n    }\n  }\n\n  componentDidUpdate() {\n    // let line = d3.selectAll('.line');\n    // if (line.node()) {\n    //   const totalLength = line.node().getTotalLength();\n    //   line\n    //     .attr('stroke-dasharray', totalLength)\n    //     .attr('stroke-dashoffset', totalLength)\n    //     .attr('stroke-width', 6)\n    //     .attr('stroke', '#7888BF')\n    //     .transition()\n    //     .delay(1000)\n    //     .duration(1000)\n    //     .attr('stroke-width', 0)\n    //     .attr('stroke-dashoffset', 0);\n    // }\n    // let area = d3.selectAll('.area');\n    // area\n    //   .attr('transform', 'translate(0,300)')\n    //   .transition()\n    //   .delay(1000)\n    //   .duration(1000)\n    //   .attr('transform', 'translate(0,0)');\n    // let dots = d3.selectAll('.dot');\n    // dots\n    //   .attr('transform', 'translate(0,300)')\n    //   .transition()\n    //   .delay(2000)\n    //   .duration(1000)\n    //   .attr('transform', 'translate(0,0)')\n  }\n\n  render() {\n    const { xScale, plotHeight, margin, yScale, selectedDay, occurrences, dayInsights, data } = this.props;\n\n    const startDate = moment(selectedDay).isoWeekday(1);\n    const endDate = moment(selectedDay).isoWeekday(8);\n    let days = [];\n    let day = startDate;\n    while (day.isBefore(endDate)) {\n      days.push(day.toDate());\n      day = day.clone().add(1, 'd');\n    }\n    const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n    const weekArray = Object.keys(data).filter(key => formattedDays.includes(key));\n    let weekInsights = weekArray.reduce((acc, item) => {\n      acc.push({ day: item, occurrences: dayInsights[item] });\n      return acc;\n    }, []);\n    weekInsights = weekInsights.map(week =>\n      week.occurrences.map(item => {\n        const m = moment(`${week.day} ${item}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      })\n    );\n\n    const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n\n    let weekObj = {};\n    for (let i = 1; i <= 24; i++) {\n      weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i]/7).toFixed(2) : 0\n    }\n\n    // define the area\n    const area = d3.area()\n      .x(d => xScale(d)+25)\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveCardinal);\n\n    const valueline = d3.line()\n      .x(d => xScale(d)+25)\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveCardinal);\n\n    return (\n      <svg className='areaChart'>\n        <defs>\n          <linearGradient id=\"grad\" is x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\" spreadMethod=\"pad\">\n            <stop offset=\"10%\" stopColor=\"#fff\" stopOpacity={.4}/>\n            <stop offset=\"80%\" stopColor=\"#7888BF\" stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className=\"area\"\n              fill=\"url(#grad)\"\n              d={area(Object.keys(weekObj))}\n        />\n        <path className=\"line shadow\"\n              d={valueline(Object.keys(weekObj))}\n        />\n        {\n          Object.keys(weekObj).map((item, i) =>\n            !!weekObj[item] &&\n            <circle className='dot'\n                    key={i}\n                    r={5}\n                    cx={xScale(item)+25}\n                    cy={yScale(weekObj[item])}\n                    data-key={item}\n                    data-value={weekObj[item]}\n                    data-tip={`${startDate.format('MMM DD')}-${endDate.format('MMM DD')} (Week ${startDate.week()})<br>Average observations at ${item}:00 --> ${weekObj[item]}`}\n                    fill={`${i === this.state.circleHoverIndex ? \"#7888BF\" : \"#fff\"}`}\n                    onMouseOver={() => this.setState({ circleHoverIndex: i })}\n                    onMouseLeave={() => this.setState({ circleHoverIndex: -1 })}\n                    data-for='rectTooltip'\n            />\n          )\n        }\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  data: state.app.data\n});\n\n\nexport default connect(mapStateToProps)(AreaChart);\n","import React from 'react';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\n\nimport Card from '../widget/Card';\n\nimport DayLabel from './DayLabel';\nimport Bars from './Bars';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport AreaChart from './AreaChart';\n\nimport './BarChart.scss';\nimport {selectDay} from \"../../reducers/barChart\";\n\nclass BarChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1,\n      isChecked: false,\n      width: document.getElementById('card').clientWidth - props.margin.left - props.margin.right\n    };\n    window.addEventListener('resize', this.resize().bind(this));\n  }\n\n  resize() {\n    let t;\n\n    return event => {\n      if (t !== false) {\n        clearTimeout(t);\n      }\n      t = setTimeout(() => {\n        const state = Object.assign(this.state, {\n          width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n        });\n        this.setState(state);\n      }, 100);\n    };\n  }\n\n  updateScale = (props, data) => {\n    const xScale = d3.scaleBand();\n    const yScale = d3.scaleLinear().nice();\n\n    const xDomain = [...Array(24).keys()];\n    const yDomain = [0, d3.max(Object.values(data))];\n\n    xScale\n      .domain(xDomain)\n      .range([0, this.state.width - props.margin.right])\n      .paddingInner(props.paddingInner)\n      .paddingOuter(props.paddingOuter);\n\n    yScale\n      .domain(yDomain)\n      .range([props.height - props.margin.top - props.margin.bottom, 0]);\n\n    return {xScale, yScale};\n  };\n\n  updatePlotSize = props => {\n    const plotWidth = this.state.width - (props.margin.left + props.margin.right);\n    const plotHeight = props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const showBarChart = !!this.props.dayInsights[this.props.selectedDay] ||\n      !!this.props.monthInsights.length ||\n      !!this.props.weekdayInsights.length;\n\n    const renderBarChart = () => {\n      let data = [];\n      if (!!this.props.monthInsights.length) {\n        data = this.props.daysOfMonth;\n      } else if (!!this.props.weekdayInsights.length) {\n        data = this.props.daysOfWeekday;\n      } else {\n        data = this.props.data;\n      }\n      const { xScale, yScale } =  this.updateScale(this.props, data);\n      const { plotWidth, plotHeight } = this.updatePlotSize(this.props);\n\n      const max = d3.max(Object.values(data));\n      const nrOfTicks = max < 10 ? max : max / 2;\n\n      const metaData = {\n        xScale,\n        yScale,\n        plotWidth,\n        plotHeight,\n        nrOfTicks\n      };\n      const plotData = {\n        plotData: Object.keys(data).map((item, i) => ({\n          id: i,\n          data: item,\n          x: xScale(item),\n          y: yScale(data[item]),\n          width: xScale.bandwidth(),\n          height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n          occurrences: data[item]\n        }))\n      };\n      const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n\n      return (\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} />\n            {\n              this.state.isChecked &&\n              <AreaChart\n                xScale={xScale}\n                yScale={yScale}\n                plotHeight={plotHeight}\n                margin={this.props.margin}\n                selectedDay={this.props.selectedDay}\n                occurrences={data}\n                transform={transform}\n              />\n            }\n          </g>\n        </svg>\n      )\n    };\n\n    const renderFooter = () => {\n      const onCheckboxChange = () => {\n        this.setState({\n          isChecked: !this.state.isChecked\n        })\n      };\n      return (\n        <div className='footer yearLabel'>\n         <span className={classNames('checkbox', {'bold': this.state.isChecked})} onClick={onCheckboxChange}>\n           Show week overview <input type='checkbox' checked={this.state.isChecked} defaultChecked={false} onChange={onCheckboxChange} />\n         </span>\n        </div>\n      )\n    };\n\n    return (\n      <Card>\n        <DayLabel selectedDay={this.props.selectedDay} />\n        <div className='barChart'>\n            {\n              showBarChart\n              ? renderBarChart()\n              : <div className='emptyString'>No data recorded</div>\n            }\n          { showBarChart && <ReactTooltip id='rectTooltip' multiline class='tooltipx'/> }\n        </div>\n        { showBarChart &&  renderFooter() }\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD')\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport {setData, uploadFile, setDatasetName, showSpinner, setMonthInsights, setWeekdayInsights} from '../reducers/app';\nimport { showCalendar } from '../reducers/calendar';\nimport { showBarChart, selectDay } from '../reducers/barChart';\n\nimport { parseDayInsights } from '../helpers/parser';\n\nimport Heatmap from './calendar/Heatmap';\nimport BarChart from './bar-chart/BarChart';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd.csv';\nimport dataset4 from '../data/data.csv';\n\nimport { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.selectDay(null);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = false;\n\n  // whyDidYouUpdate(React);\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        {\n          showDropzone &&\n          <section>\n          <p>Upload file</p>\n          <Dropzone\n            accept='text/csv'\n            onDrop={onDrop}\n          >\n            {({getRootProps, getInputProps, isDragActive}) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n                >\n                  <input {...getInputProps()} />\n                  {\n                    !!files.length\n                      ? <span className='file-name'>\n                          <i className=\"fa fa-remove\" />\n                        {files}\n                        </span>\n                      : <span className='upload-message'>\n                          <i className=\"fa fa-upload\" />\n                            Drag & Drop your file or <u>Browse</u>\n                        </span>\n                  }\n                </div>\n              )\n            }}\n          </Dropzone>\n        </section>\n        }\n        <section>\n          <p>Select dataset</p>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </section>\n        {\n          props.isCalendarVisible &&\n          <section>\n            <p>Calendar heatmap</p>\n            <Heatmap />\n          </section>\n        }\n        {\n          props.isBarChartVisible &&\n          <section>\n            <p>Day overview</p>\n            <BarChart\n              data={props.allDays[props.selectedDay]}\n              margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n              height={300}\n              paddingInner={0.2}\n              paddingOuter={0.1}\n            />\n          </section>\n        }\n        {\n          props.isSpinnerVisible &&\n          <div className='spinner'>\n            <div className=\"double-bounce1\" />\n            <div className=\"double-bounce2\" />\n          </div>\n        }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD'),\n  files: state.app.files,\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.9f78b97e.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd.553964c1.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";"],"sourceRoot":""}