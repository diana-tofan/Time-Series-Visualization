{"version":3,"sources":["data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","helpers/colors.js","components/bar-chart/Container.js","components/widget/DragAndDrop.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","reduce","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","obj","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","isoWeekday","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","parseDayInsights","days","roundedHours","hour","m","parseInt","startOf","occurrences","getCurrentWeekInsights","selectedDay","startDate","endDate","isBefore","toDate","clone","add","formattedDays","weekInsights","includes","week","minute","second","millisecond","weekOccurrences","apply","weekObj","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","parseData","x","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","setData","type","showSpinner","setMonthInsights","setWeekdayInsights","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","showCalendar","selectDay","saveColor","isRadialChartVisible","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","showBarChart","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","toConsumableArray","Set","value","radialChart","barChart","weekArray","Array","_","connect","dispatch","props","react_default","createElement","className","classNames","bold","onClick","onWeekdayClick","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","Day","nextProps","nextState","formatDate","isCurrentWeek","this","isCurrentMonth","isCurrentWeekday","fill","isCurrentDay","getDay","d3","count","Date","getFullYear","getMonth","find","setHours","j","Math","interpolateColor","fillColor","isColorSaved","stroke","strokeWidth","width","height","rx","ry","y","ev","preventDefault","stopPropagation","data-tip","data-for","React","Component","Month","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","console","log","weeksInMonth","floor","offset","monthName","lastDay","firstDay","extraSpace","renderList","textAnchor","renderMonthOverview","calendar_Day","PureComponent","Year","target","size","months","range","monthsArr","memo","index","hidden","calendar_Month","Card","id","children","Section","title","Heatmap","addEventListener","onScreenResize","widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","react_tooltip_dist_default","multiline","class","DayLabel","_this$props","dataArr","selectedItem","unit","previousItem","nextItem","isAfter","pickDay","pickMonth","toString","pickWeekday","string","tabIndex","onKeyDown","XAxis","renderAxis","xAxis","xScale","ticks","tickFormat","refs","transition","transform","ref","fontSize","YAxis","yAxis","yScale","nrOfTicks","Bars","renderBars","current","bars","datum","plotData","selectAll","interrupt","attr","hoverIndex","darker","enter","append","classed","plotHeight","on","modalOpen","openModal","exit","remove","merge","select","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","text","invert","style","circleHoverIndex","domainX","domainY","plotWidth","_this2","_this$props2","margin","area","y0","top","bottom","y1","curve","valueline","x1","x2","y2","spreadMethod","stopColor","stopOpacity","opacity","pointerEvents","onMouseLeave","onMouseOver","onMouseMove","nativeEvent","offsetX","offsetY","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","left","right","updateScale","nice","currentWeekInsights","yDomain","ceil","midnight","domain","updatePlotSize","_this3","removeEventListener","ReactTooltip","rebuild","_this4","insights","_this$updateScale","_this$updatePlotSize","metaData","currentMonthInsights","monthOccurrences","monthObj","getCurrentMonthInsights","currentWeekdayInsights","showAreaChart","rgb","g","b","filteredColors","forEach","getAverageColor","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","barChartProps","paddingInner","paddingOuter","bar_chart_DayLabel","bar_chart_BarChart","uploadFile","file","name","bytes","round","pow","bytesToSize","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","isEmptyContainerVisible","setDatasetName","renderHeatmap","dataset","then","catch","err","widget_DragAndDrop","dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","bar_chart_Container","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c1b26b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","import moment from 'moment';\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx').utc()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return parseInt(m.startOf('hour').format('HH'));\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 1; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).isoWeekday(1);\n  const endDate = moment(selectedDay).isoWeekday(8);\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let weekObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).startOf('month');\n  const endDate = moment(selectedDay).endOf('month');\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n\n  return monthObj;\n};\n\nexport const getCurrentWeek = selectedDay => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = selectedDay => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = selectedDay => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  return {\n    daysArr: daysArr.concat(daysArr1),\n    length: daysArr.concat(daysArr1).length\n  }\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedMonth: null,\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay),\n        currentMonth: getCurrentMonth(selectedDay),\n        currentWeekdays: getCurrentWeekdays(selectedDay)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: [...new Set(state.colors.concat({\n            day: action.val.day,\n            value: action.val.value\n        }))]\n      });\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","const SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { setWeekdayInsights, setMonthInsights } from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = props => {\n  const onWeekdayClick = day => {\n    props.selectDay(null);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    const weekdayInsights = getWeekdayInsights(day, props.dayInsights, props.allDays);\n    props.setWeekdayInsights({\n      selectedWeekday: weekdayInsights.selectedWeekday,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      weekdayInsights: weekdayInsights.weekdayInsights\n    });\n    props.showBarChart(true);\n  };\n  return (\n    <div className='day-labels-container'>\n    {\n      weekArray.map(day =>\n        <text\n          key={day}\n          className={classNames('day-labels', {'bold': props.selectedWeekday === day})}\n          onClick={() => onWeekdayClick(day)}\n        >\n          {day}\n        </text>\n      )\n    }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    const isCurrentWeek = (nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentMonth = (nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentWeekday = (nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.fill !== nextProps.fill ||\n      isCurrentWeek ||\n      isCurrentMonth ||\n      isCurrentWeekday ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  componentDidUpdate() {\n    // d3.select('.day.fill')\n    //   .transition()\n    //   .duration(1000)\n  }\n\n  render() {\n    const props = this.props;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const month = props.month;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(props.data).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n    const isCurrentWeek = props.currentWeek && props.currentWeek.includes(moment(d).format('DD-MM-YYYY')) && props.showWeekOverview;\n    const isCurrentMonth = (props.currentMonth && props.currentMonth.includes(moment(d).format('DD-MM-YYYY')) && props.showMonthOverview) ||\n      (props.selectedMonth && props.selectedMonth === moment(d).format('M'));\n    const isCurrentWeekday = (props.currentWeekdays && props.currentWeekdays.daysArr.includes(moment(d).format('DD-MM-YYYY')) && props.showWeekdayOverview) ||\n      (props.selectedWeekday && props.selectedWeekday === moment(d).format('ddd'));\n\n    const item = Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    const interpolateColor = (isCurrentWeek || isCurrentMonth || isCurrentWeekday)\n      ? d3.interpolateOranges(value) : d3.interpolatePurples(value);\n    let fillColor = !!props.data[item] ? (isCurrentDay ? d3.interpolateOranges(value) : interpolateColor) : '#ececec';\n\n    const isColorSaved = this.props.colors.find(color => color.day === moment(d).format('DD-MM-YYYY'));\n    value && !!props.data[item] && !isColorSaved && props.saveColor({ day: moment(d).format('DD-MM-YYYY'), value: d3.color(d3.interpolateOranges(value)) });\n\n    const onDayClick = ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      props.selectDay({ day: d, color: d3.interpolateOranges(value) });\n      props.showBarChart(true);\n    };\n    return (\n      <rect\n        key={d}\n        className='day'\n        stroke={isCurrentDay ? '#000' : ''}\n        strokeWidth={isCurrentDay ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={onDayClick}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeekday: state.app.selectedWeekday,\n  selectedMonth: state.app.selectedMonth,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights } from '../../helpers/parser';\nimport {setMonthInsights, setWeekdayInsights} from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    const { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count+1 }));\n    } else {\n      console.log('now show day and month labels');\n    }\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const renderMonthOverview = month => {\n      props.selectDay(null);\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), props.dayInsights, props.allDays);\n      props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      props.showBarChart(true);\n    };\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className={classNames('month-name', {'bold': isCurrentMonth})}\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n            onClick={() => renderMonthOverview(monthName(month))}\n          >\n            { monthName(month) }\n          </text>\n          { renderList.map(d => <Day fill={isCurrentMonth || moment(d).format('ddd') === props.selectedWeekday} day={d} month={month} key={d} />) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper'>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\n\nconst Section = props =>\n  <section>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n          </div>\n          <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport {getMonthInsights, getWeekdayInsights} from '../../helpers/parser';\nimport * as d3 from 'd3';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  render() {\n    const { minDate, maxDate, selectDay, showBarChart, setMonthInsights, setWeekdayInsights,\n      selectedMonth, selectedDay, dayInsights, allDays, selectedWeekday, colors, currentWeekdays, dataArr } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay;\n    let unit = '';\n    if (selectedMonth) {\n      unit = 'months';\n    } else if (selectedWeekday) {\n      unit = 'weeks';\n    } else {\n      unit = 'days';\n    }\n    const previousItem = selectedMonth ? selectedMonth-1 : moment(selectedItem).subtract(1, unit);\n    const nextItem = selectedMonth ? parseInt(selectedMonth)+1 : moment(selectedItem).add(1, unit);\n    const showPreviousArrow = selectedMonth ? moment(previousItem, 'M').isAfter(minDate.startOf('year')) : previousItem.isAfter(minDate.startOf('year'));\n    const showNextArrow = selectedMonth ? true : nextItem.isBefore(maxDate.endOf('year'));\n    const pickDay = day => {\n      setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: [],\n        selectedMonth: null\n      });\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const color = colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n      const value = color && d3.color(color.value);\n      selectDay({ day, color: value });\n      showBarChart(true);\n    };\n    const pickMonth = month => {\n      selectDay(null);\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(month.toString(), dayInsights, allDays);\n      setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      showBarChart(true);\n    };\n    const pickWeekday = weekday => {\n      selectDay(null);\n      setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: [],\n        selectedMonth: null\n      });\n      const weekdayInsights = getWeekdayInsights(weekday, dayInsights, allDays, currentWeekdays, dataArr);\n      setWeekdayInsights({\n        weekdayInsights: weekdayInsights.weekdayInsights,\n        daysOfWeekday: weekdayInsights.daysOfWeekday,\n        selectedWeekday: weekdayInsights.selectedWeekday\n      });\n      showBarChart(true);\n    };\n    let string = '';\n    if (selectedMonth) {\n      string = moment(selectedMonth, 'M').format('MMMM');\n    } else if (selectedWeekday) {\n      string = `${moment(selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      string = moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}\n           onKeyDown={ev => {\n             if (ev) {\n               if (ev.key === 'ArrowLeft') {\n                 if (selectedDay) {\n                   pickDay(moment(selectedItem).add(-1, unit));\n                 } else if (selectedMonth) {\n                   pickMonth(parseInt(selectedItem) - 1);\n                 } else if (selectedWeekday) {\n                   const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n                   pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday - 1)).format('ddd'));\n                 }\n               }\n               if (ev.key === 'ArrowRight') {\n                 if (selectedDay) {\n                   pickDay(moment(selectedItem).add(1, unit));\n                 } else if (selectedMonth) {\n                   pickMonth(parseInt(selectedItem) + 1);\n                 } else if (selectedWeekday) {\n                   const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n                   pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + 1)).format('ddd'));\n                 }\n               }\n             }\n      }}>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => {\n            if (showPreviousArrow) {\n              if (selectedDay) {\n                pickDay(moment(selectedItem).add(-1, unit));\n              } else if (selectedMonth) {\n                pickMonth(parseInt(selectedItem) - 1);\n              } else if (selectedWeekday) {\n                const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n                pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday - 1)).format('ddd'));\n              }\n            }}\n          }\n        />\n        { string }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => {\n            if (showPreviousArrow) {\n              if (selectedDay) {\n                pickDay(moment(selectedItem).add(+1, unit));\n              } else if (selectedMonth) {\n                pickMonth(parseInt(selectedItem) + 1);\n              } else if (selectedWeekday) {\n                const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n                pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + 1)).format('ddd'));\n              }\n            }}\n          }\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dataArr: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale)\n      .ticks(24)\n      .tickFormat(d3.timeFormat('%H'));\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale).ticks(this.props.nrOfTicks).tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1,\n      modalOpen: null\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n    const openModal = d => {\n      this.setState({\n        modalOpen: d\n      });\n    };\n\n    current.interrupt();\n\n    const color = this.props.color; // || '#6595ec';\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('id', (d, i) => `bar-${i}`)\n      .on('mouseover', (d, i) => {console.log(`mouse over ${d} ${i}`); this.setState({ hoverIndex: i })})\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `Time - ${d.data}:00 <br> Occurrences - ${d.occurrences}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nexport default Bars;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1,\n      showTooltip: false,\n      domainX: null,\n      domainY: null\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { xScale, yScale, plotHeight, color } = this.props;\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const lines = document.getElementsByClassName('line');\n    let pos;\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        let beginning = 0,\n          end = lines && lines[i].getTotalLength(),\n          target = null;\n\n        while (end){\n          target = Math.floor((beginning + end) / 2);\n          pos = lines[i].getPointAtLength(target);\n          if ((target === end || target === beginning) && pos.x !== mouseX) {\n            break;\n          }\n          if (pos.x > mouseX)      end = target;\n          else if (pos.x < mouseX) beginning = target;\n          else break; //position found\n        }\n\n        d3.select(this).select('text')\n          .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n        const x = xScale.invert(pos.x);\n\n        // console.log(x);\n\n        const parseTime = d3.timeParse('%H');\n\n        d3.selectAll('.bar')\n          .style('cursor', 'pointer')\n          .attr('fill', (d, i) => {\n            // console.log(parseTime(d.data), x);\n            return parseTime(d.data) === x ? d3.rgb(color).darker() : color\n          });\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n  };\n\n  render() {\n    const { xScale, plotWidth, plotHeight, margin, yScale } = this.props;\n\n    const weekObj = this.props.weekInsights;\n\n    const parseTime = d3.timeParse('%H');\n\n    // define the area\n    const area = d3.area()\n      .x(d => xScale(parseTime(d)))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    const valueline = d3.line()\n      .x((d, i) => xScale(parseTime(i)))\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(weekObj))}\n        />\n        <path className='line shadow'\n              d={valueline(Object.keys(weekObj))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#000'\n            strokeWidth={1}\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              transform='translate(10,3)'\n              fontSize={14}\n              // fill='#777'\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => {\n              d3.select('.mouse-line')\n                .style('opacity', '0');\n              d3.selectAll('.mouse-per-line circle')\n                .style('opacity', '0');\n              d3.selectAll('.mouse-per-line text')\n                .style('opacity', '0');\n            }}\n            onMouseOver={() => {\n              d3.select('.mouse-line')\n                .style('opacity', '1');\n              d3.selectAll('.mouse-per-line circle')\n                .style('opacity', '1');\n              d3.selectAll('.mouse-per-line text')\n                .style('opacity', '1');\n            }}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  data: state.app.data\n});\n\n\nexport default connect(mapStateToProps)(AreaChart);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.onReset();\n  };\n\n  return (\n    <div className='footer year-label'>\n      <div className='checkboxes'>\n           <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n             Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n             Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n             Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n           </span>\n      </div>\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview\n} from '../../reducers/barChart';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\nimport {getAverageColor} from \"../../helpers/colors\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: document.getElementById('card').clientWidth - props.margin.left - props.margin.right\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    this.setState({\n      width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n    });\n  };\n\n  updateScale = (props, data) => {\n    const xScale = d3.scaleTime();\n    const newXScale = d3.scaleLinear();\n    const yScale = d3.scaleLinear().nice();\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n\n    const max = currentWeekInsights ?\n      Math.ceil(Math.max(d3.max(Object.values(currentWeekInsights)), d3.max(Object.values(data)))) :\n      d3.max(Object.values(data));\n\n    const yDomain = [0, max];\n\n    const parseTime = d3.timeParse('%H:%M');\n    const midnight = parseTime('00:00');\n\n    xScale\n      .domain([midnight, d3.timeDay.offset(midnight, 1)])\n      .range([0, this.state.width - props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([props.height - props.margin.top - props.margin.bottom, 0]);\n\n    return {xScale, yScale};\n  };\n\n  updatePlotSize = props => {\n    const plotWidth = this.state.width - (props.margin.left + props.margin.right);\n    const plotHeight = props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    let data = [];\n    if (!!this.props.monthInsights.length) {\n      data = this.props.daysOfMonth;\n    } else if (!!this.props.weekdayInsights.length) {\n      data = this.props.daysOfWeekday;\n    } else {\n      data = this.props.data;\n    }\n    const { xScale, yScale } =  this.updateScale(this.props, data);\n    const { plotWidth, plotHeight } = this.updatePlotSize(this.props);\n\n    const max = d3.max(Object.values(data));\n    const nrOfTicks = max < 10 ? max : (max > 20 ? max / 4 : max / 2);\n\n    const parseTime = d3.timeParse('%H');\n\n    const metaData = {\n      xScale,\n      yScale,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentMonthInsights = this.props.isMonthOverviewChecked && getCurrentMonthInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentWeekdayInsights = this.props.isWeekdayOverviewChecked && getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.dataArr);\n\n    let insights;\n    if (this.props.isWeekOverviewChecked) {\n      insights = currentWeekInsights;\n    }\n    if (this.props.isMonthOverviewChecked) {\n      insights = currentMonthInsights;\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      insights = currentWeekdayInsights.weekdayObj;\n    }\n\n    const showAreaChart = this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked;\n\n    const color = this.props.color || getAverageColor(this.props.selectedMonth, this.props.selectedWeekday, this.props.colors);\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight-50})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} color={color} />\n            {\n              showAreaChart &&\n              <AreaChart\n                xScale={xScale}\n                yScale={yScale}\n                plotWidth={plotWidth}\n                plotHeight={plotHeight}\n                margin={this.props.margin}\n                weekInsights={insights}\n                occurrences={data}\n                transform={transform}\n                color={color}\n              />\n            }\n          </g>\n        </svg>\n        <Footer />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dataArr: state.app.data,\n  allDays: state.app.allDays,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\nexport const getAverageColor = (selectedMonth, selectedWeekday, colors) => {\n  let rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  const filteredColors = selectedMonth\n    ? colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('M') === selectedMonth)\n    : colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('ddd') === selectedWeekday);\n\n  filteredColors.forEach(color => {\n    rgb.r += color.value.r;\n    rgb.g += color.value.g;\n    rgb.b += color.value.b;\n  });\n\n  return d3.rgb(rgb.r / filteredColors.length, rgb.g / filteredColors.length, rgb.b / filteredColors.length);\n};\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[props.selectedDay] ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    data: props.data,\n    margin: props.margin,\n    height: props.height,\n    paddingInner: props.paddingInner,\n    paddingOuter: props.paddingOuter\n  };\n\n  return (\n    <Section title='Day overview'>\n      <Card>\n        <DayLabel selectedDay={props.selectedDay} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Section from '../widget/Section';\n\nimport { setData, uploadFile } from '../../reducers/app';\nimport { showCalendar } from '../../reducers/calendar';\n\nconst DragAndDrop = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  return (\n    <Section title='Upload file'>\n      <Dropzone\n        accept='text/csv'\n        onDrop={onDrop}\n      >\n        {({getRootProps, getInputProps, isDragActive}) => {\n          return (\n            <div\n              {...getRootProps()}\n              className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n            >\n              <input {...getInputProps()} />\n              {\n                !!files.length\n                  ? <span className='file-name'>\n                            <i className='fa fa-remove' />\n                    {files}\n                          </span>\n                  : <span className='upload-message'>\n                            <i className='fa fa-upload' />\n                              Drag & Drop your file or <u>Browse</u>\n                          </span>\n              }\n            </div>\n          )\n        }}\n      </Dropzone>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  showCalendar: val => dispatch(showCalendar(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDrop);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekdayInsights } from '../reducers/app';\nimport { showCalendar, selectDay, saveColor } from '../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../reducers/barChart';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport DragAndDrop from './widget/DragAndDrop';\nimport Section from './widget/Section';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd_filtered.csv';\nimport dataset4 from '../data/data.csv';\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n    props.saveColor([]);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = true;\n\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      data={props.allDays[props.selectedDay]}\n      margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n      height={300}\n      paddingInner={0.2}\n      paddingOuter={0.1}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        { showDropzone && <DragAndDrop /> }\n        <Section title='Select dataset'>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </Section>\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible && renderBarChart() }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}