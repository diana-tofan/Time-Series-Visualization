{"version":3,"sources":["helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/Bars.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/AreaChart.js","components/bar-chart/BarChart.js","components/App.js","serviceWorker.js","index.js","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd.csv","data/data.csv"],"names":["parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","reduce","r","a","push","parseDayInsights","dayInsights","Object","keys","acc","days","roundedHours","hour","m","minute","second","millisecond","parseInt","add","startOf","occurrences","obj","d3","values","i","parseData","x","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","allDays","showTooltip","isSpinnerVisible","isEmptyContainerVisible","showSpinner","val","type","showEmptyContainer","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","isRadialChartVisible","selectedDay","isBarChartVisible","showBarChart","selectDay","rootReducer","combineReducers","app","state","arguments","length","undefined","action","moments","d","objectSpread","min","max","calendar","radialChart","barChart","weekArray","Array","apply","_","isoWeekday","DayLabels","react_default","createElement","className","day","key","connect","dispatch","changeYear","props","previousYear","subtract","nextYear","showPreviousArrow","showNextArrow","classNames","disabled","onClick","Day","renderDots","nextProps","nextState","formatDate","this","isCurrentDay","getDay","week","month","count","Date","getFullYear","getMonth","find","setHours","filter","j","value","Math","toConsumableArray","fillColor","fill","width","height","rx","ry","y","ev","preventDefault","stopPropagation","formattedDay","data-tip","data-for","React","Component","Month","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","weeksInMonth","floor","offset","monthName","lastDay","endOf","firstDay","extraSpace","renderList","textAnchor","calendar_Day","PureComponent","Year","target","size","months","range","monthsArr","memo","index","hidden","calendar_Month","Card","id","children","Heatmap","components_widget_Card","calendar_DayLabels","calendar_YearLabel","calendar_Year","react_tooltip_dist_default","multiline","class","DayLabel","_this$props","previousDay","nextDay","isAfter","isBefore","tabIndex","onKeyDown","Bars","renderBars","current","refs","bars","datum","plotData","selectAll","interrupt","transition","attr","enter","append","classed","plotHeight","on","hoverIndex","exit","remove","merge","select","duration","ref","XAxis","renderAxis","xAxis","xScale","transform","fontSize","YAxis","yAxis","yScale","ticks","nrOfTicks","tickFormat","AreaChart","circleHoverIndex","_this2","margin","startDate","endDate","toDate","clone","formattedDays","weekInsights","includes","weekOccurrences","weekObj","Number","toFixed","area","y0","top","bottom","y1","curve","valueline","is","x1","x2","y2","spreadMethod","stopColor","stopOpacity","cx","cy","data-key","data-value","onMouseOver","onMouseLeave","BarChart","updateScale","nice","xDomain","yDomain","domain","right","paddingInner","paddingOuter","updatePlotSize","plotWidth","left","isChecked","document","getElementById","clientWidth","addEventListener","resize","bind","assertThisInitialized","t","event","clearTimeout","setTimeout","assign","ReactTooltip","rebuild","_this3","onCheckboxChange","_this$updateScale","_this$updatePlotSize","metaData","bandwidth","bar_chart_DayLabel","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bold","checked","defaultChecked","onChange","uploadFile","showCalendar","setData","setDatasetName","file","name","bytes","log","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","components_bar_chart_BarChart","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2f1d9f7e.chunk.js","sourcesContent":["import moment from 'moment';\nimport * as d3 from \"d3\";\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    // debugger\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    const max = d3.max(Object.values(occurrences));\n    const nrOfTicks = max < 10 ? max : max / 2;\n    let obj = {};\n    for (let i = 1; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    // acc.push(occurrences);\n    return acc;\n  }, {});\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SHOW_EMPTY_CONTAINER = 'SHOW_EMPTY_CONTAINER';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false,\n  isEmptyContainerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SHOW_EMPTY_CONTAINER:\n      return {\n        ...state,\n        isEmptyContainerVisible: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const showEmptyContainer = val => ({ type: SHOW_EMPTY_CONTAINER, val });\n","const SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","const SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isBarChartVisible: false,\n  selectedDay: null,\n  dayInsights: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport moment from 'moment';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = () =>\n  <div className='dayLabelsContainer'>\n    <span>\n      {\n        weekArray.map(day =>\n          <text\n            key={day}\n            className='dayLabels'\n          >\n            {day}\n          </text>\n        )\n      }\n    </span>\n  </div>;\n\nexport default DayLabels;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='yearLabel'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport { showEmptyContainer } from '../../reducers/app';\nimport { selectDay, showBarChart } from '../../reducers/barChart';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay);\n  }\n\n  componentDidUpdate() {\n    this.renderDots();\n  }\n\n  renderDots = () => {\n    // let dots = d3.selectAll('.day')\n    //   .data(this.props.day, d => d);\n    //\n    // dots\n    //   .transition()\n    //   .duration(100)\n    //   .ease('ease-in')\n    //   .style('opacity', 1);\n    //\n    // dots.enter().append('rect')\n    //   .attr('class', 'day')\n    //   .attr('r', function(d) { return r(d.r); })\n    //   .attr('cx', function(d) { return x(d.x); })\n    //   .attr('cy', 0)\n    //   .style('stroke', '#3E6E9C')\n    //   .transition().duration(1000)\n    //   .attr('cy', function(d) { return y(d.y); })\n    //   .style('stroke', '#81E797');\n    //\n    // item.exit().filter(':not(.exiting)') // Don't select already exiting nodes\n    //   .classed('exiting', true)\n    //   .transition().duration(1000)\n    //   .attr('cy', height)\n    //   .style('stroke', '#3E6E9C')\n    //   .remove();\n  };\n\n  render() {\n    const props = this.props;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const month = props.month;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(props.data).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n    const item = Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    const fillColor = !!props.data[item] ? d3.interpolatePurples(value) : '#ececec';\n\n    const onDayClick = ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      props.selectDay(d);\n      const formattedDay = moment(d).format('YYYY-MM-DD');\n      if (!!props.dayInsights[formattedDay]) {\n        props.showEmptyContainer(false);\n        props.showBarChart(true);\n      } else {\n        props.showBarChart(false);\n        props.showEmptyContainer(true);\n      }\n    };\n    return (\n      <rect\n        key={d}\n        className={classNames('day', {'fill': isCurrentDay})}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={onDayClick}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.barChart.selectedDay,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showEmptyContainer: val => dispatch(showEmptyContainer(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    const { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count+1 }));\n    }\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className='month-name'\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n          >\n            { monthName(month) }\n          </text>\n          { renderList.map(d => <Day day={d} month={month} key={d} />) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nexport default connect(mapStateToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD'); // new Date(2016, 0, 1);\n    const maxDate = props.maxDate.format('YYYY-MM-DD'); // new Date(2020, 11, 31);\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    return (\n      <div>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\n\nclass Heatmap extends React.PureComponent {\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Card>\n        <DayLabels />\n        <YearLabel />\n        <div className='months'>\n          <Year />\n        </div>\n        <ReactTooltip id='svgTooltip' multiline class='tooltipx'/>\n      </Card>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { selectDay } from '../../reducers/barChart';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay;\n  }\n\n  render() {\n    const { selectedDay, minDate, maxDate, selectDay } = this.props;\n    const previousDay = moment(selectedDay).subtract(1, 'days');\n    const nextDay = moment(selectedDay).add(1, 'days');\n    const showPreviousArrow = previousDay.isAfter(minDate.startOf('year'));\n    const showNextArrow = nextDay.isBefore(maxDate.endOf('year'));\n\n    return (\n      <div className='yearLabel dayTitle'\n           tabIndex={0}\n           onKeyDown={ev => {\n             if (ev) {\n               if (ev.key === 'ArrowLeft') {\n                 selectDay(moment(selectedDay).add(-1, 'days'));\n               }\n               if (ev.key === 'ArrowRight') {\n                 selectDay(moment(selectedDay).add(1, 'days'));\n               }\n             }\n      }}>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => {showPreviousArrow && selectDay(moment(selectedDay).add(-1, 'days'))}}\n        />\n        { moment(selectedDay).format('dddd, MMMM DD YYYY') }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showNextArrow && selectDay(moment(selectedDay).add(1, 'days'))}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.barChart.selectedDay\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n\n    current.interrupt();\n\n    current.transition()\n      .attr('fill', '#6595ec');\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter.attr('fill', '#6595ec');\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', '#6595ec')\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `Time - ${d.data}:00 <br> Occurrences - ${d.occurrences}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nexport default Bars;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale);\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={`translate(0,${this.props.plotHeight - 50})`}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale).ticks(this.props.nrOfTicks).tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1\n    }\n  }\n\n  componentDidUpdate() {\n    // let line = d3.selectAll('.line');\n    // if (line.node()) {\n    //   const totalLength = line.node().getTotalLength();\n    //   line\n    //     .attr('stroke-dasharray', totalLength)\n    //     .attr('stroke-dashoffset', totalLength)\n    //     .attr('stroke-width', 6)\n    //     .attr('stroke', '#7888BF')\n    //     .transition()\n    //     .delay(1000)\n    //     .duration(1000)\n    //     .attr('stroke-width', 0)\n    //     .attr('stroke-dashoffset', 0);\n    // }\n    // let area = d3.selectAll('.area');\n    // area\n    //   .attr('transform', 'translate(0,300)')\n    //   .transition()\n    //   .delay(1000)\n    //   .duration(1000)\n    //   .attr('transform', 'translate(0,0)');\n    // let dots = d3.selectAll('.dot');\n    // dots\n    //   .attr('transform', 'translate(0,300)')\n    //   .transition()\n    //   .delay(2000)\n    //   .duration(1000)\n    //   .attr('transform', 'translate(0,0)')\n  }\n\n  render() {\n    const { xScale, plotHeight, margin, yScale, selectedDay, occurrences, dayInsights, data } = this.props;\n\n    const startDate = moment(selectedDay).isoWeekday(1);\n    const endDate = moment(selectedDay).isoWeekday(8);\n    let days = [];\n    let day = startDate;\n    while (day.isBefore(endDate)) {\n      days.push(day.toDate());\n      day = day.clone().add(1, 'd');\n    }\n    const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n    const weekArray = Object.keys(data).filter(key => formattedDays.includes(key));\n    let weekInsights = weekArray.reduce((acc, item) => {\n      acc.push({ day: item, occurrences: dayInsights[item] });\n      return acc;\n    }, []);\n    weekInsights = weekInsights.map(week =>\n      week.occurrences.map(item => {\n        const m = moment(`${week.day} ${item}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      })\n    );\n\n    const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n\n    let weekObj = {};\n    for (let i = 1; i <= 24; i++) {\n      weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i]/7).toFixed(2) : 0\n    }\n\n    // define the area\n    const area = d3.area()\n      .x(d => xScale(d)+25)\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveCardinal);\n\n    const valueline = d3.line()\n      .x(d => xScale(d)+25)\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveCardinal);\n\n    return (\n      <svg className='areaChart'>\n        <defs>\n          <linearGradient id=\"grad\" is x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\" spreadMethod=\"pad\">\n            <stop offset=\"10%\" stopColor=\"#fff\" stopOpacity={.4}/>\n            <stop offset=\"80%\" stopColor=\"#7888BF\" stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className=\"area\"\n              fill=\"url(#grad)\"\n              d={area(Object.keys(weekObj))}\n        />\n        <path className=\"line shadow\"\n              d={valueline(Object.keys(weekObj))}\n        />\n        {\n          Object.keys(weekObj).map((item, i) =>\n            !!weekObj[item] &&\n            <circle className='dot'\n                    key={i}\n                    r={5}\n                    cx={xScale(item)+25}\n                    cy={yScale(weekObj[item])}\n                    data-key={item}\n                    data-value={weekObj[item]}\n                    data-tip={`${startDate.format('MMM DD')}-${endDate.format('MMM DD')} (Week ${startDate.week()})<br>Average observations at ${item}:00 --> ${weekObj[item]}`}\n                    fill={`${i === this.state.circleHoverIndex ? \"#7888BF\" : \"#fff\"}`}\n                    onMouseOver={() => this.setState({ circleHoverIndex: i })}\n                    onMouseLeave={() => this.setState({ circleHoverIndex: -1 })}\n                    data-for='rectTooltip'\n            />\n          )\n        }\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  data: state.app.data\n});\n\n\nexport default connect(mapStateToProps)(AreaChart);\n","import React from 'react';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\n\nimport Card from '../widget/Card';\n\nimport DayLabel from './DayLabel';\nimport Bars from './Bars';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport AreaChart from './AreaChart';\n\nimport './BarChart.scss';\nimport {selectDay} from \"../../reducers/barChart\";\n\nclass BarChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      circleHoverIndex: -1,\n      isChecked: false,\n      width: document.getElementById('card').clientWidth - props.margin.left - props.margin.right\n    };\n    window.addEventListener('resize', this.resize().bind(this));\n  }\n\n  resize() {\n    let t;\n\n    return event => {\n      if (t !== false) {\n        clearTimeout(t);\n      }\n      t = setTimeout(() => {\n        const state = Object.assign(this.state, {\n          width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n        });\n        this.setState(state);\n      }, 100);\n    };\n  }\n\n  updateScale = props => {\n    const data = props.data;\n\n    const xScale = d3.scaleBand();\n    const yScale = d3.scaleLinear().nice();\n\n    const xDomain = [...Array(24).keys()];\n    const yDomain = [0, d3.max(Object.values(data))];\n\n    xScale\n      .domain(xDomain)\n      .range([0, this.state.width - props.margin.right])\n      .paddingInner(props.paddingInner)\n      .paddingOuter(props.paddingOuter);\n\n    yScale\n      .domain(yDomain)\n      .range([props.height - props.margin.top - props.margin.bottom, 0]);\n\n    return {xScale, yScale};\n  };\n\n  updatePlotSize = props => {\n    const plotWidth = this.state.width - (props.margin.left + props.margin.right);\n    const plotHeight = props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const onCheckboxChange = () => {\n      this.setState({\n        isChecked: !this.state.isChecked\n      })\n    };\n\n    const { xScale, yScale } =  this.updateScale(this.props);\n    const { plotWidth, plotHeight } = this.updatePlotSize(this.props);\n\n    const max = d3.max(Object.values(this.props.data));\n    const nrOfTicks = max < 10 ? max : max / 2;\n\n    const metaData = {\n      xScale,\n      yScale,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(this.props.data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(item),\n        y: yScale(this.props.data[item]),\n        width: xScale.bandwidth(),\n        height: plotHeight - yScale(this.props.data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: this.props.data[item]\n      }))\n    };\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n    return (\n      <Card>\n        <DayLabel selectedDay={this.props.selectedDay} />\n        <div className='barChart'>\n          <svg width='100%' height={this.props.height} ref='barChart'>\n            <g transform={transform} width={plotWidth} height={plotHeight}>\n              <XAxis {...metaData} transform={`translate(0,${plotHeight})`}/>\n              <YAxis {...metaData} />\n              <Bars {...metaData} {...plotData} />\n              {\n                this.state.isChecked &&\n                <AreaChart\n                  xScale={xScale}\n                  yScale={yScale}\n                  plotHeight={plotHeight}\n                  margin={this.props.margin}\n                  selectedDay={this.props.selectedDay}\n                  occurrences={this.props.data}\n                  transform={transform}\n                />\n              }\n            </g>\n          </svg>\n          <ReactTooltip id='rectTooltip' multiline class='tooltipx'/>\n        </div>\n        <div className='footer yearLabel'>\n         <span className={classNames('checkbox', {'bold': this.state.isChecked})} onClick={onCheckboxChange}>\n           Show week overview <input type='checkbox' checked={this.state.isChecked} defaultChecked={false} onChange={onCheckboxChange} />\n         </span>\n        </div>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD')\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, uploadFile, setDatasetName, showSpinner, showEmptyContainer } from '../reducers/app';\nimport { showCalendar } from '../reducers/calendar';\nimport { showBarChart } from '../reducers/barChart';\n\nimport { parseDayInsights } from '../helpers/parser';\n\nimport Heatmap from './calendar/Heatmap';\nimport BarChart from './bar-chart/BarChart';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd.csv';\nimport dataset4 from '../data/data.csv';\n\nimport { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showEmptyContainer(false);\n    props.showCalendar(false);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = false;\n\n  // whyDidYouUpdate(React);\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        {\n          showDropzone &&\n          <section>\n          <p>Upload file</p>\n          <Dropzone\n            accept='text/csv'\n            onDrop={onDrop}\n          >\n            {({getRootProps, getInputProps, isDragActive}) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n                >\n                  <input {...getInputProps()} />\n                  {\n                    !!files.length\n                      ? <span className='file-name'>\n                          <i className=\"fa fa-remove\" />\n                        {files}\n                        </span>\n                      : <span className='upload-message'>\n                          <i className=\"fa fa-upload\" />\n                            Drag & Drop your file or <u>Browse</u>\n                        </span>\n                  }\n                </div>\n              )\n            }}\n          </Dropzone>\n        </section>\n        }\n        <section>\n          <p>Select dataset</p>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </section>\n        {\n          props.isCalendarVisible &&\n          <section>\n            <p>Calendar heatmap</p>\n            <Heatmap />\n          </section>\n        }\n        {\n          props.isBarChartVisible &&\n          <section>\n            <p>Day overview</p>\n            <BarChart\n              data={props.allDays[props.selectedDay]}\n              margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n              height={300}\n              paddingInner={0.2}\n              paddingOuter={0.1}\n            />\n          </section>\n        }\n        {\n          props.isEmptyContainerVisible &&\n          <section>\n            <p>Day overview</p>\n            <div className='container'>\n              <div className='dayLabel'>\n                { moment(props.selectedDay).format('dddd, MMMM DD YYYY') }\n              </div>\n              <div className='emptyString'>No data recorded</div>\n            </div>\n          </section>\n        }\n        {\n          props.isSpinnerVisible &&\n          <div className='spinner'>\n            <div className=\"double-bounce1\" />\n            <div className=\"double-bounce2\" />\n          </div>\n        }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD'),\n  files: state.app.files,\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showEmptyContainer: val => dispatch(showEmptyContainer(val)),\n  showSpinner: val => dispatch(showSpinner(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.9f78b97e.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd.553964c1.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";"],"sourceRoot":""}