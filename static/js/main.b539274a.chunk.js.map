{"version":3,"sources":["icons/github-logo.svg","icons/pdf-logo.svg","icons/clock.svg","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv","icons/github-logo-hover.svg","icons/pdf-logo-hover.svg","components/calendar/Heatmap.js","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","helpers/colors.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","helpers/navigator.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/widget/Modal.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","components/bar-chart/Container.js","components/radial-chart/RadialChart.js","components/radial-chart/RadialChartContainer.js","components/widget/Upload.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","x1","x2","y1","y2","parseTime","timeStamp","offset","timeString","split","slice","value","moment","utc","concat","utcOffset","format","parseDate","countOccurrences","arr","reduce","obj","item","getDayInsights","data","newData","map","date","columns","time","unshift","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekInsights","week","weekInsights","isoWeekday","toString","allDaysOfWeek","isoWeek","selectedWeek","daysOfWeek","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","getShiftSelectionInsights","shiftSelection","shiftInsights","indexOf","allSelectedDays","selectedDaysObj","selectedDays","selectedDaysInsights","parseDayInsights","days","roundedHours","hour","m","parseInt","startOf","occurrences","getCurrentWeekInsights","selectedDay","Array","from","x","add","includes","weekOccurrences","apply","weekObj","getCurrentMonthInsights","daysInMonth","monthOccurrences","monthObj","contains","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","clone","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","array","toConsumableArray","Set","getExactTimes","selectedHour","exactTimes","parseData","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","showSpinner","type","setMonthInsights","setWeekInsights","setWeekdayInsights","onShiftClick","resetShiftSelection","removeItem","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","selectDay","saveColor","isRadialChartVisible","highlightedWeekday","highlightDay","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","modalData","timeArray","showBarChart","openModal","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","radialChart","barChart","DayLabels","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onWeekdayClick","ev","shiftKey","setState","toggle","_this2","weekArray","_","react_default","createElement","className","classNames","bold","onClick","React","Component","connect","dispatch","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","getAverageColor","rgb","g","b","filteredColors","insertMissingColors","daysArray","forEach","find","d3","getColors","oranges","year","arrDays","_loop","current","getDaysArrayByMonth","showOverview","getAdjacentDayColor","purples","purplePalette","orangePalette","range","domain","Day","isEqual","nextProps","isCurrentWeek","isCurrentMonth","isCurrentWeekday","onDayClick","console","log","refs","getBoundingClientRect","stopPropagation","formattedDay","previousDay","nextDay","isColorSaved","isPreviousColorSaved","isNextColorSaved","nextState","formatDate","fill","_this$props","isCurrentDay","getDay","Date","setHours","isSelected","interpolateColor","count","fillColor","getDayColor","showStroke","data-tip","data-for","ref","stroke","strokeWidth","width","height","rx","ry","y","getFullYear","getMonth","Month","brushEnd","selection","_d3$event$selection","slicedToArray","showMoreData","requestAnimationFrame","getWeeksInMonth","floor","getChunk","target","size","memo","index","renderMonthOverview","renderWeekOverview","renderDays","renderList","calendar_Day","getWeekIndices","firstDayOfMonth","lastDayOfMonth","weekIndices","currentDay","pop","renderWeekLabels","nrOfWeeks","offsets","textAnchor","brush","on","ReactTooltip","rebuild","monthName","lastDay","firstDay","extraSpace","endReached","PureComponent","Year","months","monthsArr","hidden","calendar_Month","dist_default","id","multiline","class","Card","onKeyDown","tabIndex","children","Section","title","select","selectedItem","unit","getUnit","pickDay","pickWeek","pickMonth","pickWeekday","Heatmap","selectAll","recalc","div","x3","Math","x4","y3","y4","style","left","top","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","addEventListener","onScreenResize","components_widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","DayLabel","getString","showArrows","previousItem","nextItem","prev","next","previous","isSameOrAfter","isSameOrBefore","XAxis","renderAxis","xAxis","xScale","ticks","tickFormat","transition","transform","fontSize","YAxis","yAxis","yScale","nrOfTicks","append","attr","margin","text","Bars","renderBars","bars","datum","plotData","interrupt","hoverIndex","darker","enter","classed","plotHeight","exit","remove","merge","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","xScaleArea","getPosition","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","formatTime","invert","hide","openModalBox","setLineOpacity","plotWidth","_this$props2","insights","area","y0","bottom","curve","spreadMethod","stopColor","stopOpacity","strokeDasharray","opacity","pointerEvents","onMouseLeave","onMouseOver","nativeEvent","offsetX","offsetY","Modal","handleKeyUp","preventDefault","hideModal","convertRange","r1","r2","removeEventListener","display-block","display-none","src","clock","alt","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","showFooter","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","right","getData","getInsights","showAreaChart","updateScale","nice","ceil","yDomain","midnight","halfPastMidnight","updatePlotSize","_this3","_this4","_this$updateScale","_this$updatePlotSize","metaData","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","components_widget_Modal","barChartProps","bar_chart_DayLabel","bar_chart_BarChart","RadialChart","normalize","getPercentage","renderArcs","svg","sort","defaultValue","label","arcs","innerRadius","arcSize","outerRadius","arcsGrey","pieData","arc","object","pie","gText","j","attrTween","startAngle","endAngle","t","each","labelObj","centroidText","centroid","visible","components_radial_chart_RadialChart","getDatasetOverview","uploadFile","setData","setDatasetName","showCalendar","resetColors","file","name","bytes","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","react_dropdown_dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","href","rel","githubLogo","currentTarget","githubLogoHover","pdfLogo","pdfLogoHover","widget_Upload","calendar_Heatmap","bar_chart_Container","radial_chart_RadialChartContainer","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b539274a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.7338f8ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo.eb8752b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.d668b059.svg\";","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.4437b604.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","module.exports = __webpack_public_path__ + \"static/media/github-logo-hover.b2035e53.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo-hover.eebd97c5.svg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport {\n  onShiftClick,\n  showSpinner,\n  resetShiftSelection,\n  setWeekInsights,\n  setMonthInsights,\n  setWeekdayInsights\n} from '../../reducers/app';\nimport {onScreenResize, saveColor, selectDay} from '../../reducers/calendar';\nimport {select} from \"../../helpers/navigator\";\nimport {showBarChart} from \"../../reducers/barChart\";\n\nlet x1, x2, y1, y2;\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n    this.state = {\n      selection: true\n    }\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n    // this.brush = d3.brush()\n    //   .extent([[0, 0], [600, 600]])\n    //   .on('start', this.brushStart)\n    //   .on('end', this.brushEnd);\n    // d3.select(this.refs.brush).call(this.brush);\n  }\n\n  // brushStart = () => {\n  //   const s = d3.event.selection,\n  //     x0 = s[0][0],\n  //     y0 = s[0][1],\n  //     dx = s[1][0] - x0,\n  //     dy = s[1][1] - y0,\n  //     max = 0;\n  //\n  //   if (dx && dy) {\n  //    console.log(dx, dy);\n  //   }\n  // };\n  //\n  // brushEnd = () => {\n  //   if (!d3.event.selection) {\n  //     return;\n  //   }\n  //   const [x1, x2] = d3.event.selection;\n  //\n  //   console.log(x1, x2);\n  // };\n\n  selectAll = ev => {\n    if (ev.key === 'A' && ev.shiftKey) {\n      this.state.selection ? this.props.onShiftClick('all') : this.props.resetShiftSelection();\n      this.setState({\n        selection: !this.state.selection\n      })\n    }\n    if (ev.key === 'ArrowLeft') {\n      select(-1, this.props);\n    }\n    if (ev.key === 'ArrowRight') {\n      select(1, this.props);\n    }\n  };\n\n  recalc = () => {\n    const div = this.refs.div;\n    const x3 = Math.min(x1, x2);\n    const x4 = Math.max(x1, x2);\n    const y3 = Math.min(y1, y2);\n    const y4 = Math.max(y1, y2);\n    div.style.left = x3 + 'px';\n    div.style.top = y3 + 'px';\n    div.style.width = x4 - x3 + 'px';\n    div.style.height = y4 - y3 + 'px';\n  };\n\n  onMouseDown = ev => {\n    const div = this.refs.div;\n    div.hidden = 0;\n    x1 = ev.clientX;\n    y1 = ev.clientY;\n    this.recalc();\n  };\n\n  onMouseMove = ev => {\n    x2 = ev.clientX;\n    y2 = ev.clientY;\n    this.recalc();\n  };\n\n  onMouseUp = () => {\n    const div = this.refs.div;\n    div.hidden = 1;\n  };\n\n  //  onMouseDown={ev => this.onMouseDown(ev)} onMouseMove={ev => this.onMouseMove(ev)} onMouseUp={this.onMouseUp}\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card tabIndex={0} onKeyDown={ev => this.selectAll(ev)}>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n            <div id='div' ref='div' hidden />\n          </div>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Heatmap);\n","import moment from 'moment';\n\nconst parseTime = (timeStamp, offset) => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  const value = offset || (timeStamp.split(';')[1]).split(';')[0];\n  return moment.utc(`${timeString}`, 'HH:mm:ss').utcOffset(value).format('HH:mm:ss');\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  newData.unshift({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]], item[data.columns[1]]) }));\n  newData.unshift({ date: parseDate(data.columns[0]), time: parseTime(data.columns[0], data.columns[1]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekInsights = (week, dayInsights, allDays) => {\n  const weekInsights = Object.keys(dayInsights)\n    .filter(key => {\n      return moment(key).isoWeekday(1).format('w') === week.toString()\n    })\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekInsights).reduce((acc, key) => {\n    acc.push(weekInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfWeek = Object.keys(allDays)\n    .filter(key => moment(key).isoWeek() === week)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfWeek).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedWeek: week,\n    daysOfWeek: mergedDays,\n    weekInsights: mergedData.flat()\n  };\n};\n\nexport const getDatasetOverview = (allDays, data, dayInsights) => {\n  const length = Object.keys(data).length;\n  const weekdayInsights = Object.keys(dayInsights)\n    .reduce((obj, key) => {\n      const weekday = moment(key, 'YYYY-MM-DD').format('ddd');\n      obj[weekday] = obj[weekday] || [];\n      obj[weekday].push(dayInsights[key]);\n      return obj;\n    }, {});\n  return Object.keys(weekdayInsights)\n    .reduce((obj, key) => {\n      obj[key] = Number(weekdayInsights[key].flat().length / length).toFixed(2);\n      return obj;\n    }, {});\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const getShiftSelectionInsights = (shiftSelection, data, dayInsights, allDays) => {\n  const shiftInsights = Object.keys(dayInsights)\n    .filter(key => shiftSelection.indexOf(moment(key).format('MMMM')) > -1 ||\n      shiftSelection.indexOf(moment(key).isoWeek()) > -1 ||\n      shiftSelection.indexOf(moment(key).format('ddd')) > -1 ||\n      shiftSelection.indexOf(key) > -1 ||\n      shiftSelection.indexOf('all') > -1)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n\n  const mergedData = Object.keys(shiftInsights).reduce((acc, key) => {\n    acc.push(shiftInsights[key]);\n    return acc;\n  }, []);\n\n  const allSelectedDays = Object.keys(allDays)\n    .filter(key => shiftSelection.indexOf(moment(key).format('MMMM')) > -1 ||\n      shiftSelection.indexOf(moment(key).isoWeek()) > -1 ||\n      shiftSelection.indexOf(moment(key).format('ddd')) > -1 ||\n      shiftSelection.indexOf(key) > -1 ||\n      shiftSelection.indexOf('all') > -1)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n\n  const mergedDays = Object.values(allSelectedDays).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  let selectedDaysObj = {};\n  for (let i = 0; i < 24; i++) {\n    selectedDaysObj[i] = mergedDays[i] ? Number(mergedDays[i] / shiftSelection.length).toFixed(2) : 0\n  }\n\n  return {\n    shiftSelection,\n    selectedDays: mergedDays,\n    selectedDaysInsights: mergedData.flat(),\n    selectedDaysObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return parseInt(m.startOf('hour').format('HH'));\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 0; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: 7}, (x, i) => moment(selectedDay).startOf('isoWeek').add(i, 'days').format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => days.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let weekObj = {};\n\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: moment(selectedDay).daysInMonth()}, (x, i) => moment(selectedDay).startOf('isoMonth').add(i, 'days').format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => days.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n  return monthObj;\n};\n\n\nconst contains = (item, arr) => {\n  let i = arr.length;\n  while (i--) {\n    if (arr[i] === item) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getCurrentWeek = (selectedDay, data) => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = (selectedDay, data) => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = (selectedDay, data) => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    contains(moment(dayItem1).format('YYYY-MM-DD'), Object.keys(data)) && daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  const array = [...new Set(daysArr.concat(daysArr1))];\n\n  return {\n    daysArr: array,\n    length: array.length\n  }\n};\n\nexport const getExactTimes = (selectedHour, arr) => {\n  const exactTimes = arr.filter(i => moment(i, 'HH:mm:ss').format('HH') === moment(selectedHour.data, 'H').format('HH'));\n  return countOccurrences(exactTimes.map(i => moment(i, 'HH:mm:ss').format('HH:mm')));\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_WEEK_INSIGHTS = 'SET_WEEK_INSIGHTS';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\nconst ON_SHIFT_CLICK = 'ON_SHIFT_CLICK';\nconst REMOVE_ITEM = 'REMOVE_ITEM';\nconst RESET_SHIFT_SELECTION = 'RESET_SHIFT_SELECTION';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  weekInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedWeek: null,\n  selectedMonth: null,\n  shiftSelection: [],\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  daysOfWeek: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    case SET_WEEK_INSIGHTS:\n      return {\n        ...state,\n        weekInsights: action.val.weekInsights,\n        daysOfWeek: action.val.daysOfWeek,\n        selectedWeek: action.val.selectedWeek\n      };\n    case ON_SHIFT_CLICK:\n      return {\n        ...state,\n        shiftSelection: [...new Set(state.shiftSelection.concat(action.val))]\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        shiftSelection: state.shiftSelection.filter(item => item !== action.val)\n      };\n    case RESET_SHIFT_SELECTION:\n      return {\n        ...state,\n        shiftSelection: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekInsights = val => ({ type: SET_WEEK_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\nexport const onShiftClick = val => ({ type: ON_SHIFT_CLICK, val });\nexport const resetShiftSelection = val => ({ type: RESET_SHIFT_SELECTION, val });\nexport const removeItem = val => ({ type: REMOVE_ITEM, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\nconst RESET_COLORS = 'RESET_COLORS';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      const data = action.val && action.val.data;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay, data),\n        currentMonth: getCurrentMonth(selectedDay, data),\n        currentWeekdays: getCurrentWeekdays(selectedDay, data)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: [...new Set(state.colors.concat({\n            day: action.val.day,\n            value: action.val.value\n        }))]\n      });\n    case RESET_COLORS:\n      return {\n      ...state,\n        colors: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\nexport const resetColors = val => ({ type: RESET_COLORS, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst HIGHLIGHT_DAY = 'HIGHLIGHT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  highlightedWeekday: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case HIGHLIGHT_DAY:\n      return {\n        ...state,\n        highlightedWeekday: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const highlightDay = val => ({ type: HIGHLIGHT_DAY, val });\n","import { getExactTimes } from '../helpers/parser';\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst OPEN_MODAL = 'OPEN_MODAL';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false,\n  modalData: null,\n  timeArray: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalData: action.val && action.val.data,\n        timeArray: action.val ? getExactTimes(action.val.data, action.val.arr) : []\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const openModal = val => ({ type: OPEN_MODAL, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport {setWeekdayInsights, setMonthInsights, onShiftClick, resetShiftSelection, removeItem} from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nclass DayLabels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  onWeekdayClick = (ev, day) => {\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      }, () => {\n        this.state.toggle ? this.props.onShiftClick(day) : this.props.removeItem(day);\n      });\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      const weekdayInsights = getWeekdayInsights(day, this.props.dayInsights, this.props.allDays);\n      this.props.setWeekdayInsights({\n        selectedWeekday: weekdayInsights.selectedWeekday,\n        daysOfWeekday: weekdayInsights.daysOfWeekday,\n        weekdayInsights: weekdayInsights.weekdayInsights\n      });\n      this.props.showBarChart(true);\n      this.setState({\n        toggle: false\n      });\n    }\n  };\n\n  render() {\n    const weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n      return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n    });\n\n    return (\n      <div className='day-labels-container'>\n        {\n          weekArray.map(day =>\n            <text\n              key={day}\n              className={classNames('day-labels', {'bold': this.props.selectedWeekday === day || this.props.shiftSelection.indexOf(day) > -1})}\n              onClick={ev => this.onWeekdayClick(ev, day)}\n            >\n              {day}\n            </text>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\nconst getDaysArrayByMonth = (month, year, data) => {\n  let daysInMonth = moment(month, 'M').daysInMonth();\n  const arrDays = [];\n\n  while(daysInMonth) {\n    const current = moment(month, 'M').date(daysInMonth).format(`${year}-MM-DD`);\n    Object.keys(data).find(key => key === current) && arrDays.push(current);\n    daysInMonth--;\n  }\n  return arrDays;\n};\n\nexport const getAverageColor = props => {\n  let rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  let filteredColors = [];\n  const insertMissingColors = daysArray => {\n    daysArray.forEach(day => {\n      if (!filteredColors.find(color => moment(color.day, 'DD-MM-YYYY').format('YYYY-MM-DD') === day)) {\n        const value = d3.color(getColors(props.data).oranges(props.data[day]));\n        filteredColors.push({\n          day,\n          value\n        });\n      }\n    })\n  };\n  if (props.selectedWeek) {\n    filteredColors = props.colors.filter(color => moment(color.day).isoWeek() === props.selectedWeek && color);\n    const daysArray = Object.keys(props.allDays).filter(key => moment(key).isoWeek() === props.selectedWeek);\n    insertMissingColors(daysArray);\n  }\n\n  if (props.selectedMonth) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('M') === props.selectedMonth && color);\n    const daysArray = getDaysArrayByMonth(props.selectedMonth, moment(props.minDate).format('YYYY'), props.data);\n    insertMissingColors(daysArray);\n  }\n\n  if (props.selectedWeekday) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('ddd') === props.selectedWeekday && color);\n    const daysArray = Object.keys(props.allDays).filter(key => moment(key).isoWeekday() === moment(props.selectedWeekday, 'ddd').isoWeekday());\n    insertMissingColors(daysArray);\n  }\n\n  filteredColors.forEach(color => {\n    rgb.r += color.value.r;\n    rgb.g += color.value.g;\n    rgb.b += color.value.b;\n  });\n\n  return d3.rgb(rgb.r / filteredColors.length, rgb.g / filteredColors.length, rgb.b / filteredColors.length);\n};\n\nconst contains = (arr, showOverview, item) => {\n  if (arr && showOverview) {\n    let i = arr.length;\n    while (i--) {\n      if (arr[i] === item) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\nexport const getAdjacentDayColor = (props, day) => {\n  const item = Object.keys(props.data).find(key => moment(key, 'YYYY-MM-DD').format('DD-MM-YYYY') === day);\n  if (item) {\n    return d3.color(getColors(props.data).oranges(props.data[item]));\n  }\n  return '#efefef';\n};\n\nexport const getColors = data => {\n  const min = d3.min(Object.values(data));\n  const max = d3.max(Object.values(data));\n  return {\n    purples: purplePalette(min, max),\n    oranges: orangePalette(min, max)\n  }\n};\n\nconst purplePalette = (min, max) => {\n  const d = (max-min)/20;\n  return d3.scaleThreshold()\n    .range(['#dadaeb','#d1d0e6','#c9c7e1','#c0bedc','#b7b5d7','#afacd2','#a6a3ce','#9e9ac9','#9591c4','#8c89c0','#8380bc','#7d76b7','#786db2','#7464ad','#6f5aa8','#6950a3','#64469e','#5f3d99','#5a3294','#54278f'])\n    .domain([min+d,min+2*d,min+3*d,min+4*d,min+5*d,min+6*d,min+7*d,min+8*d,min+9*d,min+10*d,min+11*d,min+12*d,min+13*d,min+14*d,min+15*d,min+16*d,min+17*d,min+18*d,min+19*d,min+20*d]);\n};\n\nconst orangePalette = (min, max) => {\n  const d = (max-min)/10;\n  return d3.scaleThreshold()\n    .range(['#fdd0a2','#febb81','#fea763','#fd9243','#f67e30','#ea6c23','#dc5c18','#cb4d0e','#b94107','#a63603'])\n    .domain([min+d,min+2*d,min+3*d,min+4*d,min+5*d,min+6*d,min+7*d,min+8*d,min+9*d,min+10*d]);\n};\n\nexport const getDayColor = (props, isCurrentDay) => {\n  const item = Object.keys(props.data).find(key => new Date(key).setHours(0,0,0,0) === props.day.setHours(0,0,0,0));\n\n  if (item) {\n    const day = moment(props.day).format('DD-MM-YYYY');\n\n    const isCurrentWeek = contains(props.currentWeek, props.showWeekOverview, day) ||\n      (props.selectedWeek && props.selectedWeek === moment(props.day).isoWeek()) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).isoWeek()) > -1);\n    const isCurrentMonth = contains(props.currentMonth, props.showMonthOverview, day) ||\n      (props.selectedMonth && props.selectedMonth === moment(props.day).format('M')) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).format('MMMM')) > -1);\n    const isCurrentWeekday = contains(props.currentWeekdays.daysArr, props.showWeekdayOverview, day) ||\n      (props.selectedWeekday && props.selectedWeekday === moment(props.day).format('ddd')) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).format('ddd')) > -1) ||\n      (props.highlightedWeekday && props.highlightedWeekday === moment(props.day).format('ddd'));\n    const isSelected = !!props.shiftSelection.length &&\n      (props.shiftSelection.indexOf(moment(props.day).format('YYYY-MM-DD')) > -1 ||\n        props.shiftSelection.indexOf('all') > -1);\n\n    const colors = getColors(props.data);\n    const interpolateColor = (isCurrentDay || isSelected || isCurrentWeek || isCurrentMonth || isCurrentWeekday) ? colors.oranges(props.data[item]) : colors.purples(props.data[item]);\n\n    return {\n      count: props.data[item],\n      fillColor: interpolateColor\n    }\n  }\n\n  return {\n    fillColor: '#efefef',\n    count: 0\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {\n  onShiftClick, removeItem,\n  resetShiftSelection,\n  setMonthInsights,\n  setWeekdayInsights,\n  setWeekInsights\n} from '../../reducers/app';\nimport {getAdjacentDayColor, getDayColor, getColors} from '../../helpers/colors';\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.selectedWeek !== nextProps.selectedWeek ||\n      this.isEqual(nextProps) ||\n      this.props.fill !== nextProps.fill ||\n      this.props.highlightedWeekday !== nextProps.highlightedWeekday ||\n      this.props.shiftSelection !== nextProps.shiftSelection ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  isEqual = nextProps => {\n    const isCurrentWeek = (nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentMonth = (nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentWeekday = (nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    return isCurrentWeek || isCurrentMonth || isCurrentWeekday;\n  };\n\n  onDayClick = (ev, day, color) => {\n    console.log(this.refs.day.getBoundingClientRect())\n    ev.stopPropagation();\n    const formattedDay = moment(day).format('YYYY-MM-DD');\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      }, () => {\n        this.state.toggle ? this.props.onShiftClick(formattedDay) : this.props.removeItem(formattedDay);\n      });\n    } else {\n      this.props.setMonthInsights({\n        selectedMonth: null,\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setWeekInsights({\n        selectedWeek: null,\n        daysOfWeek: [],\n        weekInsights: []\n      });\n      this.props.resetShiftSelection();\n      const color = d3.color(getColors(this.props.data).oranges(this.props.data[formattedDay]));\n      this.props.selectDay({ day, color, data: this.props.data });\n      this.props.showBarChart(true);\n      const previousDay = moment(day).subtract(1, 'd').format('DD-MM-YYYY');\n      const nextDay = moment(day).add(1, 'd').format('DD-MM-YYYY');\n      const isColorSaved = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n      const isPreviousColorSaved = this.props.colors.find(color => color.day === previousDay);\n      const isNextColorSaved = this.props.colors.find(color => color.day === nextDay);\n      !isColorSaved && this.props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value: color });\n      !isPreviousColorSaved && this.props.saveColor({ day: previousDay, value: getAdjacentDayColor(this.props, previousDay) });\n      !isNextColorSaved && this.props.saveColor({ day: nextDay, value: getAdjacentDayColor(this.props, nextDay) });\n    }\n  };\n\n  render() {\n    const props = this.props;\n    const { cellMargin, cellSize } = this.props;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const color = getDayColor(props, isCurrentDay);\n\n    const isSelected = !!props.shiftSelection.length &&\n      (moment(d).format('M') === props.selectedMonth ||\n        moment(d).isoWeek() === props.selectedWeek ||\n        moment(d).format('ddd') === props.selectedWeekday ||\n        moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY'));\n\n    const showStroke = isCurrentDay || (isSelected && props.data[moment(d).format('YYYY-MM-DD')]);\n\n    return (\n      <rect\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${color.count}`}\n        data-for='svgTooltip'\n        ref='day'\n        key={d}\n        className='day fade-in'\n        stroke={showStroke ? '#000' : ''}\n        strokeWidth={showStroke ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={color.fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin + 20}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={ev => this.onDayClick(ev, d, color)}\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeek: state.app.selectedWeek,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  highlightedWeekday: state.radialChart.highlightedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights, getWeekInsights } from '../../helpers/parser';\nimport { setWeekInsights, setMonthInsights, setWeekdayInsights, onShiftClick, resetShiftSelection, removeItem } from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\nimport ReactTooltip from \"react-tooltip\";\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1,\n      toggle: false\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n    this.brush = d3.brush()\n      .on('end', this.brushEnd);\n    d3.select(this.refs.brush).call(this.brush);\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n    ReactTooltip.rebuild();\n  }\n\n  brushEnd = () => {\n    if (!d3.event.selection) {\n      return;\n    }\n    const [x1, x2] = d3.event.selection;\n\n    console.log(x1, x2);\n  };\n\n  showMoreData = () => {\n    let { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth() + 1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count + 2 }));\n    }\n  };\n\n  getWeeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  renderMonthOverview = (ev, month) => {\n    ev.stopPropagation();\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      }, () => {\n        this.state.toggle ? this.props.onShiftClick(month) : this.props.removeItem(month);\n      });\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setWeekInsights({\n        selectedWeek: null,\n        daysOfWeek: [],\n        weekInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), this.props.dayInsights, this.props.allDays);\n      this.props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      this.props.showBarChart(true);\n    }\n  };\n\n  renderWeekOverview = (ev, week) => {\n    ev.stopPropagation();\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      }, () => {\n        this.state.toggle ? this.props.onShiftClick(week) : this.props.removeItem(week);\n      });\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setMonthInsights({\n        selectedMonth: null,\n        daysOfMonth: [],\n        monthInsights: []\n      });\n      const weekInsights = getWeekInsights(week, this.props.dayInsights, this.props.allDays);\n      this.props.setWeekInsights({\n        selectedWeek: weekInsights.selectedWeek,\n        daysOfWeek: weekInsights.daysOfWeek,\n        weekInsights: weekInsights.weekInsights\n      });\n      this.props.showBarChart(true);\n    }\n  };\n\n  renderDays = (renderList, isCurrentMonth) =>\n    renderList.map(d =>\n      <Day fill={isCurrentMonth || moment(d).format('ddd') === this.props.selectedWeekday}\n           day={d} month={this.props.month}\n           key={d}\n           className='day'\n      />\n      );\n\n  getWeekIndices = month => {\n    const firstDayOfMonth = moment(month).startOf('month');\n    const lastDayOfMonth = moment(month).endOf('month');\n    let weekIndices = [];\n\n    let currentDay = moment(firstDayOfMonth);\n    weekIndices.push(currentDay.isoWeek());\n\n    while(currentDay.month() === firstDayOfMonth.month()) {\n      currentDay.add(1, 'weeks');\n      weekIndices.push(currentDay.isoWeek());\n    }\n\n    if (currentDay.isoWeek() !== lastDayOfMonth.isoWeek()) {\n      weekIndices.pop();\n    }\n\n    return weekIndices;\n  };\n\n  renderWeekLabels = (cellSize, cellMargin, month) => {\n    const arr = this.getWeekIndices(month);\n    const nrOfWeeks = arr.length;\n    let offsets = [0.1, 0.3, 0.5, 0.7, 0.9, 1.1].slice(0, nrOfWeeks);\n    return arr.map((week, i) =>\n      <text\n        className={classNames('week slow-fade-in', {'bold': this.props.selectedWeek === week || this.props.shiftSelection.indexOf(week) > -1})}\n        key={week}\n        y={cellSize}\n        x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month)))) * offsets[i]}\n        textAnchor='middle'\n        onClick={ev => this.renderWeekOverview(ev, week)}\n      >\n        { week }\n      </text>\n    )\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 50)}\n        width={(cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          {\n          endReached &&\n            <text\n              className={classNames('month-name', 'slow-fade-in', {'bold': isCurrentMonth || this.props.shiftSelection.indexOf(monthName(month)) > -1})}\n              y={(cellSize * 7) + (cellMargin * 8) + 35}\n              x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 1))) / 2}\n              textAnchor='middle'\n              onClick={ev => this.renderMonthOverview(ev, monthName(month))}\n            >\n              { monthName(month) }\n            </text>\n          }\n          { endReached && this.renderWeekLabels(cellSize, cellMargin, month) }\n          { this.renderDays(renderList, isCurrentMonth) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    const monthsArr = this.getChunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper' ref='brush' onClick={ev => ev.stopPropagation()}>\n        {\n          monthsArr.map((months, i) =>\n            <g className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </g>\n          )\n        }\n        <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nconst Card = props =>\n  <div className={`card ${props.className}`} id='card' onKeyDown={props.onKeyDown} tabIndex={props.tabIndex}>\n    {props.children}\n  </div>;\n\nexport default Card;\n","import React from 'react';\n\nimport './Section.scss';\n\nconst Section = props =>\n  <section className={`section ${props.className || ''}`}>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import moment from 'moment';\nimport * as d3 from \"d3\";\nimport {getAdjacentDayColor} from \"./colors\";\nimport {getMonthInsights, getWeekdayInsights, getWeekInsights} from \"./parser\";\n\nconst getUnit = props => {\n  if (props.selectedMonth) {\n    return 'months';\n  } else if (props.selectedWeekday || props.selectedWeek) {\n    return 'weeks';\n  } else {\n    return 'days';\n  }\n};\n\nconst pickDay = (day, props) => {\n  props.setMonthInsights({\n    monthInsights: [],\n    daysOfMonth: [],\n    selectedMonth: null\n  });\n  props.setWeekdayInsights({\n    selectedWeekday: null,\n    daysOfWeekday: [],\n    weekdayInsights: []\n  });\n  props.setWeekInsights({\n    weekInsights: [],\n    daysOfWeek: [],\n    selectedWeek: null\n  });\n  const color = props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n  let value = color && d3.color(color.value);\n  if (!value) {\n    value = getAdjacentDayColor(props, moment(day).format('DD-MM-YYYY'), moment(day).startOf('month'));\n    props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value });\n  }\n  props.selectDay({ day, color: value, data: props.data });\n  props.showBarChart(true);\n};\n\nconst pickWeek = (week, props) => {\n  props.selectDay(null);\n  props.setWeekdayInsights({\n    selectedWeekday: null,\n    daysOfWeekday: [],\n    weekdayInsights: []\n  });\n  props.setMonthInsights({\n    monthInsights: [],\n    daysOfMonth: [],\n    selectedMonth: null\n  });\n  const weekInsights = getWeekInsights(week, props.dayInsights, props.allDays);\n  props.setWeekInsights({\n    selectedWeek: weekInsights.selectedWeek,\n    daysOfWeek: weekInsights.daysOfWeek,\n    weekInsights: weekInsights.weekInsights\n  });\n  props.showBarChart(true);\n};\n\nconst pickMonth = (month, props) => {\n  props.selectDay(null);\n  props.setWeekdayInsights({\n    selectedWeekday: null,\n    daysOfWeekday: [],\n    weekdayInsights: []\n  });\n  props.setWeekInsights({\n    weekInsights: [],\n    daysOfWeek: [],\n    selectedWeek: null\n  });\n  const monthInsights = getMonthInsights(month.toString(), props.dayInsights, props.allDays);\n  props.setMonthInsights({\n    selectedMonth: monthInsights.selectedMonth,\n    daysOfMonth: monthInsights.daysOfMonth,\n    monthInsights: monthInsights.monthInsights\n  });\n  props.showBarChart(true);\n};\n\nconst pickWeekday = (weekday, props) => {\n  props.selectDay(null);\n  props.setMonthInsights({\n    monthInsights: [],\n    daysOfMonth: [],\n    selectedMonth: null\n  });\n  const weekdayInsights = getWeekdayInsights(weekday, props.dayInsights, props.allDays, props.currentWeekdays, props.data);\n  props.setWeekdayInsights({\n    weekdayInsights: weekdayInsights.weekdayInsights,\n    daysOfWeekday: weekdayInsights.daysOfWeekday,\n    selectedWeekday: weekdayInsights.selectedWeekday\n  });\n  props.showBarChart(true);\n};\n\nexport const select = (val, props) => {\n  const selectedItem = props.selectedMonth || props.selectedWeekday || props.selectedDay || props.selectedWeek;\n  const unit = getUnit(props);\n\n  if (props.selectedDay) {\n    pickDay(moment(selectedItem).add(val, unit), props);\n  } else if (props.selectedWeek) {\n    pickWeek(parseInt(props.selectedWeek) + val, props);\n  } else if (props.selectedMonth) {\n    pickMonth(parseInt(selectedItem) + val, props);\n  } else if (props.selectedWeekday) {\n    const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n    pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + val)).format('ddd'), props);\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {saveColor, selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights, setWeekInsights} from '../../reducers/app';\nimport {select} from '../../helpers/navigator';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeek !== this.props.selectedWeek ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  getUnit = () => {\n    if (this.props.selectedMonth) {\n      return 'months';\n    } else if (this.props.selectedWeekday || this.props.selectedWeek) {\n      return 'weeks';\n    } else {\n      return 'days';\n    }\n  };\n\n  getString = selectedItem => {\n    if (this.props.selectedMonth) {\n      return moment(this.props.selectedMonth, 'M').format('MMMM');\n    } else if (this.props.selectedWeek) {\n      return `Week ${this.props.selectedWeek}`;\n    } else if (this.props.selectedWeekday) {\n      return `${moment(this.props.selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      return moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n  };\n\n  showArrows = (selectedItem, unit, minDate, maxDate) => {\n    if (selectedItem) {\n      const previousItem = moment(selectedItem).subtract(1, unit);\n      const nextItem = moment(selectedItem).add(1, unit);\n      const prev = previousItem.format(`${moment(minDate).year()}-MM-DD`);\n      const min = minDate.startOf('year').format('YYYY-MM-DD');\n      const next = nextItem.format(`${moment(maxDate).year()}-MM-DD`);\n      const max = maxDate.startOf('year').format('YYYY-MM-DD');\n      return {\n        previous: moment(prev).isSameOrAfter(moment(min)),\n        next: moment(next).isSameOrBefore(moment(max))\n      }\n    }\n  };\n\n  render() {\n    const { minDate, maxDate, selectedMonth, selectedDay, selectedWeekday, selectedWeek } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay || selectedWeek;\n    const unit = this.getUnit();\n\n    const showArrows = this.showArrows(selectedItem, unit, minDate, maxDate);\n    const showPreviousArrow = showArrows && showArrows.previous;\n    const showNextArrow = showArrows && showArrows.next;\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => showPreviousArrow && select(-1, this.props)}\n        />\n        { this.getString(selectedItem) }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showNextArrow && select(1, this.props)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale)\n      .ticks(24)\n      .tickFormat(d3.timeFormat('%H'));\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      >\n        <text x={this.props.width - 70}\n              y={35}\n              textAnchor='middle'\n              fill='#000'\n              fontSize={12}>\n          Hour of the day\n        </text>\n      </g>\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale)\n      .ticks(this.props.nrOfTicks)\n      .tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n    d3.select(this.refs.yAxis)\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 10 - this.props.margin.left)\n      .attr('x', -36)\n      .attr('dy', '1em')\n      .style('fill', '#000')\n      .style('font-size', 12)\n      .style('text-anchor', 'middle')\n      .text('Observations');\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { openModal } from '../../reducers/barChart';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  openModal = d => {\n    let arr;\n    if (this.props.selectedDay) {\n      arr = this.props.dayInsights[this.props.selectedDay];\n    }\n    if (this.props.selectedMonth) {\n      arr = this.props.monthInsights;\n    }\n    if (this.props.selectedWeek) {\n      arr = this.props.weekInsights;\n    }\n    if (this.props.selectedWeekday) {\n      arr = this.props.weekdayInsights;\n    }\n    arr && this.props.openModal({ data: d, arr });\n  };\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n\n    current.interrupt();\n\n    const color = this.props.color;\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('id', (d, i) => `bar-${i}`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => this.openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `${d.occurrences} occurrences<br>between ${moment(d.data, 'hh').format('H:mm')} - ${moment(parseInt(d.data)+1, 'hh').format('H:mm')}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekInsights: state.app.weekInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeek: state.app.selectedWeek,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bars);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport {openModal} from \"../../reducers/barChart\";\n\nclass AreaChart extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { xScaleArea, yScale, plotHeight, color, plotData, openModal, dayInsights, selectedDay,\n      selectedMonth, selectedWeek, selectedWeekday, monthInsights, weekInsights, weekdayInsights } = this.props;\n\n    const getPosition = i => {\n      const lines = document.getElementsByClassName('line');\n      let pos;\n\n      let beginning = 0,\n        end = lines && lines[i].getTotalLength(),\n        target = null;\n\n      while (end){\n        target = Math.floor((beginning + end) / 2);\n        pos = lines[i].getPointAtLength(target);\n        if ((target === end || target === beginning) && pos.x !== mouseX) {\n          break;\n        }\n        if (pos.x > mouseX)      end = target;\n        else if (pos.x < mouseX) beginning = target;\n        else break; //position found\n      }\n\n      return pos;\n    };\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const formatTime = d3.timeFormat('%H');\n    const parseTime = d3.timeParse('%H');\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        const pos = getPosition(i);\n        const x = xScaleArea.invert(pos.x);\n\n        d3.selectAll('.bar')\n          .attr('fill', d =>  formatTime(parseTime(d.data)) === formatTime(x) ? d3.rgb(color).darker() : color);\n\n        d3.select('.line-text')\n          .style('fill', '#7888BF')\n          .style('font-weight', 'bold')\n          .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n\n    const hide = () => {\n      d3.select('.bar-rectangle')\n        .style('opacity', 0);\n      d3.select('.bar-text')\n        .style('opacity', 0);\n      d3.select('.bar-circle')\n        .style('opacity', 0);\n    };\n\n    const openModalBox = item => {\n      let arr;\n      if (selectedDay) {\n        arr = dayInsights[moment(selectedDay).format('YYYY-MM-DD')];\n      }\n      if (selectedMonth) {\n        arr = monthInsights;\n      }\n      if (selectedWeek) {\n        arr = weekInsights;\n      }\n      if (selectedWeekday) {\n        arr = weekdayInsights;\n      }\n      arr && openModal({ data: item, arr });\n    };\n\n    d3.selectAll('.mouse-per-bar')\n      .attr('transform', function(d, i) {\n\n        const bars = plotData.map(i => moment(i.data, 'H').format('HH'));\n\n        const x = xScaleArea.invert(getPosition(i).x);\n\n        if (bars.indexOf(formatTime(x)) > -1) {\n          const item = plotData.find(i => moment(i.data, 'H').format('HH') === formatTime(x));\n          d3.select('.mouse-over-effects')\n            .style('cursor', 'pointer')\n            .on('click', () => {\n              hide();\n              openModalBox(item);\n            });\n\n          d3.select('.bar-rectangle')\n            .style('opacity', 0.9);\n          d3.select('.bar-text')\n            .style('opacity', 1)\n            .style('fill', d3.rgb(color).darker())\n            .style('font-weight', 'bold')\n            .text(item.occurrences);\n          d3.select('.bar-circle')\n            .style('opacity', 1);\n          return `translate(${mouseX},${item.y - 3.8})`\n        } else {\n          d3.select('.bar-rectangle')\n            .style('opacity', 0);\n          d3.select('.bar-circle')\n            .style('opacity', 0);\n        }\n        d3.select('.mouse-over-effects')\n          .style('cursor', 'auto')\n          .on('click', null);\n        hide();\n      });\n  };\n\n  setLineOpacity = val => {\n    d3.select('.mouse-line')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-circle')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-text')\n      .style('opacity', val);\n  };\n\n  render() {\n    const { xScaleArea, plotWidth, plotHeight, margin, yScale, insights } = this.props;\n\n    const parseTime = d3.timeParse('%H:%M');\n\n    const area = d3.area()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(insights[d]))\n      .curve(d3.curveMonotoneX);\n\n    const line = d3.line()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y(d => yScale(insights[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(insights))}\n        />\n        <path className='line shadow'\n              d={line(Object.keys(insights))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#777'\n            strokeWidth={1}\n            strokeDasharray='3,3'\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              className='line-circle'\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <rect\n              className='line-rectangle'\n              x={10}\n              y={-14}\n              opacity={0}\n            >\n            </rect>\n            <text\n              className='line-text'\n              fontSize={14}\n              transform='translate(16,3)'\n            />\n          </g>\n          <g className='mouse-per-bar'>\n            <circle\n              className='bar-circle'\n              r={5}\n              fill={d3.rgb(this.props.color).darker()}\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <rect\n              className='bar-rectangle'\n              x={-50}\n              y={-14}\n              opacity={0}\n            >\n            </rect>\n            <text\n              className='bar-text'\n              transform='translate(-35,3)'\n              fontSize={14}\n              opacity={0}\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            transform='translate(0,0)'\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => this.setLineOpacity('0')}\n            onMouseOver={() => this.setLineOpacity('1')}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekInsights: state.app.weekInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeek: state.app.selectedWeek,\n  selectedWeekday: state.app.selectedWeekday,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './Modal.scss';\n\nimport { openModal } from \"../../reducers/barChart\";\nimport moment from 'moment';\nimport clock from \"../../icons/clock.svg\";\n\nclass Modal extends React.PureComponent {\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  handleKeyUp = ev => {\n    if (ev.key === 'Escape') {\n      ev.preventDefault();\n      this.hideModal();\n    }\n  };\n\n  hideModal = () => {\n    this.props.openModal(null);\n  };\n\n  convertRange = (val, r1, r2 )=> (val - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\n  getString = selectedItem => {\n    if (this.props.selectedMonth) {\n      return moment(this.props.selectedMonth, 'M').format('MMMM');\n    } else if (this.props.selectedWeek) {\n      return `Week ${this.props.selectedWeek}`;\n    } else if (this.props.selectedWeekday) {\n      return `${moment(this.props.selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      return moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n  };\n\n  render() {\n    const { selectedDay, selectedMonth, selectedWeekday, selectedWeek, modalData, timeArray } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay || selectedWeek;\n      return (\n      <div className={classNames('modal', 'fade-in', {'display-block': modalData}, {'display-none': !modalData})} onClick={this.hideModal}>\n        <section className='modal-main' onClick={ev => ev.stopPropagation()}>\n          <i className='fas fa-times' onClick={this.hideModal} />\n          <div className='modal-title'>{ this.getString(selectedItem) }</div>\n          {modalData && <div>between {moment(modalData.data, 'hh').format('H:mm')} - {moment(parseInt(modalData.data)+1, 'hh').format('H:mm')}</div>}\n          <div className='clock-icon'>\n            <img src={clock} alt='' width={50} height={50} />\n          </div>\n          <div className='time-container'>\n            {\n              Object.keys(timeArray).map(key =>\n                  <span className='time' style={{ fontSize: this.convertRange(timeArray[key], [1,20], [15,50]) }}>\n              {key}\n            </span>\n              )\n            }\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  modalData: state.barChart.modalData,\n  timeArray: state.barChart.timeArray,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {selectDay} from '../../reducers/calendar';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.selectDay(null);\n    props.onReset();\n  };\n  const renderCheckboxes = () =>\n    <div className='checkboxes'>\n       <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n         Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n         Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n         Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n       </span>\n    </div>;\n\n  return (\n    <div className='footer year-label'>\n      { props.showFooter ? renderCheckboxes() : <div className='checkboxes'/> }\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights, getShiftSelectionInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport Modal from '../widget/Modal';\nimport { showBarChart, showMonthOverview, showWeekdayOverview, showWeekOverview } from '../../reducers/barChart';\nimport {saveColor} from '../../reducers/calendar';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\nimport {getAverageColor} from \"../../helpers/colors\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    const smallerScreen = document.getElementById('card').clientWidth < 900;\n    const val = smallerScreen ? 1 : 0.66;\n    this.state = {\n      width: (document.getElementById('card').clientWidth - props.margin.left - props.margin.right) * val\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    const smallerScreen = document.getElementById('card').clientWidth < 900;\n    const val = smallerScreen ? 1 : 0.66;\n    this.setState({\n      width: (document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right) * val\n    });\n  };\n\n  getData = () => {\n    if (!!this.props.weekInsights.length) {\n      return this.props.daysOfWeek;\n    }\n    if (!!this.props.monthInsights.length) {\n      return this.props.daysOfMonth;\n    }\n    if (!!this.props.weekdayInsights.length) {\n      return this.props.daysOfWeekday;\n    }\n    return this.props.plotData;\n  };\n\n  getInsights = () => {\n    if (this.props.isWeekOverviewChecked) {\n      return getCurrentWeekInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isMonthOverviewChecked) {\n      return getCurrentMonthInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      return getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.data).weekdayObj;\n    }\n    if (!!this.props.shiftSelection.length) {\n      return getShiftSelectionInsights(this.props.shiftSelection, this.props.data, this.props.dayInsights, this.props.allDays).selectedDaysObj\n    }\n  };\n\n  showAreaChart = () => this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked || !!this.props.shiftSelection.length;\n\n  updateScale = data => {\n    const xScale = d3.scaleTime();\n    const xScaleArea = d3.scaleTime();\n    const yScale = d3.scaleLinear().nice();\n\n    const insights = this.getInsights();\n\n    const max = insights ?\n      Math.ceil(Math.max(d3.max(Object.values(insights).map(i => Math.ceil(i))), d3.max(Object.values(data).map(i => Math.ceil(i))))) :\n      d3.max(Object.values(data));\n\n    const yDomain = [0, this.showAreaChart() ? max + max / 12 : max];\n\n    const parseTime = d3.timeParse('%H:%M');\n    const midnight = parseTime('00:00');\n    const halfPastMidnight = parseTime('00:30');\n\n    xScale\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    xScaleArea\n      .domain([halfPastMidnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - 5]);\n\n    yScale\n      .domain(yDomain)\n      .range([this.props.height - this.props.margin.top - this.props.margin.bottom, 0]);\n\n    return {xScale, yScale, xScaleArea};\n  };\n\n  updatePlotSize = () => {\n    const plotWidth = this.state.width - (this.props.margin.left + this.props.margin.right);\n    const plotHeight = this.props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    const data = this.getData();\n\n    const { xScale, yScale, xScaleArea } =  this.updateScale(data);\n    const { plotWidth, plotHeight } = this.updatePlotSize();\n\n    const max = d3.max(Object.values(data).map(i => Math.ceil(i)));\n    let nrOfTicks = max;\n    if (max > 10) {\n      nrOfTicks = max / 2;\n    }\n    if (max > 20) {\n      nrOfTicks = max / 4;\n    }\n    if (max > 40) {\n      nrOfTicks = max / 8;\n    }\n\n    const parseTime = d3.timeParse('%H');\n\n    const metaData = {\n      xScale,\n      yScale,\n      xScaleArea,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n    const color = this.props.color || getAverageColor(this.props);\n\n    const showFooter = !(this.props.selectedMonth || this.props.selectedWeekday || this.props.selectedWeek);\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight - 50})`} margin={this.props.margin} width={this.state.width} height={this.props.plotHeight}/>\n            <YAxis {...metaData} margin={this.props.margin} height={plotHeight} />\n            <Bars {...metaData} {...plotData} color={color}/>\n            {this.showAreaChart() &&\n            <AreaChart {...metaData} {...plotData} margin={this.props.margin} insights={this.getInsights()} color={color}/>}\n          </g>\n        </svg>\n        <Footer showFooter={showFooter} />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n        <Modal />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfWeek: state.app.daysOfWeek,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedWeek: state.app.selectedWeek,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection,\n  selectedDays: state.app.selectedDays,\n  data: state.app.data,\n  allDays: state.app.allDays,\n  minDate: state.app.minDate,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\nimport {select} from \"../../helpers/navigator\";\nimport {saveColor, selectDay} from \"../../reducers/calendar\";\nimport {showBarChart} from \"../../reducers/barChart\";\nimport {setMonthInsights, setWeekdayInsights, setWeekInsights} from \"../../reducers/app\";\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[moment(props.selectedDay).format('YYYY-MM-DD')] ||\n    !!props.weekInsights.length ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    plotData: props.plotData,\n    margin: props.margin,\n    height: props.height\n  };\n\n  return (\n    <Section className='section-two-thirds'>\n      <Card tabIndex={0} onKeyDown={ev =>\n        (ev.key === 'ArrowLeft' && select(-1, props)) ||\n        (ev.key === 'ArrowRight' && select(1, props))\n      }>\n        <DayLabel selectedDay={moment(props.selectedDay).format('YYYY-MM-DD')} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { setWeekdayInsights } from '../../reducers/app';\nimport { highlightDay } from '../../reducers/radialChart';\nimport {getWeekdayInsights} from '../../helpers/parser';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay} from '../../reducers/calendar';\n\nimport './RadialChart.scss';\n\nclass RadialChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true\n    }\n  }\n\n  componentDidMount() {\n    this.renderArcs();\n  }\n\n  componentDidUpdate() {\n    this.renderArcs();\n  }\n\n  normalize = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n  };\n\n  getPercentage = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (80 - 5) * ((val - min) / (max - min)) + 5;\n  };\n\n  renderArcs = () => {\n    const svg = d3.select(this.refs.radialChart);\n\n    const { setWeekdayInsights, highlightDay, dayInsights, allDays, showBarChart } = this.props;\n\n    const width = 350;\n    const arcSize = (5 * width / 100);\n    const innerRadius = arcSize * 2;\n\n    const keysArray = Object.keys(this.props.data)\n      .sort((a, b) => moment(a, 'ddd').isoWeekday() - moment(b, 'ddd').isoWeekday());\n\n    const data = keysArray.map(key => {\n      return {\n        defaultValue: this.props.data[key],\n        value: this.getPercentage(this.props.data[key]),\n        label: key,\n        color: d3.interpolateBlues(this.normalize(this.props.data[key]))\n      }\n    });\n\n    const arcs = data.map((obj, i) => {\n      return d3.arc().innerRadius(i * arcSize + innerRadius).outerRadius((i + 1) * arcSize - (width / 100) + innerRadius);\n    });\n\n    const arcsGrey = data.map(function (obj, i) {\n      return d3.arc().innerRadius(i * arcSize + (innerRadius + ((arcSize / 2) - 2))).outerRadius((i + 1) * arcSize - ((arcSize / 2)) + (innerRadius));\n    });\n\n    const pieData = data.map(function (obj, i) {\n      return [\n        {value: obj.value * 0.75, arc: arcs[i], object: obj},\n        {value: (100 - obj.value) * 0.75, arc: arcsGrey[i], object: obj},\n        {value: 100 * 0.25, arc: arcs[i], object: obj}];\n    });\n\n    const pie = d3.pie()\n      .sort(null)\n      .value(d => d.value);\n\n    const g = svg.selectAll('g').data(pieData)\n      .enter()\n      .append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    const gText = svg.selectAll('g.textClass').data([{}]).enter()\n      .append('g')\n      .classed('textClass', true)\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    g.selectAll('path').data(function (d) {\n      return pie(d);\n    })\n      .enter()\n      .append('path')\n      .attr('id', function (d, i) {\n        if (i === 0) {\n          return 'Arc' + d.data.object.label;\n        }\n        if (i === 1) {\n          return 'Text' + d.data.object.label;\n        }\n      })\n      .style('cursor', 'pointer')\n      .on('click', function (d, i) {\n        const weekdayInsights = getWeekdayInsights(d.data.object.label, dayInsights, allDays);\n        setWeekdayInsights({\n          selectedWeekday: weekdayInsights.selectedWeekday,\n          daysOfWeekday: weekdayInsights.daysOfWeekday,\n          weekdayInsights: weekdayInsights.weekdayInsights\n        });\n        showBarChart(true);\n        selectDay(null);\n      })\n      .on('mouseover', function (d, i) {\n        if (i === 0) {\n          const id = d3.select(this).attr('id');\n          d3.selectAll('.radial-chart path')\n            .transition()\n            .filter(function () {\n              return d3.select(this).attr('id') !== id;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n\n          d3.selectAll('.textClass text')\n            .transition()\n            .filter(function () {\n              return d3.select(this).text() !== d.data.object.label;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n\n          d3.selectAll('.textpath')\n            .transition()\n            .filter(function () {\n              return d3.select(this).text() !== d.data.object.value;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n          highlightDay(d.data.object.label);\n        }\n      })\n      .on('mouseleave', (d, i) => {\n        d3.selectAll('.radial-chart path').attr('opacity', 1);\n        d3.selectAll('.textClass text').attr('opacity', 1);\n        d3.selectAll('.textpath').attr('opacity', 1);\n        highlightDay(null);\n      })\n      .attr('fill', (d, i) => i === 0 ? d.data.object.color : i === 1 ? '#F1F1F1' : 'none')\n      .transition()\n      .duration(1000)\n        .attrTween('d', function (d) {\n          const i = d3.interpolate(d.startAngle+0.1, d.endAngle);\n          return function(t) {\n            d.endAngle = i(t);\n            return d.data.arc(d);\n          }\n      });\n\n    svg.selectAll('g').each(function (d, index) {\n      const el = d3.select(this);\n      el.selectAll('path').each(function (r, i) {\n        if (i === 1) {\n          const labelObj = r.data.object;\n          g.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', '#777')\n            .attr('dominant-baseline', 'central')\n            .append('textPath')\n            .attr('class', 'textpath')\n            .attr('textLength', function (d, i) {\n              return 0;\n            })\n            .attr('xlink:href', '#Text' + labelObj.label)\n            .attr('startOffset', '5')\n            .attr('dy', '-3em')\n            .transition()\n            .delay(1000)\n              .text(labelObj.defaultValue);\n        }\n        if (i === 0) {\n          const centroidText = r.data.arc.centroid({\n            startAngle: r.startAngle,\n            endAngle: r.startAngle\n          });\n          const labelObj = r.data.object;\n          gText.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', () => labelObj.color)\n            .attr('font-weight', '600')\n            .transition()\n            .delay(1000)\n              .text(labelObj.label)\n            .attr('transform', 'translate(' + (centroidText[0] - ((1.5 * width) / 100)) + ',' + (centroidText[1] + ') rotate(' + (180) + ')'))\n            .attr('dominant-baseline', 'central');\n        }\n      })\n    });\n  };\n\n  render() {\n    return (\n      <svg className='radial-chart' ref='radialChart' width='100%' height={350} />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  highlightedWeekday: state.radialChart.highlightedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  highlightDay: val => dispatch(highlightDay(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RadialChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../bar-chart/BarChart.scss';\nimport RadialChart from \"./RadialChart\";\nimport { getDatasetOverview} from \"../../helpers/parser\";\n\nconst RadialChartContainer = props => {\n  const getInsights = () => getDatasetOverview(props.allDays, props.data, props.dayInsights);\n\n  return (\n    <Section className='section-one-third'>\n      <Card className='radial-chart-container'>\n        <div className='year-label dayTitle dataset-overview-title'>Week average</div>\n        <div>\n          <RadialChart data={getInsights()} />\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  data: state.app.data,\n  allDays: state.app.allDays\n});\n\nexport default connect(mapStateToProps)(RadialChartContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekInsights, setWeekdayInsights, uploadFile } from '../../reducers/app';\nimport { showCalendar, selectDay, resetColors } from '../../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../../reducers/barChart';\n\nimport Section from './Section';\n\nimport dataset1 from '../../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../../data/itch_tbc.csv';\nimport dataset3 from '../../data/ptsd_filtered.csv';\nimport dataset4 from '../../data/data.csv';\nimport {highlightDay} from \"../../reducers/radialChart\";\n\nconst Upload = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.setWeekInsights({\n      selectedWeek: null,\n      daysOfWeek: [],\n      weekInsights: []\n    });\n    props.selectDay(null);\n    props.highlightDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n    props.resetColors();\n  };\n\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n\n  return (\n    <Section title='Select dataset' className='upload-section'>\n      <div className='upload-dataset'>\n        <Dropdown\n          className='dropdown'\n          options={options}\n          placeholder='Choose...'\n          value={props.datasetName}\n          onChange={onSelect}\n        />\n        <Dropzone\n          accept='text/csv'\n          onDrop={onDrop}\n        >\n          {({getRootProps, getInputProps, isDragActive}) => {\n            return (\n              <div\n                {...getRootProps()}\n                className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n              >\n                <input {...getInputProps()} />\n                {\n                  !!files.length\n                    ? <span className='file-name'>\n                          <i className='fa fa-remove' />\n                      {files}\n                        </span>\n                    : <span className='upload-message'>\n                          <i className='fa fa-upload' />\n                            Drag & Drop\n                        </span>\n                }\n              </div>\n            )\n          }}\n        </Dropzone>\n      </div>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files,\n  datasetName: state.app.datasetName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  resetColors: val => dispatch(resetColors(val)),\n  highlightDay: val => dispatch(highlightDay(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport RadialChartContainer from './radial-chart/RadialChartContainer';\nimport Upload from './widget/Upload';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport githubLogo from '../icons/github-logo.svg';\nimport githubLogoHover from '../icons/github-logo-hover.svg';\nimport pdfLogo from '../icons/pdf-logo.svg';\nimport pdfLogoHover from '../icons/pdf-logo-hover.svg';\nimport {resetShiftSelection} from \"../reducers/app\";\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      plotData={props.allDays[props.selectedDay]}\n      margin={{ top: 10, right: 30, bottom: 40, left: 50 }}\n      height={300}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n  return (\n    <div className='app' onClick={props.resetShiftSelection}>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n        <div className='icons'>\n          <a href='https://github.com/diana-tofan/Time-Series-Visualization' target='_blank' rel='noopener noreferrer'>\n            <img className='github-icon' src={githubLogo} alt='Github' onMouseOver={ev => ev.currentTarget.src = githubLogoHover} onMouseLeave={ev => ev.currentTarget.src = githubLogo} />\n          </a>\n          <a href='https://www.overleaf.com/read/vptjwvyzjnvg' target='_blank' rel='noopener noreferrer'>\n            <img className='pdf-icon' src={pdfLogo} alt='Report' onMouseOver={ev => ev.currentTarget.src = pdfLogoHover} onMouseLeave={ev => ev.currentTarget.src = pdfLogo} />\n          </a>\n        </div>\n      </header>\n      <div className='content'>\n        <Upload />\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible &&\n          <div>\n            <p>Day overview</p>\n            <div className='charts-container'>\n              { renderBarChart() }\n              { props.isBarChartVisible && <RadialChartContainer /> }\n            </div>\n          </div>\n        }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetShiftSelection: val => dispatch(resetShiftSelection(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}