{"version":3,"sources":["icons/github-logo.svg","icons/pdf-logo.svg","icons/clock.svg","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv","icons/github-logo-hover.svg","icons/pdf-logo-hover.svg","components/calendar/Heatmap.js","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","helpers/colors.js","components/calendar/Day.js","components/widget/Card.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Section.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/widget/Modal.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","components/bar-chart/Container.js","components/radial-chart/RadialChart.js","components/radial-chart/RadialChartContainer.js","components/widget/Upload.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","x1","x2","y1","y2","parseTime","timeStamp","offset","timeString","split","slice","value","moment","utc","concat","utcOffset","format","parseDate","countOccurrences","arr","reduce","obj","item","getDayInsights","data","newData","map","date","columns","time","unshift","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekInsights","week","weekInsights","isoWeekday","toString","allDaysOfWeek","isoWeek","selectedWeek","daysOfWeek","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","getShiftSelectionInsights","shiftSelection","shiftInsights","indexOf","allSelectedDays","selectedDaysObj","selectedDays","selectedDaysInsights","parseDayInsights","days","roundedHours","hour","m","parseInt","startOf","occurrences","getCurrentWeekInsights","selectedDay","Array","from","x","add","includes","weekOccurrences","apply","weekObj","getCurrentMonthInsights","daysInMonth","monthOccurrences","monthObj","contains","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","clone","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","array","toConsumableArray","Set","getExactTimes","selectedHour","exactTimes","parseData","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","showSpinner","type","setMonthInsights","setWeekInsights","setWeekdayInsights","onShiftClick","resetShiftSelection","removeItem","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","selectDay","saveColor","isRadialChartVisible","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","modalData","timeArray","showBarChart","openModal","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","radialChart","barChart","DayLabels","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onWeekdayClick","ev","shiftKey","setState","toggle","_this2","weekArray","_","react_default","createElement","className","classNames","bold","onClick","React","Component","connect","dispatch","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","getAverageColor","rgb","g","b","filteredColors","insertMissingColors","daysArray","forEach","find","d3","getColors","oranges","year","arrDays","_loop","current","getDaysArrayByMonth","showOverview","getAdjacentDayColor","purples","purplePalette","orangePalette","range","domain","Day","isEqual","nextProps","isCurrentWeek","isCurrentMonth","isCurrentWeekday","onDayClick","console","log","refs","getBoundingClientRect","stopPropagation","formattedDay","previousDay","nextDay","isColorSaved","isPreviousColorSaved","isNextColorSaved","nextState","formatDate","fill","_this$props","isCurrentDay","getDay","Date","setHours","isSelected","interpolateColor","count","fillColor","getDayColor","showStroke","data-tip","data-for","ref","stroke","strokeWidth","width","height","rx","ry","y","getFullYear","getMonth","Card","id","onKeyDown","tabIndex","children","Month","brushEnd","selection","_d3$event$selection","slicedToArray","showMoreData","requestAnimationFrame","getWeeksInMonth","floor","getChunk","target","size","memo","index","renderMonthOverview","renderWeekOverview","renderDays","renderList","calendar_Day","getWeekIndices","firstDayOfMonth","lastDayOfMonth","weekIndices","currentDay","pop","renderWeekLabels","nrOfWeeks","offsets","textAnchor","brush","on","monthName","lastDay","firstDay","extraSpace","endReached","PureComponent","Year","ReactTooltip","rebuild","months","monthsArr","hidden","calendar_Month","dist_default","multiline","class","Section","title","Heatmap","selectAll","recalc","div","x3","Math","x4","y3","y4","style","left","top","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","addEventListener","onScreenResize","components_widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","DayLabel","pickDay","pickWeek","pickMonth","pickWeekday","getUnit","getString","selectedItem","select","unit","showArrows","previousItem","nextItem","prev","next","previous","isSameOrAfter","isSameOrBefore","XAxis","renderAxis","xAxis","xScale","ticks","tickFormat","transition","append","attr","text","transform","fontSize","YAxis","yAxis","yScale","nrOfTicks","margin","Bars","renderBars","bars","datum","plotData","interrupt","hoverIndex","darker","enter","classed","plotHeight","exit","remove","merge","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","xScaleArea","getPosition","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","formatTime","invert","hide","setLineOpacity","plotWidth","_this$props2","insights","area","y0","bottom","curve","spreadMethod","stopColor","stopOpacity","strokeDasharray","opacity","pointerEvents","onMouseLeave","onMouseOver","nativeEvent","offsetX","offsetY","Modal","hideModal","convertRange","r1","r2","display-block","display-none","src","clock","alt","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","showFooter","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","right","getData","getInsights","showAreaChart","updateScale","nice","ceil","yDomain","midnight","updatePlotSize","_this3","removeEventListener","_this4","_this$updateScale","_this$updatePlotSize","metaData","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","components_widget_Modal","barChartProps","bar_chart_DayLabel","bar_chart_BarChart","RadialChart","normalize","getPercentage","toggleFadeCss","blocks","out","visible","renderArcs","svg","sort","defaultValue","label","arcs","innerRadius","arcSize","outerRadius","arcsGrey","pieData","arc","object","pie","gText","j","attrTween","startAngle","endAngle","t","each","labelObj","centroidText","centroid","components_radial_chart_RadialChart","getDatasetOverview","uploadFile","setData","setDatasetName","showCalendar","resetColors","file","name","bytes","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","react_dropdown_dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","href","rel","githubLogo","currentTarget","githubLogoHover","pdfLogo","pdfLogoHover","widget_Upload","calendar_Heatmap","bar_chart_Container","radial_chart_RadialChartContainer","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mGCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yPCcpCC,EAAIC,EAAIC,EAAIC,iFCZVC,EAAY,SAACC,EAAWC,GAC5B,IAAMC,EAAaF,EAAUG,MAAM,KAAK,GAAGC,MAAM,GAAI,GAC/CC,EAAQJ,GAAWD,EAAUG,MAAM,KAAK,GAAIA,MAAM,KAAK,GAC7D,OAAOG,IAAOC,IAAP,GAAAC,OAAcN,GAAc,YAAYO,UAAUJ,GAAOK,OAAO,aAGnEC,EAAY,SAAAX,GAAS,OAAIM,IAAM,GAAAE,OAAIR,EAAUG,MAAM,KAAK,IAAM,eACjEO,OAAO,cAAcP,MAAM,KAAK,IAE7BS,EAAmB,SAAAC,GAAG,OAAIA,EAAIC,OAAO,SAASC,EAAKC,GAEvD,OADAD,EAAIC,IAASD,EAAIC,IAAS,GAAK,EACxBD,GACN,KAgBUE,EAAiB,SAAAC,GAC5B,IAAIC,EAAUD,EAAKE,IAAI,SAAAJ,GAAI,MAAK,CAAEK,KAAMV,EAAUK,EAAKE,EAAKI,QAAQ,KAAMC,KAAMxB,EAAUiB,EAAKE,EAAKI,QAAQ,IAAKN,EAAKE,EAAKI,QAAQ,QAEnI,OADAH,EAAQK,QAAQ,CAAEH,KAAMV,EAAUO,EAAKI,QAAQ,IAAKC,KAAMxB,EAAUmB,EAAKI,QAAQ,GAAIJ,EAAKI,QAAQ,MACnFH,EATUL,OAAO,SAAUW,EAAGC,GAG7C,OAFAD,EAAEC,EAAEL,MAAQI,EAAEC,EAAEL,OAAS,GACzBI,EAAEC,EAAEL,MAAMM,KAAKD,EAAEH,MACVE,GACN,KAQUG,EAAmB,SAACC,EAAOC,EAAaC,GACnD,IAAMC,EAAgBC,OAAOC,KAAKJ,GAC/BK,OAAO,SAAAC,GAAG,OAAI9B,IAAO8B,GAAK1B,OAAO,OAASmB,IAC1Cf,OAAO,SAACC,EAAKqB,GAEZ,OADArB,EAAIqB,GAAON,EAAYM,GAChBrB,GACN,IACCsB,EAAaJ,OAAOC,KAAKF,GAAelB,OAAO,SAACwB,EAAKF,GAEzD,OADAE,EAAIX,KAAKK,EAAcI,IAChBE,GACN,IACGC,EAAiBN,OAAOC,KAAKH,GAChCI,OAAO,SAAAC,GAAG,OAAI9B,IAAO8B,GAAK1B,OAAO,OAASmB,IAC1Cf,OAAO,SAACC,EAAKqB,GAEZ,OADArB,EAAIqB,GAAOL,EAAQK,GACZrB,GACN,IACCyB,EAAaP,OAAOQ,OAAOF,GAAgBzB,OAAO,SAACwB,EAAKI,GAS5D,OARAT,OAAOC,KAAKQ,GAAKtB,IAAI,SAAAgB,GAMnB,OALIE,EAAIK,eAAeP,GACrBE,EAAIF,IAAQM,EAAIN,GAEhBE,EAAIF,GAAOM,EAAIN,GAEV,OAEFE,GACN,IACH,MAAO,CACLM,cAAef,EACfgB,YAAaL,EACbR,cAAeK,EAAWS,SAIjBC,EAAkB,SAACC,EAAMlB,EAAaC,GACjD,IAAMkB,EAAehB,OAAOC,KAAKJ,GAC9BK,OAAO,SAAAC,GACN,OAAO9B,IAAO8B,GAAKc,WAAW,GAAGxC,OAAO,OAASsC,EAAKG,aAEvDrC,OAAO,SAACC,EAAKqB,GAEZ,OADArB,EAAIqB,GAAON,EAAYM,GAChBrB,GACN,IACCsB,EAAaJ,OAAOC,KAAKe,GAAcnC,OAAO,SAACwB,EAAKF,GAExD,OADAE,EAAIX,KAAKsB,EAAab,IACfE,GACN,IACGc,EAAgBnB,OAAOC,KAAKH,GAC/BI,OAAO,SAAAC,GAAG,OAAI9B,IAAO8B,GAAKiB,YAAcL,IACxClC,OAAO,SAACC,EAAKqB,GAEZ,OADArB,EAAIqB,GAAOL,EAAQK,GACZrB,GACN,IACCyB,EAAaP,OAAOQ,OAAOW,GAAetC,OAAO,SAACwB,EAAKI,GAS3D,OARAT,OAAOC,KAAKQ,GAAKtB,IAAI,SAAAgB,GAMnB,OALIE,EAAIK,eAAeP,GACrBE,EAAIF,IAAQM,EAAIN,GAEhBE,EAAIF,GAAOM,EAAIN,GAEV,OAEFE,GACN,IACH,MAAO,CACLgB,aAAcN,EACdO,WAAYf,EACZS,aAAcZ,EAAWS,SAmBhBU,EAAqB,SAACC,EAAS3B,EAAaC,EAAS2B,EAAiBxC,GAgCjF,IA/BA,IAAMyC,EAAkB1B,OAAOC,KAAKJ,GACjCK,OAAO,SAAAC,GAAG,OAAI9B,IAAO8B,GAAKc,eAAiB5C,IAAOmD,EAAS,OAAOP,eAClEpC,OAAO,SAACC,EAAKqB,GAEZ,OADArB,EAAIqB,GAAON,EAAYM,GAChBrB,GACN,IACCsB,EAAaJ,OAAOC,KAAKyB,GAAiB7C,OAAO,SAACwB,EAAKF,GAE3D,OADAE,EAAIX,KAAKgC,EAAgBvB,IAClBE,GACN,IACGC,EAAiBN,OAAOC,KAAKH,GAChCI,OAAO,SAAAC,GAAG,OAAI9B,IAAO8B,GAAKc,eAAiB5C,IAAOmD,EAAS,OAAOP,eAClEpC,OAAO,SAACC,EAAKqB,GAEZ,OADArB,EAAIqB,GAAOL,EAAQK,GACZrB,GACN,IACCyB,EAAaP,OAAOQ,OAAOF,GAAgBzB,OAAO,SAACwB,EAAKI,GAS5D,OARAT,OAAOC,KAAKQ,GAAKtB,IAAI,SAAAgB,GAMnB,OALIE,EAAIK,eAAeP,GACrBE,EAAIF,IAAQM,EAAIN,GAEhBE,EAAIF,GAAOM,EAAIN,GAEV,OAEFE,GACN,IAEGsB,EAASF,GAAmBA,EAAgBG,QAAQ1B,OAAO,SAAA2B,GAAG,OAAI5C,EAAKZ,IAAOwD,EAAK,cAAcpD,OAAO,iBAAgBkD,OAAS,EAEnIG,EAAa,GACRC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAWC,GAAKxB,EAAWwB,GAAKC,OAAOzB,EAAWwB,GAAKJ,GAAQM,QAAQ,GAAK,EAG9E,MAAO,CACLC,gBAAiBV,EACjBW,cAAe5B,EACfmB,gBAAiBtB,EAAWS,OAC5BiB,eAISM,EAA4B,SAACC,EAAgBpD,EAAMY,EAAaC,GAyC3E,IAxCA,IAAMwC,EAAgBtC,OAAOC,KAAKJ,GAC/BK,OAAO,SAAAC,GAAG,OAAIkC,EAAeE,QAAQlE,IAAO8B,GAAK1B,OAAO,UAAY,GACnE4D,EAAeE,QAAQlE,IAAO8B,GAAKiB,YAAc,GACjDiB,EAAeE,QAAQlE,IAAO8B,GAAK1B,OAAO,SAAW,GACrD4D,EAAeE,QAAQpC,IAAQ,GAC/BkC,EAAeE,QAAQ,QAAU,IAClC1D,OAAO,SAACC,EAAKqB,GAEZ,OADArB,EAAIqB,GAAON,EAAYM,GAChBrB,GACN,IAECsB,EAAaJ,OAAOC,KAAKqC,GAAezD,OAAO,SAACwB,EAAKF,GAEzD,OADAE,EAAIX,KAAK4C,EAAcnC,IAChBE,GACN,IAEGmC,EAAkBxC,OAAOC,KAAKH,GACjCI,OAAO,SAAAC,GAAG,OAAIkC,EAAeE,QAAQlE,IAAO8B,GAAK1B,OAAO,UAAY,GACnE4D,EAAeE,QAAQlE,IAAO8B,GAAKiB,YAAc,GACjDiB,EAAeE,QAAQlE,IAAO8B,GAAK1B,OAAO,SAAW,GACrD4D,EAAeE,QAAQpC,IAAQ,GAC/BkC,EAAeE,QAAQ,QAAU,IAClC1D,OAAO,SAACC,EAAKqB,GAEZ,OADArB,EAAIqB,GAAOL,EAAQK,GACZrB,GACN,IAECyB,EAAaP,OAAOQ,OAAOgC,GAAiB3D,OAAO,SAACwB,EAAKI,GAS7D,OARAT,OAAOC,KAAKQ,GAAKtB,IAAI,SAAAgB,GAMnB,OALIE,EAAIK,eAAeP,GACrBE,EAAIF,IAAQM,EAAIN,GAEhBE,EAAIF,GAAOM,EAAIN,GAEV,OAEFE,GACN,IAECoC,EAAkB,GACbV,EAAI,EAAGA,EAAI,GAAIA,IACtBU,EAAgBV,GAAKxB,EAAWwB,GAAKC,OAAOzB,EAAWwB,GAAKM,EAAeV,QAAQM,QAAQ,GAAK,EAGlG,MAAO,CACLI,iBACAK,aAAcnC,EACdoC,qBAAsBvC,EAAWS,OACjC4B,oBAISG,EAAmB,SAAA3D,GAC9B,IAAMY,EAAcb,EAAeC,GACnC,OAAOe,OAAOC,KAAKJ,GAAahB,OAAO,SAACwB,EAAKtB,GAY3C,IAXA,IAAM8D,EAAOhD,EAAYd,GACnB+D,EAAeD,GAAQA,EAAK1D,IAAI,SAAA4D,GAClC,IAAMC,EAAI3E,IAAM,GAAAE,OAAIQ,EAAJ,KAAAR,OAAYwE,IAC5B,OAAOE,SAASD,EAAEE,QAAQ,QAAQzE,OAAO,SAGvC0E,EAAcL,GAAgBA,EAAajE,OAAO,SAACwB,EAAKtB,GAE5D,OADAsB,EAAItB,IAASsB,EAAItB,IAAS,GAAK,EACxBsB,GACN,IACCvB,EAAM,GACDiD,EAAI,EAAGA,GAAK,GAAIA,IACvBjD,EAAIiD,GAAKoB,EAAYpB,IAAM,EAG7B,OADA1B,EAAItB,GAAQoE,EACL9C,GACN,KAGQ+C,EAAyB,SAACnE,EAAMoE,EAAaxD,GACxD,IAAMgD,EAAOS,MAAMC,KAAK,CAAC5B,OAAQ,GAAI,SAAC6B,EAAGzB,GAAJ,OAAU1D,IAAOgF,GAAaH,QAAQ,WAAWO,IAAI1B,EAAG,QAAQtD,OAAO,gBAExGuC,EADchB,OAAOC,KAAKhB,GAAMiB,OAAO,SAAAC,GAAG,OAAI0C,EAAKa,SAASvD,KACnCtB,OAAO,SAACwB,EAAKtB,GAExC,OADAsB,EAAIX,KAAK,CAAEmC,IAAK9C,EAAMoE,YAAatD,EAAYd,KACxCsB,GACN,IACHW,EAAeA,EAAa7B,IAAI,SAAA4B,GAAI,OAClCA,EAAKoC,YAAYhE,IAAI,SAAAJ,GACnB,IAAMiE,EAAI3E,IAAM,GAAAE,OAAIwC,EAAKc,IAAT,KAAAtD,OAAgBQ,IAChC,OAAOkE,SAASD,EAAEE,QAAQ,QAAQzE,OAAO,WAU7C,IAPA,IAAMkD,EAASkB,EAAK3C,OAAO,SAAAnB,GAAI,OAAIE,EAAKF,KAAO4C,OACzCgC,EAAkB,GAAGpF,OAAOqF,MAAM,GAAI5C,GAAcnC,OAAO,SAACwB,EAAKtB,GAErE,OADAsB,EAAItB,IAASsB,EAAItB,IAAS,GAAK,EACxBsB,GACN,IACCwD,EAAU,GAEL9B,EAAI,EAAGA,EAAI,GAAIA,IACtB8B,EAAQ9B,GAAK4B,EAAgB5B,GAAKC,OAAO2B,EAAgB5B,GAAKJ,GAAQM,QAAQ,GAAK,EAErF,OAAO4B,GAGIC,EAA0B,SAAC7E,EAAMoE,EAAaxD,GACzD,IAAMgD,EAAOS,MAAMC,KAAK,CAAC5B,OAAQtD,IAAOgF,GAAaU,eAAgB,SAACP,EAAGzB,GAAJ,OAAU1D,IAAOgF,GAAaH,QAAQ,YAAYO,IAAI1B,EAAG,QAAQtD,OAAO,gBAEzIsB,EADeC,OAAOC,KAAKhB,GAAMiB,OAAO,SAAAC,GAAG,OAAI0C,EAAKa,SAASvD,KAClCtB,OAAO,SAACwB,EAAKtB,GAE1C,OADAsB,EAAIX,KAAK,CAAEmC,IAAK9C,EAAMoE,YAAatD,EAAYd,KACxCsB,GACN,IACHN,EAAgBA,EAAcZ,IAAI,SAAAS,GAAK,OACrCA,EAAMuD,YAAYhE,IAAI,SAAAJ,GACpB,IAAMiE,EAAI3E,IAAM,GAAAE,OAAIqB,EAAMiC,IAAV,KAAAtD,OAAiBQ,IACjC,OAAOkE,SAASD,EAAEE,QAAQ,QAAQzE,OAAO,WAS7C,IANA,IAAMkD,EAASkB,EAAK3C,OAAO,SAAAnB,GAAI,OAAIE,EAAKF,KAAO4C,OACzCqC,EAAmB,GAAGzF,OAAOqF,MAAM,GAAI7D,GAAelB,OAAO,SAACwB,EAAKtB,GAEvE,OADAsB,EAAItB,IAASsB,EAAItB,IAAS,GAAK,EACxBsB,GACN,IACC4D,EAAW,GACNlC,EAAI,EAAGA,EAAI,GAAIA,IACtBkC,EAASlC,GAAKiC,EAAiBjC,GAAKC,OAAOgC,EAAiBjC,GAAIJ,GAAQM,QAAQ,GAAK,EAEvF,OAAOgC,GAIHC,EAAW,SAACnF,EAAMH,GAEtB,IADA,IAAImD,EAAInD,EAAI+C,OACLI,KACL,GAAInD,EAAImD,KAAOhD,EACb,OAAO,EAGX,OAAO,GAGIoF,EAAiB,SAACd,EAAapE,GAO1C,IANA,IAAMmF,EAAc/F,IAAOgF,GAAaH,QAAQ,WAC1CmB,EAAYhG,IAAOgF,GAAaiB,MAAM,WAExC1C,EAAU,GACV2C,EAAUH,EAEPG,GAAWF,GAChBH,EAAS7F,IAAOkG,GAAS9F,OAAO,cAAeuB,OAAOC,KAAKhB,KAAU2C,EAAQlC,KAAKrB,IAAOkG,GAAS9F,OAAO,eACzG8F,EAAUA,EAAQC,QAAQf,IAAI,EAAG,KAGnC,OAAO7B,GAGI6C,EAAkB,SAACpB,EAAapE,GAO3C,IANA,IAAMyF,EAAerG,IAAOgF,GAAaH,QAAQ,SAC3CyB,EAAatG,IAAOgF,GAAaiB,MAAM,SAEzC1C,EAAU,GACV2C,EAAUG,EAEPH,GAAWI,GAChBT,EAAS7F,IAAOkG,GAAS9F,OAAO,cAAeuB,OAAOC,KAAKhB,KAAU2C,EAAQlC,KAAKrB,IAAOkG,GAAS9F,OAAO,eACzG8F,EAAUA,EAAQC,QAAQf,IAAI,EAAG,KAGnC,OAAO7B,GAGIgD,EAAqB,SAACvB,EAAapE,GAO9C,IANA,IAAM4F,EAAQxG,IAAOgF,GAAaH,QAAQ,QACpC4B,EAAMzG,IAAOgF,GAAaiB,MAAM,QAElC1C,EAAU,GACV2C,EAAUlG,IAAOgF,GAEdkB,GAAWO,GAChBZ,EAAS7F,IAAOkG,GAAS9F,OAAO,cAAeuB,OAAOC,KAAKhB,KAAU2C,EAAQlC,KAAKrB,IAAOkG,GAAS9F,OAAO,eACzG8F,EAAUA,EAAQC,QAAQf,IAAI,EAAG,KAMnC,IAHA,IAAIsB,EAAW,GACXC,EAAW3G,IAAOgF,GAEf2B,GAAYH,GACjBX,EAAS7F,IAAO2G,GAAUvG,OAAO,cAAeuB,OAAOC,KAAKhB,KAAU8F,EAASrF,KAAKrB,IAAO2G,GAAUvG,OAAO,eAC5GuG,EAAWA,EAASR,QAAQS,SAAS,EAAG,KAG1C,IAAMC,EAAKlF,OAAAmF,EAAA,EAAAnF,CAAO,IAAIoF,IAAIxD,EAAQrD,OAAOwG,KAEzC,MAAO,CACLnD,QAASsD,EACTvD,OAAQuD,EAAMvD,SAIL0D,EAAgB,SAACC,EAAc1G,GAC1C,IAAM2G,EAAa3G,EAAIsB,OAAO,SAAA6B,GAAC,OAAI1D,IAAO0D,EAAG,YAAYtD,OAAO,QAAUJ,IAAOiH,EAAarG,KAAM,KAAKR,OAAO,QAChH,OAAOE,EAAiB4G,EAAWpG,IAAI,SAAA4C,GAAC,OAAI1D,IAAO0D,EAAG,YAAYtD,OAAO,aAG5D+G,EA/VG,SAAAvG,GAChB,IACIC,EADgBD,EAAKE,IAAI,SAAAJ,GAAI,OAAKA,EAAKE,EAAKI,QAAQ,IAAKoG,QAAQ,SAAU,MACrDtG,IAAI,SAAAJ,GAAI,MAAK,CAAE2G,UAAWhH,EAAUK,MAC9DG,EAAQK,QAAQ,CAAEmG,UAAWhH,EAAUO,EAAKI,QAAQ,MACpD,IAAMmE,EAAItE,EAAQC,IAAI,SAAAJ,GAAI,OAAIA,EAAK2G,YACnC,OAAO/G,EAAiB6E,ICPpBmC,EAAe,CACnB1G,KAAM,GACN2G,QAAS,GACTC,QAAS,KACTC,QAAS,KACTjG,YAAa,GACbmB,aAAc,GACdjB,cAAe,GACfa,YAAa,GACbS,aAAc,KACdV,cAAe,KACf0B,eAAgB,GAChBX,gBAAiB,GACjBS,cAAe,GACfb,WAAY,GACZY,gBAAiB,KACjB6D,YAAa,GACbC,MAAO,GACPlG,QAAS,GACTmG,aAAa,EACbC,kBAAkB,GA4EPC,EAAc,SAAA1F,GAAG,MAAK,CAAE2F,KAxGhB,eAwGoC3F,QAC5C4F,EAAmB,SAAA5F,GAAG,MAAK,CAAE2F,KAvGf,qBAuGyC3F,QACvD6F,EAAkB,SAAA7F,GAAG,MAAK,CAAE2F,KAzGf,oBAyGwC3F,QACrD8F,EAAqB,SAAA9F,GAAG,MAAK,CAAE2F,KAxGf,uBAwG2C3F,QAC3D+F,EAAe,SAAA/F,GAAG,MAAK,CAAE2F,KAxGf,iBAwGqC3F,QAC/CgG,EAAsB,SAAAhG,GAAG,MAAK,CAAE2F,KAvGf,wBAuG4C3F,QAC7DiG,EAAa,SAAAjG,GAAG,MAAK,CAAE2F,KAzGhB,cAyGmC3F,QC3GjDkF,EAAe,CACnBgB,mBAAmB,EACnBC,UAAW,EACXC,SAAUC,OAAOC,WAAa,IAC9BC,WAAYF,OAAOC,WAAa,IAChCE,YAA+B,kBAAXH,OAAsBA,OAAOC,WAAa,KAC9D1D,YAAa,KACb6D,YAAa,KACbC,aAAc,KACd1F,gBAAiB,KACjB2F,MAAO,KACPC,OAAQ,IAqDGC,EAAY,SAAA7G,GAAG,MAAK,CAAE2F,KApEhB,aAoEkC3F,QACxC8G,EAAY,SAAA9G,GAAG,MAAK,CAAE2F,KApEhB,aAoEkC3F,QCvE/CkF,EAAe,CACnB6B,sBAAsB,EACtBnE,YAAa,MCITsC,EAAe,CACnB8B,mBAAmB,EACnBC,kBAAkB,EAClBC,mBAAmB,EACnBC,qBAAqB,EACrBC,UAAW,KACXC,UAAW,IA+CAC,EAAe,SAAAtH,GAAG,MAAK,CAAE2F,KA5Df,iBA4DqC3F,QAC/CiH,EAAmB,SAAAjH,GAAG,MAAK,CAAE2F,KA5Df,qBA4DyC3F,QACvDkH,EAAoB,SAAAlH,GAAG,MAAK,CAAE2F,KA5Df,sBA4D0C3F,QACzDmH,EAAsB,SAAAnH,GAAG,MAAK,CAAE2F,KA5Df,wBA4D4C3F,QAC7DuH,EAAY,SAAAvH,GAAG,MAAK,CAAE2F,KA5DhB,aA4DkC3F,QCrDtCwH,EAPKC,YAAgB,CAClCC,IJ8Ba,WAAkC,IAAjCC,EAAiCC,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAzB1C,EAAc4C,EAAWF,UAAA1G,OAAA,EAAA0G,UAAA,QAAAC,EAC/C,OAAQC,EAAOnC,MACb,IApCa,WAqCX,IAAMnH,EAAOuG,EAAU+C,EAAO9H,KACxB+H,EAAUxI,OAAOC,KAAKhB,GAAME,IAAI,SAAAsJ,GAAC,OAAIpK,IAAOoK,KAClD,OAAOzI,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEExC,QAAS2C,EAAO9H,IAChBxB,OACAY,YAAab,EAAeuJ,EAAO9H,KACnCoF,QAASxH,IAAOsK,IAAIH,GACpB1C,QAASzH,IAAOuK,IAAIJ,GACpB1I,QAAS8C,EAAiB2F,EAAO9H,OAErC,IA/CgB,cAgDd,OAAOT,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEEpC,MAAOuC,EAAO9H,MAElB,IAnDqB,mBAoDnB,OAAOT,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEErC,YAAawC,EAAO9H,MAExB,IAvDiB,eAwDf,OAAOT,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEElC,iBAAkBqC,EAAO9H,MAE7B,IA1DuB,qBA2DrB,OAAOT,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEErI,cAAewI,EAAO9H,IAAIV,cAC1Ba,YAAa2H,EAAO9H,IAAIG,YACxBD,cAAe4H,EAAO9H,IAAIE,gBAE9B,IAhEyB,uBAiEvB,OAAOX,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEE1G,gBAAiB6G,EAAO9H,IAAIiB,gBAC5BS,cAAeoG,EAAO9H,IAAI0B,cAC1BD,gBAAiBqG,EAAO9H,IAAIyB,kBAEhC,IAzEsB,oBA0EpB,OAAOlC,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEEpH,aAAcuH,EAAO9H,IAAIO,aACzBM,WAAYiH,EAAO9H,IAAIa,WACvBD,aAAckH,EAAO9H,IAAIY,eAE7B,IA7EmB,iBA8EjB,OAAOrB,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEE/F,eAAerC,OAAAmF,EAAA,EAAAnF,CAAK,IAAIoF,IAAIgD,EAAM/F,eAAe9D,OAAOgK,EAAO9H,SAEnE,IAjFgB,cAkFd,OAAOT,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEE/F,eAAgB+F,EAAM/F,eAAenC,OAAO,SAAAnB,GAAI,OAAIA,IAASwJ,EAAO9H,QAExE,IArF0B,wBAsFxB,OAAOT,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEE/F,eAAgB,KAEpB,QACE,OAAO+F,II/FXS,SHea,WAAkC,IAAjCT,EAAiCC,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAzB1C,EAAc4C,EAAWF,UAAA1G,OAAA,EAAA0G,UAAA,QAAAC,EAC/C,OAAQC,EAAOnC,MACb,IAvBkB,gBAwBhB,OAAOpG,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEEzB,kBAAmB4B,EAAO9H,MAE9B,IA3BgB,cA4Bd,OAAOT,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEExB,UAAWwB,EAAMxB,UAAY2B,EAAO9H,MAExC,IA/BkB,gBAgChB,OAAOT,OAAO8I,OAAO,GAAIV,EAAO,CAC9BnB,YAAaH,OAAOC,WACpBF,SAAUC,OAAOC,WAAa,IAC9BC,WAAYF,OAAOC,WAAa,MAEpC,IApCe,aAqCb,IAAM1D,EAAckF,EAAO9H,KAAO8H,EAAO9H,IAAIoB,IACvCuF,EAAQmB,EAAO9H,KAAO8H,EAAO9H,IAAI2G,MACjCnI,EAAOsJ,EAAO9H,KAAO8H,EAAO9H,IAAIxB,KACtC,OAAOe,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEE/E,cACA+D,QACAF,YAAa/C,EAAed,EAAapE,GACzCkI,aAAc1C,EAAgBpB,EAAapE,GAC3CwC,gBAAiBmD,EAAmBvB,EAAapE,KAErD,IA/Ce,aAgDb,OAAOe,OAAO8I,OAAO,GAAIV,EAAO,CAC9Bf,OAAOrH,OAAAmF,EAAA,EAAAnF,CAAK,IAAIoF,IAAIgD,EAAMf,OAAO9I,OAAO,CACpCsD,IAAK0G,EAAO9H,IAAIoB,IAChBzD,MAAOmK,EAAO9H,IAAIrC,YAG1B,IArDiB,eAsDf,OAAO4B,OAAA0I,EAAA,EAAA1I,CAAA,GACJoI,EADH,CAEEf,OAAQ,KAEZ,QACE,OAAOe,IGzDXW,YFDa,WAAkC,IAAjCX,EAAiCC,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAzB1C,EAAc4C,EAAWF,UAAA1G,OAAA,EAAA0G,UAAA,QAAAC,EAC/C,OAAQC,EAAOnC,MACb,IAVsB,oBAWpB,OAAOpG,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEEZ,qBAAsBe,EAAO9H,MAEjC,IAde,aAeb,OAAOT,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEE/E,YAAakF,EAAO9H,MAExB,QACE,OAAO2H,IEXXY,SDQa,WAAkC,IAAjCZ,EAAiCC,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAzB1C,EAAc4C,EAAWF,UAAA1G,OAAA,EAAA0G,UAAA,QAAAC,EAC/C,OAAQC,EAAOnC,MACb,IAlBmB,iBAmBjB,OAAOpG,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEEX,kBAAmBc,EAAO9H,IAC1BiH,kBAAkB,EAClBC,mBAAmB,EACnBC,qBAAqB,IAEzB,IAzBuB,qBA0BrB,OAAO5H,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEEV,iBAAkBa,EAAO9H,IACzBkH,mBAAmB,EACnBC,qBAAqB,IAEzB,IA/BwB,sBAgCtB,OAAO5H,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEET,kBAAmBY,EAAO9H,IAC1BiH,kBAAkB,EAClBE,qBAAqB,IAEzB,IArC0B,wBAsCxB,OAAO5H,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEER,oBAAqBW,EAAO9H,IAC5BiH,kBAAkB,EAClBC,mBAAmB,IAEvB,IA3Ce,aA4Cb,OAAO3H,OAAA0I,EAAA,EAAA1I,CAAA,GACFoI,EADL,CAEEP,UAAWU,EAAO9H,KAAO8H,EAAO9H,IAAIxB,KACpC6I,UAAWS,EAAO9H,IAAM4E,EAAckD,EAAO9H,IAAIxB,KAAMsJ,EAAO9H,IAAI7B,KAAO,KAE7E,IAhDU,QAiDR,OAAO+G,EACT,QACE,OAAOyC,8FEhDPa,eACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnJ,OAAAoJ,EAAA,EAAApJ,CAAAqJ,KAAAJ,IACjBE,EAAAnJ,OAAAsJ,GAAA,EAAAtJ,CAAAqJ,KAAArJ,OAAAuJ,GAAA,EAAAvJ,CAAAiJ,GAAAO,KAAAH,KAAMH,KAMRO,eAAiB,SAACC,EAAI7H,GACpB,GAAI6H,EAAGC,SACLR,EAAKS,SAAS,CACZC,QAASV,EAAKf,MAAMyB,SAEtBV,EAAKf,MAAMyB,OAASV,EAAKD,MAAM1C,aAAa3E,GAAOsH,EAAKD,MAAMxC,WAAW7E,OACpE,CACLsH,EAAKD,MAAM5B,UAAU,MACrB6B,EAAKD,MAAMzC,sBACX0C,EAAKD,MAAM7C,iBAAiB,CAC1BtG,cAAe,GACfa,YAAa,KAEf,IAAMc,EAAkBH,EAAmBM,EAAKsH,EAAKD,MAAMrJ,YAAasJ,EAAKD,MAAMpJ,SACnFqJ,EAAKD,MAAM3C,mBAAmB,CAC5BrE,gBAAiBR,EAAgBQ,gBACjCC,cAAeT,EAAgBS,cAC/BT,gBAAiBA,EAAgBA,kBAEnCyH,EAAKD,MAAMnB,cAAa,GACxBoB,EAAKS,SAAS,CACZC,QAAQ,MA1BZV,EAAKf,MAAQ,CACXyB,QAAQ,GAHOV,0EAiCV,IAAAW,EAAAT,KACDU,EAAYzG,MAAMM,MAAM,KAAMN,MAAM,IAAInE,IAAI,SAAU6K,EAAGjI,GAC7D,OAAO1D,IAAO0D,EAAG,KAAKmB,QAAQ,QAAQjC,WAAWc,EAAE,GAAGtD,OAAO,SAG/D,OACEwL,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,wBAEXJ,EAAU5K,IAAI,SAAA0C,GAAG,OACfoI,EAAAxK,EAAAyK,cAAA,QACE/J,IAAK0B,EACLsI,UAAWC,KAAW,aAAc,CAACC,KAAQP,EAAKZ,MAAMhH,kBAAoBL,GAAOiI,EAAKZ,MAAM7G,eAAeE,QAAQV,IAAQ,IAC7HyI,QAAS,SAAAZ,GAAE,OAAII,EAAKL,eAAeC,EAAI7H,KAEtCA,aAhDS0I,IAAMC,WA0EfC,eAjBS,SAAArC,GAAK,MAAK,CAChCtI,QAASsI,EAAMD,IAAIrI,QACnBD,YAAauI,EAAMD,IAAItI,YACvBqC,gBAAiBkG,EAAMD,IAAIjG,gBAC3BG,eAAgB+F,EAAMD,IAAI9F,iBAGD,SAAAqI,GAAQ,MAAK,CACtCnE,mBAAoB,SAAA9F,GAAG,OAAIiK,EAASnE,EAAmB9F,KACvD4F,iBAAkB,SAAA5F,GAAG,OAAIiK,EAASrE,EAAiB5F,KACnDsH,aAAc,SAAAtH,GAAG,OAAIiK,EAAS3C,EAAatH,KAC3C6G,UAAW,SAAA7G,GAAG,OAAIiK,EAASpD,EAAU7G,KACrC+F,aAAc,SAAA/F,GAAG,OAAIiK,EAASlE,EAAa/F,KAC3CgG,oBAAqB,SAAAhG,GAAG,OAAIiK,EAASjE,EAAoBhG,KACzDiG,WAAY,SAAAjG,GAAG,OAAIiK,EAAShE,EAAWjG,OAG1BgK,CAA6CxB,IChD7CwB,eATS,SAAArC,GAAK,MAAK,CAChCvC,QAASuC,EAAMD,IAAItC,QACnBC,QAASsC,EAAMD,IAAIrC,UAGM,SAAA4E,GAAQ,MAAK,CACtCC,WAAY,SAAAlK,GAAG,OAAIiK,ELsCK,SAAAjK,GAAG,MAAK,CAAE2F,KApEhB,cAoEmC3F,OKtCzBkK,CAAWlK,OAG1BgK,CA9BG,SAAAvB,GAChB,IAAM0B,EAAevM,IAAO6K,EAAMrD,SAASZ,SAAS,EAAG,SAASxG,OAAO,QACjEoM,EAAWxM,IAAO6K,EAAMpD,SAASrC,IAAI,EAAG,SAAShF,OAAO,QACxDqM,EAAoBF,GAAgB1B,EAAMrD,QAAQpH,OAAO,QACzDsM,EAAgBF,GAAY3B,EAAMpD,QAAQrH,OAAO,QAEvD,OACEwL,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,cACbF,EAAAxK,EAAAyK,cAAA,KACEC,UAAWC,KAAW,sBAAuB,CAACY,UAAaF,IAC3DR,QAAS,kBAAMQ,GAAqB5B,EAAMyB,YAAY,MAEtDzB,EAAMrD,QAAQpH,OAAO,QACvBwL,EAAAxK,EAAAyK,cAAA,KACEC,UAAWC,KAAW,uBAAwB,CAACY,UAAaD,IAC5DT,QAAS,kBAAMS,GAAiB7B,EAAMyB,WAAW,0BCN5CM,GAAkB,SAAA/B,GAC7B,IAAIgC,EAAM,CACR1L,EAAG,EACH2L,EAAG,EACHC,EAAG,GAEDC,EAAiB,GACfC,EAAsB,SAAAC,GAC1BA,EAAUC,QAAQ,SAAA3J,GAChB,IAAKwJ,EAAeI,KAAK,SAAArE,GAAK,OAAI/I,IAAO+I,EAAMvF,IAAK,cAAcpD,OAAO,gBAAkBoD,IAAM,CAC/F,IAAMzD,EAAQsN,KAASC,GAAUzC,EAAMjK,MAAM2M,QAAQ1C,EAAMjK,KAAK4C,KAChEwJ,EAAe3L,KAAK,CAClBmC,MACAzD,cAKJ8K,EAAM7H,eACRgK,EAAiBnC,EAAM7B,OAAOnH,OAAO,SAAAkH,GAAK,OAAI/I,IAAO+I,EAAMvF,KAAKT,YAAc8H,EAAM7H,cAAgB+F,IAEpGkE,EADkBtL,OAAOC,KAAKiJ,EAAMpJ,SAASI,OAAO,SAAAC,GAAG,OAAI9B,IAAO8B,GAAKiB,YAAc8H,EAAM7H,iBAIzF6H,EAAMvI,gBACR0K,EAAiBnC,EAAM7B,OAAOnH,OAAO,SAAAkH,GAAK,OAAI/I,IAAO+I,EAAMvF,IAAK,cAAcpD,OAAO,OAASyK,EAAMvI,eAAiByG,IAErHkE,EAvCwB,SAAC1L,EAAOiM,EAAM5M,GAIxC,IAHA,IAAI8E,EAAc1F,IAAOuB,EAAO,KAAKmE,cAC/B+H,EAAU,GAFiCC,EAAA,WAK/C,IAAMC,EAAU3N,IAAOuB,EAAO,KAAKR,KAAK2E,GAAatF,OAArC,GAAAF,OAA+CsN,EAA/C,WAChB7L,OAAOC,KAAKhB,GAAMwM,KAAK,SAAAtL,GAAG,OAAIA,IAAQ6L,KAAYF,EAAQpM,KAAKsM,GAC/DjI,KAHIA,GAAagI,IAKnB,OAAOD,EA6BaG,CAAoB/C,EAAMvI,cAAetC,IAAO6K,EAAMrD,SAASpH,OAAO,QAASyK,EAAMjK,QAIrGiK,EAAMhH,kBACRmJ,EAAiBnC,EAAM7B,OAAOnH,OAAO,SAAAkH,GAAK,OAAI/I,IAAO+I,EAAMvF,IAAK,cAAcpD,OAAO,SAAWyK,EAAMhH,iBAAmBkF,IAEzHkE,EADkBtL,OAAOC,KAAKiJ,EAAMpJ,SAASI,OAAO,SAAAC,GAAG,OAAI9B,IAAO8B,GAAKc,eAAiB5C,IAAO6K,EAAMhH,gBAAiB,OAAOjB,iBAU/H,OANAoK,EAAeG,QAAQ,SAAApE,GACrB8D,EAAI1L,GAAK4H,EAAMhJ,MAAMoB,EACrB0L,EAAIC,GAAK/D,EAAMhJ,MAAM+M,EACrBD,EAAIE,GAAKhE,EAAMhJ,MAAMgN,IAGhBM,KAAOR,EAAI1L,EAAI6L,EAAe1J,OAAQuJ,EAAIC,EAAIE,EAAe1J,OAAQuJ,EAAIE,EAAIC,EAAe1J,SAG/FuC,GAAW,SAACtF,EAAKsN,EAAcnN,GACnC,GAAIH,GAAOsN,EAAc,CAEvB,IADA,IAAInK,EAAInD,EAAI+C,OACLI,KACL,GAAInD,EAAImD,KAAOhD,EACb,OAAO,EAGX,OAAO,IAIEoN,GAAsB,SAACjD,EAAOrH,GACzC,IAAM9C,EAAOiB,OAAOC,KAAKiJ,EAAMjK,MAAMwM,KAAK,SAAAtL,GAAG,OAAI9B,IAAO8B,EAAK,cAAc1B,OAAO,gBAAkBoD,IACpG,OAAI9C,EACK2M,KAASC,GAAUzC,EAAMjK,MAAM2M,QAAQ1C,EAAMjK,KAAKF,KAEpD,WAGI4M,GAAY,SAAA1M,GACvB,IAAM0J,EAAM+C,KAAO1L,OAAOQ,OAAOvB,IAC3B2J,EAAM8C,KAAO1L,OAAOQ,OAAOvB,IACjC,MAAO,CACLmN,QAASC,GAAc1D,EAAKC,GAC5BgD,QAASU,GAAc3D,EAAKC,KAI1ByD,GAAgB,SAAC1D,EAAKC,GAC1B,IAAMH,GAAKG,EAAID,GAAK,GACpB,OAAO+C,OACJa,MAAM,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,YACrMC,OAAO,CAAC7D,EAAIF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,EAAEE,EAAI,GAAGF,KAG9K6D,GAAgB,SAAC3D,EAAKC,GAC1B,IAAMH,GAAKG,EAAID,GAAK,GACpB,OAAO+C,OACJa,MAAM,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,YACjGC,OAAO,CAAC7D,EAAIF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,EAAEF,EAAEE,EAAI,GAAGF,KCrFpFgE,eACJ,SAAAA,EAAYvD,GAAO,IAAAC,EAAA,OAAAnJ,OAAAoJ,EAAA,EAAApJ,CAAAqJ,KAAAoD,IACjBtD,EAAAnJ,OAAAsJ,GAAA,EAAAtJ,CAAAqJ,KAAArJ,OAAAuJ,GAAA,EAAAvJ,CAAAyM,GAAAjD,KAAAH,KAAMH,KAiBRwD,QAAU,SAAAC,GACR,IAAMC,EAAiBD,EAAUzF,aAAeyF,EAAUzF,YAAYxD,SAASrF,IAAO8K,EAAKD,MAAMrH,KAAKpD,OAAO,gBAC1G0K,EAAKD,MAAMhC,aAAeiC,EAAKD,MAAMhC,YAAYxD,SAASrF,IAAOsO,EAAU9K,KAAKpD,OAAO,eACpFoO,EAAkBF,EAAUxF,cAAgBwF,EAAUxF,aAAazD,SAASrF,IAAO8K,EAAKD,MAAMrH,KAAKpD,OAAO,gBAC7G0K,EAAKD,MAAM/B,cAAgBgC,EAAKD,MAAM/B,aAAazD,SAASrF,IAAOsO,EAAU9K,KAAKpD,OAAO,eACtFqO,EAAoBH,EAAUlL,iBAAmBkL,EAAUlL,gBAAgBG,QAAQ8B,SAASrF,IAAO8K,EAAKD,MAAMrH,KAAKpD,OAAO,gBAC7H0K,EAAKD,MAAMzH,iBAAmB0H,EAAKD,MAAMzH,gBAAgBG,QAAQ8B,SAASrF,IAAOsO,EAAU9K,KAAKpD,OAAO,eAC1G,OAAOmO,GAAiBC,GAAkBC,GAzBzB3D,EA4BnB4D,WAAa,SAACrD,EAAI7H,EAAKuF,GACrB4F,QAAQC,IAAI9D,EAAK+D,KAAKrL,IAAIsL,yBAC1BzD,EAAG0D,kBACH,IAAMC,EAAehP,IAAOwD,GAAKpD,OAAO,cACxC,GAAIiL,EAAGC,SACLR,EAAKS,SAAS,CACZC,QAASV,EAAKf,MAAMyB,SAEtBV,EAAKf,MAAMyB,OAASV,EAAKD,MAAM1C,aAAa6G,GAAgBlE,EAAKD,MAAMxC,WAAW2G,OAC7E,CACLlE,EAAKD,MAAM7C,iBAAiB,CAC1B1F,cAAe,KACfZ,cAAe,GACfa,YAAa,KAEfuI,EAAKD,MAAM3C,mBAAmB,CAC5BrE,gBAAiB,KACjBC,cAAe,GACfT,gBAAiB,KAEnByH,EAAKD,MAAM5C,gBAAgB,CACzBjF,aAAc,KACdC,WAAY,GACZN,aAAc,KAEhBmI,EAAKD,MAAMzC,sBACX,IAAMW,EAAQsE,KAASC,GAAUxC,EAAKD,MAAMjK,MAAM2M,QAAQzC,EAAKD,MAAMjK,KAAKoO,KAC1ElE,EAAKD,MAAM5B,UAAU,CAAEzF,MAAKuF,QAAOnI,KAAMkK,EAAKD,MAAMjK,OACpDkK,EAAKD,MAAMnB,cAAa,GACxB,IAAMuF,EAAcjP,IAAOwD,GAAKoD,SAAS,EAAG,KAAKxG,OAAO,cAClD8O,EAAUlP,IAAOwD,GAAK4B,IAAI,EAAG,KAAKhF,OAAO,cACzC+O,EAAerE,EAAKD,MAAM7B,OAAOoE,KAAK,SAAArE,GAAK,OAAIA,EAAMvF,MAAQxD,IAAOwD,GAAKpD,OAAO,gBAChFgP,EAAuBtE,EAAKD,MAAM7B,OAAOoE,KAAK,SAAArE,GAAK,OAAIA,EAAMvF,MAAQyL,IACrEI,EAAmBvE,EAAKD,MAAM7B,OAAOoE,KAAK,SAAArE,GAAK,OAAIA,EAAMvF,MAAQ0L,KACtEC,GAAgBrE,EAAKD,MAAM3B,UAAU,CAAE1F,IAAKxD,IAAOwD,GAAKpD,OAAO,cAAeL,MAAOgJ,KACrFqG,GAAwBtE,EAAKD,MAAM3B,UAAU,CAAE1F,IAAKyL,EAAalP,MAAO+N,GAAoBhD,EAAKD,MAAOoE,MACxGI,GAAoBvE,EAAKD,MAAM3B,UAAU,CAAE1F,IAAK0L,EAASnP,MAAO+N,GAAoBhD,EAAKD,MAAOqE,OA9DnGpE,EAAKf,MAAQ,CACXyB,QAAQ,GAHOV,uFAOGwD,EAAWgB,GAC/B,IAAMC,EAAa,SAAAxO,GAAI,OAAIf,IAAOe,GAAMX,OAAO,aAC/C,OAAOmP,EAAWvE,KAAKH,MAAMrH,OAAS+L,EAAWjB,EAAUtJ,cACzDuK,EAAWjB,EAAU9K,OAAS+L,EAAWvE,KAAKH,MAAM7F,cACpDgG,KAAKH,MAAM7H,eAAiBsL,EAAUtL,cACtCgI,KAAKqD,QAAQC,IACbtD,KAAKH,MAAM2E,OAASlB,EAAUkB,MAC9BxE,KAAKH,MAAM7G,iBAAmBsK,EAAUtK,gBACxCgH,KAAKH,MAAMrC,WAAa8F,EAAU9F,0CAqD7B,IAAAiD,EAAAT,KACDH,EAAQG,KAAKH,MADZ4E,EAE0BzE,KAAKH,MAA9BlC,EAFD8G,EAEC9G,WAAYH,EAFbiH,EAEajH,SACd4B,EAAIS,EAAMrH,IAEZkM,GAAe,EACf1P,IAAOoK,GAAGhK,OAAO,cAAgBJ,IAAO6K,EAAM7F,aAAa5E,OAAO,cACpEsP,GAAe,GAEjB,IAAMlM,EAAM,SAAA4G,GAAC,OAAKA,EAAEuF,SAAW,GAAK,GAClCjN,EAAO2K,KAAc,MAEjBtE,EDOiB,SAAC8B,EAAO6E,GACjC,IAAMhP,EAAOiB,OAAOC,KAAKiJ,EAAMjK,MAAMwM,KAAK,SAAAtL,GAAG,OAAI,IAAI8N,KAAK9N,GAAK+N,SAAS,EAAE,EAAE,EAAE,KAAOhF,EAAMrH,IAAIqM,SAAS,EAAE,EAAE,EAAE,KAE9G,GAAInP,EAAM,CACR,IAAM8C,EAAMxD,IAAO6K,EAAMrH,KAAKpD,OAAO,cAE/BmO,EAAgB1I,GAASgF,EAAMhC,YAAagC,EAAMxB,iBAAkB7F,IACvEqH,EAAM7H,cAAgB6H,EAAM7H,eAAiBhD,IAAO6K,EAAMrH,KAAKT,aAC7D8H,EAAM7G,eAAeV,QAAUuH,EAAM7G,eAAeE,QAAQlE,IAAO6K,EAAMrH,KAAKT,YAAc,EAC3FyL,EAAiB3I,GAASgF,EAAM/B,aAAc+B,EAAMvB,kBAAmB9F,IAC1EqH,EAAMvI,eAAiBuI,EAAMvI,gBAAkBtC,IAAO6K,EAAMrH,KAAKpD,OAAO,QACtEyK,EAAM7G,eAAeV,QAAUuH,EAAM7G,eAAeE,QAAQlE,IAAO6K,EAAMrH,KAAKpD,OAAO,UAAY,EAChGqO,EAAmB5I,GAASgF,EAAMzH,gBAAgBG,QAASsH,EAAMtB,oBAAqB/F,IACzFqH,EAAMhH,iBAAmBgH,EAAMhH,kBAAoB7D,IAAO6K,EAAMrH,KAAKpD,OAAO,UAC1EyK,EAAM7G,eAAeV,QAAUuH,EAAM7G,eAAeE,QAAQlE,IAAO6K,EAAMrH,KAAKpD,OAAO,SAAW,EAC/F0P,IAAejF,EAAM7G,eAAeV,SACvCuH,EAAM7G,eAAeE,QAAQlE,IAAO6K,EAAMrH,KAAKpD,OAAO,gBAAkB,GACvEyK,EAAM7G,eAAeE,QAAQ,QAAU,GAErC8E,EAASsE,GAAUzC,EAAMjK,MACzBmP,EAAoBL,GAAgBI,GAAcvB,GAAiBC,GAAkBC,EAAoBzF,EAAOuE,QAAQ1C,EAAMjK,KAAKF,IAASsI,EAAO+E,QAAQlD,EAAMjK,KAAKF,IAE5K,MAAO,CACLsP,MAAOnF,EAAMjK,KAAKF,GAClBuP,UAAWF,GAIf,MAAO,CACLE,UAAW,UACXD,MAAO,GCrCOE,CAAYrF,EAAO6E,GAE3BI,IAAejF,EAAM7G,eAAeV,SACvCtD,IAAOoK,GAAGhK,OAAO,OAASyK,EAAMvI,eAC/BtC,IAAOoK,GAAGrH,YAAc8H,EAAM7H,cAC9BhD,IAAOoK,GAAGhK,OAAO,SAAWyK,EAAMhH,iBAClC7D,IAAOoK,GAAGhK,OAAO,cAAgBJ,IAAO6K,EAAM7F,aAAa5E,OAAO,aAEhE+P,EAAaT,GAAiBI,GAAcjF,EAAMjK,KAAKZ,IAAOoK,GAAGhK,OAAO,eAE9E,OACEwL,EAAAxK,EAAAyK,cAAA,QACEuE,WAAA,GAAAlQ,OAAaF,IAAOoK,GAAGhK,OAAO,qBAA9B,eAAAF,OAAgE6I,EAAMiH,OACtEK,WAAS,aACTC,IAAI,MACJxO,IAAKsI,EACL0B,UAAU,cACVyE,OAAQJ,EAAa,OAAS,GAC9BK,YAAaL,EAAa,EAAI,EAC9BM,MAAOjI,EACPkI,OAAQlI,EACRmI,GAAI,GACJC,GAAI,GACJpB,KAAMzG,EAAMkH,UACZY,EAAIrN,EAAI4G,GAAK5B,EAAahF,EAAI4G,GAAKzB,EAAcA,EAAa,GAC9DxD,GAAKzC,EAAK0H,GAAK1H,EAAK,IAAIkN,KAAKxF,EAAE0G,cAAc1G,EAAE2G,WAAW,KAAOvI,GAAc9F,EAAK0H,GAAK1H,EAAK,IAAIkN,KAAKxF,EAAE0G,cAAc1G,EAAE2G,WAAW,KAAOpI,EAAcA,EACzJsD,QAAS,SAAAZ,GAAE,OAAII,EAAKiD,WAAWrD,EAAIjB,EAAGrB,aA3G5BmD,IAAMC,WAkJTC,eAhCS,SAAArC,GAAK,MAAK,CAChCnJ,KAAMmJ,EAAMD,IAAIlJ,KAChBoE,YAAa+E,EAAMS,SAASxF,YAC5B1C,cAAeyH,EAAMD,IAAIxH,cACzBU,aAAc+G,EAAMD,IAAI9G,aACxBa,gBAAiBkG,EAAMD,IAAIjG,gBAC3BG,eAAgB+F,EAAMD,IAAI9F,eAC1BqF,iBAAkBU,EAAMY,SAAStB,iBACjCC,kBAAmBS,EAAMY,SAASrB,kBAClCC,oBAAqBQ,EAAMY,SAASpB,oBACpCV,YAAakB,EAAMS,SAAS3B,YAC5BC,aAAciB,EAAMS,SAAS1B,aAC7B1F,gBAAiB2G,EAAMS,SAASpH,gBAChC5B,YAAauI,EAAMD,IAAItI,YACvBgH,SAAUuB,EAAMS,SAAShC,SACzBG,WAAYoB,EAAMS,SAAS7B,WAC3BlH,QAASsI,EAAMD,IAAIrI,QACnBuH,OAAQe,EAAMS,SAASxB,SAGE,SAAAqD,GAAQ,MAAK,CACtC3C,aAAc,SAAAtH,GAAG,OAAIiK,EAAS3C,EAAatH,KAC3C6G,UAAW,SAAA7G,GAAG,OAAIiK,EAASpD,EAAU7G,KACrC6F,gBAAiB,SAAA7F,GAAG,OAAIiK,EAASpE,EAAgB7F,KACjD4F,iBAAkB,SAAA5F,GAAG,OAAIiK,EAASrE,EAAiB5F,KACnD8F,mBAAoB,SAAA9F,GAAG,OAAIiK,EAASnE,EAAmB9F,KACvD8G,UAAW,SAAA9G,GAAG,OAAIiK,EAASnD,EAAU9G,KACrC+F,aAAc,SAAA/F,GAAG,OAAIiK,EAASlE,EAAa/F,KAC3CgG,oBAAqB,SAAAhG,GAAG,OAAIiK,EAASjE,EAAoBhG,KACzDiG,WAAY,SAAAjG,GAAG,OAAIiK,EAAShE,EAAWjG,OAG1BgK,CAA6CgC,ICzJ7C4C,UALF,SAAAnG,GAAK,OAChBe,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,OAAOmF,GAAG,OAAOC,UAAWrG,EAAMqG,UAAWC,SAAUtG,EAAMsG,UACzEtG,EAAMuG,YCSLC,eACJ,SAAAA,EAAYxG,GAAO,IAAAC,EAAA,OAAAnJ,OAAAoJ,EAAA,EAAApJ,CAAAqJ,KAAAqG,IACjBvG,EAAAnJ,OAAAsJ,GAAA,EAAAtJ,CAAAqJ,KAAArJ,OAAAuJ,GAAA,EAAAvJ,CAAA0P,GAAAlG,KAAAH,KAAMH,KAkBRyG,SAAW,WACT,GAAKjE,KAASkE,UAAd,CADe,IAAAC,EAAA7P,OAAA8P,GAAA,EAAA9P,CAIE0L,KAASkE,UAJX,GAIRlS,EAJQmS,EAAA,GAIJlS,EAJIkS,EAAA,GAMf7C,QAAQC,IAAIvP,EAAIC,KAzBCwL,EA4BnB4G,aAAe,WAAM,IACb1B,EAAUlF,EAAKf,MAAfiG,MACEzO,EAAUuJ,EAAKD,MAAftJ,MACFiD,EAAO6I,KAAY9L,EAAO,IAAIqO,KAAKrO,EAAMuP,cAAevP,EAAMwP,WAAa,EAAG,IAChFf,EAAQxL,EAAKlB,QACfqO,sBAAsB,kBAAM7G,EAAKS,SAAS,CAAEyE,MAAOA,EAAQ,OAjC5ClF,EAqCnB8G,gBAAkB,SAAArQ,GAChB,IAAMoD,EAAI0I,KAAawE,MAAMtQ,GAC7B,OAAO8L,KAAaA,KAAYwE,MAAMlN,GAAI0I,KAAa1N,OAAOgF,EAAE,IAAIrB,QAvCnDwH,EA0CnBgH,SAAW,SAACC,EAAQC,GAAT,OACTD,EAAOvR,OAAO,SAACyR,EAAMlS,EAAOmS,GAG1B,OAFIA,GAASH,EAAOzO,OAAS0O,KAAU,GAAe,IAAVE,GAAaD,EAAK5Q,KAAK,IACnE4Q,EAAKA,EAAK3O,OAAS,GAAGjC,KAAKtB,GACpBkS,GACN,CAAC,MA/CanH,EAiDnBqH,oBAAsB,SAAC9G,EAAI9J,GACzB,GAAI8J,EAAGC,SACLR,EAAKS,SAAS,CACZC,QAASV,EAAKf,MAAMyB,SAEtBV,EAAKf,MAAMyB,OAASV,EAAKD,MAAM1C,aAAa5G,GAASuJ,EAAKD,MAAMxC,WAAW9G,OACtE,CACLuJ,EAAKD,MAAM5B,UAAU,MACrB6B,EAAKD,MAAMzC,sBACX0C,EAAKD,MAAM3C,mBAAmB,CAC5BrE,gBAAiB,KACjBC,cAAe,GACfT,gBAAiB,KAEnByH,EAAKD,MAAM5C,gBAAgB,CACzBjF,aAAc,KACdC,WAAY,GACZN,aAAc,KAEhB,IAAMjB,EAAgBJ,EAAiBtB,MAASuB,MAAMA,GAAOnB,OAAO,KAAM0K,EAAKD,MAAMrJ,YAAasJ,EAAKD,MAAMpJ,SAC7GqJ,EAAKD,MAAM7C,iBAAiB,CAC1B1F,cAAeZ,EAAcY,cAC7BC,YAAab,EAAca,YAC3Bb,cAAeA,EAAcA,gBAE/BoJ,EAAKD,MAAMnB,cAAa,KA1EToB,EA8EnBsH,mBAAqB,SAAC/G,EAAI3I,GACxB,GAAI2I,EAAGC,SACLR,EAAKS,SAAS,CACZC,QAASV,EAAKf,MAAMyB,SAEtBV,EAAKf,MAAMyB,OAASV,EAAKD,MAAM1C,aAAazF,GAAQoI,EAAKD,MAAMxC,WAAW3F,OACrE,CACLoI,EAAKD,MAAM5B,UAAU,MACrB6B,EAAKD,MAAMzC,sBACX0C,EAAKD,MAAM3C,mBAAmB,CAC5BrE,gBAAiB,KACjBC,cAAe,GACfT,gBAAiB,KAEnByH,EAAKD,MAAM7C,iBAAiB,CAC1B1F,cAAe,KACfC,YAAa,GACbb,cAAe,KAEjB,IAAMiB,EAAeF,EAAgBC,EAAMoI,EAAKD,MAAMrJ,YAAasJ,EAAKD,MAAMpJ,SAC9EqJ,EAAKD,MAAM5C,gBAAgB,CACzBjF,aAAcL,EAAaK,aAC3BC,WAAYN,EAAaM,WACzBN,aAAcA,EAAaA,eAE7BmI,EAAKD,MAAMnB,cAAa,KAvGToB,EA2GnBuH,WAAa,SAACC,EAAY9D,GAAb,OACX8D,EAAWxR,IAAI,SAAAsJ,GAAC,OACdwB,EAAAxK,EAAAyK,cAAC0G,GAAD,CAAK/C,KAAMhB,GAAkBxO,IAAOoK,GAAGhK,OAAO,SAAW0K,EAAKD,MAAMhH,gBAC/DL,IAAK4G,EAAG7I,MAAOuJ,EAAKD,MAAMtJ,MAC1BO,IAAKsI,EACL0B,UAAU,WAhHAhB,EAoHnB0H,eAAiB,SAAAjR,GACf,IAAMkR,EAAkBzS,IAAOuB,GAAOsD,QAAQ,SACxC6N,EAAiB1S,IAAOuB,GAAO0E,MAAM,SACvC0M,EAAc,GAEdC,EAAa5S,IAAOyS,GAGxB,IAFAE,EAAYtR,KAAKuR,EAAW7P,WAEtB6P,EAAWrR,UAAYkR,EAAgBlR,SAC3CqR,EAAWxN,IAAI,EAAG,SAClBuN,EAAYtR,KAAKuR,EAAW7P,WAO9B,OAJI6P,EAAW7P,YAAc2P,EAAe3P,WAC1C4P,EAAYE,MAGPF,GArIU7H,EAwInBgI,iBAAmB,SAACtK,EAAUG,EAAYpH,GACxC,IAAMhB,EAAMuK,EAAK0H,eAAejR,GAC1BwR,EAAYxS,EAAI+C,OAClB0P,EAAU,CAAC,GAAK,GAAK,GAAK,GAAK,GAAK,KAAKlT,MAAM,EAAGiT,GACtD,OAAOxS,EAAIO,IAAI,SAAC4B,EAAMgB,GAAP,OACbkI,EAAAxK,EAAAyK,cAAA,QACEC,UAAWC,KAAW,oBAAqB,CAACC,KAAQlB,EAAKD,MAAM7H,eAAiBN,GAAQoI,EAAKD,MAAM7G,eAAeE,QAAQxB,IAAS,IACnIZ,IAAKY,EACLmO,EAAGrI,EACHrD,GAAKqD,EAAWsC,EAAK8G,gBAAgBrQ,GAAWoH,EAAcmC,EAAK8G,gBAAgBrQ,IAAYyR,EAAQtP,GACvGuP,WAAW,SACXhH,QAAS,SAAAZ,GAAE,OAAIP,EAAKsH,mBAAmB/G,EAAI3I,KAEzCA,MAnJNoI,EAAKf,MAAQ,CACXiG,MAAO,EACPxE,QAAQ,GAJOV,qFASjBE,KAAK0G,eACL1G,KAAKkI,MAAQ7F,OACV8F,GAAG,MAAOnI,KAAKsG,UAClBjE,KAAUrC,KAAK6D,KAAKqE,OAAO/H,KAAKH,KAAKkI,oDAIrClI,KAAK0G,gDA0IE,IAAAjG,EAAAT,KACDH,EAAQG,KAAKH,MAEbtJ,EAAQsJ,EAAMtJ,MACdoH,EAAakC,EAAMlC,WACvBH,EAAWqC,EAAMrC,SAEb4K,EAAY/F,KAAc,MAE1B7I,EAAO6I,KAAY9L,EAAO,IAAIqO,KAAKrO,EAAMuP,cAAevP,EAAMwP,WAAW,EAAG,IAC5EsC,EAAUrT,IAAOuB,GAAO0E,MAAM,SAAS7F,OAAO,OAC9CkT,EAAWtT,IAAOuB,GAAO6D,IAAI,EAAG,UAAUP,QAAQ,SAASzE,OAAO,OACpEmT,EAAa,GACA,QAAZF,GAAkC,QAAbC,GAAoC,QAAZD,GAAkC,QAAbC,KACrEC,GAAc,IAdT,IAiBCvD,EAAUhF,KAAKjB,MAAfiG,MAEFwD,EAAaxD,GAASxL,EAAKlB,OAC3BgP,EAAakB,EAAahP,EAAOA,EAAK1E,MAAM,EAAGkQ,GAE/CxB,EAAiBxO,IAAOgL,KAAKH,MAAMvI,cAAe,KAAKlC,OAAO,UAAYgT,EAAU7R,GAE1F,OACEqK,EAAAxK,EAAAyK,cAAA,OACEC,UAAU,QACV4E,OAAqB,EAAXlI,EAA8B,EAAbG,EAAkB,GAC7C8H,MAAQjI,EAAWwC,KAAK4G,gBAAgBrQ,GAAWoH,GAAcqC,KAAK4G,gBAAgBrQ,GAAS,GAAMgS,EACrGzR,IAAKP,GAELqK,EAAAxK,EAAAyK,cAAA,SAEE2H,GACE5H,EAAAxK,EAAAyK,cAAA,QACEC,UAAWC,KAAW,aAAc,eAAgB,CAACC,KAAQwC,GAAkBxD,KAAKH,MAAM7G,eAAeE,QAAQkP,EAAU7R,KAAW,IACtIsP,EAAe,EAAXrI,EAA8B,EAAbG,EAAkB,GACvCxD,GAAKqD,EAAWwC,KAAK4G,gBAAgBrQ,GAAWoH,GAAcqC,KAAK4G,gBAAgBrQ,GAAS,IAAO,EACnG0R,WAAW,SACXhH,QAAS,SAAAZ,GAAE,OAAII,EAAK0G,oBAAoB9G,EAAI+H,EAAU7R,MAEpD6R,EAAU7R,IAGdiS,GAAcxI,KAAK8H,iBAAiBtK,EAAUG,EAAYpH,GAC1DyJ,KAAKqH,WAAWC,EAAY9D,YAxMpBtC,IAAMuH,eAsOXrH,eAvBS,SAAArC,GAAK,MAAK,CAChCtI,QAASsI,EAAMD,IAAIrI,QACnBb,KAAMmJ,EAAMD,IAAIlJ,KAChBY,YAAauI,EAAMD,IAAItI,YACvBgH,SAAUuB,EAAMS,SAAShC,SACzBG,WAAYoB,EAAMS,SAAS7B,WAC3B3F,aAAc+G,EAAMD,IAAI9G,aACxBV,cAAeyH,EAAMD,IAAIxH,cACzBuB,gBAAiBkG,EAAMD,IAAIjG,gBAC3BG,eAAgB+F,EAAMD,IAAI9F,iBAGD,SAAAqI,GAAQ,MAAK,CACtCpE,gBAAiB,SAAA7F,GAAG,OAAIiK,EAASpE,EAAgB7F,KACjD4F,iBAAkB,SAAA5F,GAAG,OAAIiK,EAASrE,EAAiB5F,KACnD8F,mBAAoB,SAAA9F,GAAG,OAAIiK,EAASnE,EAAmB9F,KACvDsH,aAAc,SAAAtH,GAAG,OAAIiK,EAAS3C,EAAatH,KAC3C6G,UAAW,SAAA7G,GAAG,OAAIiK,EAASpD,EAAU7G,KACrC+F,aAAc,SAAA/F,GAAG,OAAIiK,EAASlE,EAAa/F,KAC3CgG,oBAAqB,SAAAhG,GAAG,OAAIiK,EAASjE,EAAoBhG,KACzDiG,WAAY,SAAAjG,GAAG,OAAIiK,EAAShE,EAAWjG,OAG1BgK,CAA6CiF,IC5OtDqC,gNACJ5B,SAAW,SAACC,EAAQC,GAAT,OACTD,EAAOvR,OAAO,SAACyR,EAAMlS,EAAOmS,GAG1B,OAFIA,GAASH,EAAOzO,OAAS0O,KAAU,GAAe,IAAVE,GAAaD,EAAK5Q,KAAK,IACnE4Q,EAAKA,EAAK3O,OAAS,GAAGjC,KAAKtB,GACpBkS,GACN,CAAC,4FAGJ0B,KAAaC,2CAIb,IAAM/I,EAAQG,KAAKH,MACbrD,EAAUqD,EAAMrD,QAAQpH,OAAO,cAC/BqH,EAAUoD,EAAMpD,QAAQrH,OAAO,cAE/ByT,EAASxG,KAAaa,MAAM,IAAI0B,KAAKhL,SAAQ,GAAA1E,OAAIsH,EAAQ3H,MAAM,KAAK,KAAO,EAAG,GAClF,IAAI+P,KAAKhL,SAAQ,GAAA1E,OAAIuH,EAAQ5H,MAAM,KAAK,KAAO,GAAI,KAE/CiU,EAAY9I,KAAK8G,SAAS+B,EAAQA,EAAOvQ,OAAS,IAExD,OACEsI,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,eAAewE,IAAI,SAE9BwD,EAAUhT,IAAI,SAAC+S,EAAQnQ,GAAT,OACZkI,EAAAxK,EAAAyK,cAAA,KAAGC,UAAWC,KAAW,OAAQ,CAACgI,OAAUrQ,IAAMmH,EAAMtC,YAAazG,IAAK4B,GAEtEmQ,EAAO/S,IAAI,SAACS,EAAOmC,GAAR,OACTkI,EAAAxK,EAAAyK,cAACmI,GAAD,CACElS,IAAK4B,EACLnC,MAAOA,SAOnBqK,EAAAxK,EAAAyK,cAACoI,GAAA7S,EAAD,CAAc6P,GAAG,aAAaiD,WAAS,EAACC,MAAM,oBAtCnCjI,IAAMuH,eAmDVrH,eAPS,SAAArC,GAAK,MAAK,CAChCnJ,KAAMmJ,EAAMD,IAAIlJ,KAChB4G,QAASuC,EAAMD,IAAItC,QACnBC,QAASsC,EAAMD,IAAIrC,QACnBc,UAAWwB,EAAMS,SAASjC,YAGb6D,CAAyBsH,ICjDzBU,UANC,SAAAvJ,GAAK,OACnBe,EAAAxK,EAAAyK,cAAA,WAASC,UAAS,WAAA5L,OAAa2K,EAAMiB,WAAa,KAChDF,EAAAxK,EAAAyK,cAAA,SAAIhB,EAAMwJ,OACTxJ,EAAMuG,YdSLkD,sBACJ,SAAAA,EAAYzJ,GAAO,IAAAC,EAAA,OAAAnJ,OAAAoJ,EAAA,EAAApJ,CAAAqJ,KAAAsJ,IACjBxJ,EAAAnJ,OAAAsJ,GAAA,EAAAtJ,CAAAqJ,KAAArJ,OAAAuJ,GAAA,EAAAvJ,CAAA2S,GAAAnJ,KAAAH,KAAMH,KAqCR0J,UAAY,SAAAlJ,GACK,MAAXA,EAAGvJ,KAAeuJ,EAAGC,UACvBR,EAAKD,MAAM1C,aAAa,QAxCT2C,EA4CnB0J,OAAS,WACP,IAAMC,EAAM3J,EAAK+D,KAAK4F,IAChBC,EAAKC,KAAKrK,IAAIjL,EAAIC,GAClBsV,EAAKD,KAAKpK,IAAIlL,EAAIC,GAClBuV,EAAKF,KAAKrK,IAAI/K,EAAIC,GAClBsV,EAAKH,KAAKpK,IAAIhL,EAAIC,GACxBiV,EAAIM,MAAMC,KAAON,EAAK,KACtBD,EAAIM,MAAME,IAAMJ,EAAK,KACrBJ,EAAIM,MAAMtE,MAAQmE,EAAKF,EAAK,KAC5BD,EAAIM,MAAMrE,OAASoE,EAAKD,EAAK,MArDZ/J,EAwDnBoK,YAAc,SAAA7J,GACAP,EAAK+D,KAAK4F,IAClBV,OAAS,EACb1U,EAAKgM,EAAG8J,QACR5V,EAAK8L,EAAG+J,QACRtK,EAAK0J,UA7DY1J,EAgEnBuK,YAAc,SAAAhK,GACZ/L,EAAK+L,EAAG8J,QACR3V,EAAK6L,EAAG+J,QACRtK,EAAK0J,UAnEY1J,EAsEnBwK,UAAY,WACExK,EAAK+D,KAAK4F,IAClBV,OAAS,GAtEbtL,OAAO8M,iBAAiB,SAAU,WAChC1K,EAAM2K,eAAe/M,OAAOC,cAHboC,qFAQjBE,KAAKH,MAAM/C,aAAY,oCAqEf,IAAA2D,EAAAT,KACR,OACEY,EAAAxK,EAAAyK,cAAC4J,GAAD,CAASpB,MAAM,oBACbzI,EAAAxK,EAAAyK,cAAC6J,GAAD,CAAMvE,SAAU,EAAGD,UAAW,SAAA7F,GAAE,OAAII,EAAK8I,UAAUlJ,KACjDO,EAAAxK,EAAAyK,cAAC8J,GAAD,MACA/J,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,UACbF,EAAAxK,EAAAyK,cAAC+J,GAAD,MACAhK,EAAAxK,EAAAyK,cAACgK,GAAD,MACAjK,EAAAxK,EAAAyK,cAAA,OAAKoF,GAAG,MAAMX,IAAI,MAAMyD,QAAM,cAtFpB7H,IAAMuH,gBAoGbrH,eAAQ,KANI,SAAAC,GAAQ,MAAK,CACtCvE,YAAa,SAAA1F,GAAG,OAAIiK,EAASvE,EAAY1F,KACzCoT,eAAgB,SAAApT,GAAG,OAAIiK,EGxCK,SAAAjK,GAAG,MAAK,CAAE2F,KApElB,gBAoEuC3F,OHwC3BoT,CAAepT,KAC/C+F,aAAc,SAAA/F,GAAG,OAAIiK,EAASlE,EAAa/F,OAG9BgK,CAAkCkI,IezG3CwB,gNAQJC,QAAU,SAAAvS,GACRsH,EAAKD,MAAM7C,iBAAiB,CAC1BtG,cAAe,GACfa,YAAa,GACbD,cAAe,OAEjBwI,EAAKD,MAAM3C,mBAAmB,CAC5BrE,gBAAiB,KACjBC,cAAe,GACfT,gBAAiB,KAEnByH,EAAKD,MAAM5C,gBAAgB,CACzBtF,aAAc,GACdM,WAAY,GACZD,aAAc,OAEhB,IAAM+F,EAAQ+B,EAAKD,MAAM7B,OAAOoE,KAAK,SAAArE,GAAK,OAAIA,EAAMvF,MAAQxD,IAAOwD,GAAKpD,OAAO,gBAC3EL,EAAQgJ,GAASsE,KAAStE,EAAMhJ,OAC/BA,IACHA,EAAQ+N,GAAoBhD,EAAKD,MAAO7K,IAAOwD,GAAKpD,OAAO,cAAeJ,IAAOwD,GAAKqB,QAAQ,UAC9FiG,EAAKD,MAAM3B,UAAU,CAAE1F,IAAKxD,IAAOwD,GAAKpD,OAAO,cAAeL,WAEhE+K,EAAKD,MAAM5B,UAAU,CAAEzF,MAAKuF,MAAOhJ,EAAOa,KAAMkK,EAAKD,MAAMjK,OAC3DkK,EAAKD,MAAMnB,cAAa,MAG1BsM,SAAW,SAAAtT,GACToI,EAAKD,MAAM5B,UAAU,MACrB6B,EAAKD,MAAM3C,mBAAmB,CAC5BrE,gBAAiB,KACjBC,cAAe,GACfT,gBAAiB,KAEnByH,EAAKD,MAAM7C,iBAAiB,CAC1BtG,cAAe,GACfa,YAAa,GACbD,cAAe,OAEjB,IAAMK,EAAeF,EAAgBC,EAAMoI,EAAKD,MAAMrJ,YAAasJ,EAAKD,MAAMpJ,SAC9EqJ,EAAKD,MAAM5C,gBAAgB,CACzBjF,aAAcL,EAAaK,aAC3BC,WAAYN,EAAaM,WACzBN,aAAcA,EAAaA,eAE7BmI,EAAKD,MAAMnB,cAAa,MAG1BuM,UAAY,SAAA1U,GACVuJ,EAAKD,MAAM5B,UAAU,MACrB6B,EAAKD,MAAM3C,mBAAmB,CAC5BrE,gBAAiB,KACjBC,cAAe,GACfT,gBAAiB,KAEnByH,EAAKD,MAAM5C,gBAAgB,CACzBtF,aAAc,GACdM,WAAY,GACZD,aAAc,OAEhB,IAAMtB,EAAgBJ,EAAiBC,EAAMsB,WAAYiI,EAAKD,MAAMrJ,YAAasJ,EAAKD,MAAMpJ,SAC5FqJ,EAAKD,MAAM7C,iBAAiB,CAC1B1F,cAAeZ,EAAcY,cAC7BC,YAAab,EAAca,YAC3Bb,cAAeA,EAAcA,gBAE/BoJ,EAAKD,MAAMnB,cAAa,MAG1BwM,YAAc,SAAA/S,GACZ2H,EAAKD,MAAM5B,UAAU,MACrB6B,EAAKD,MAAM7C,iBAAiB,CAC1BtG,cAAe,GACfa,YAAa,GACbD,cAAe,OAEjB,IAAMe,EAAkBH,EAAmBC,EAAS2H,EAAKD,MAAMrJ,YAAasJ,EAAKD,MAAMpJ,QAASqJ,EAAKD,MAAMzH,gBAAiB0H,EAAKD,MAAMjK,MACvIkK,EAAKD,MAAM3C,mBAAmB,CAC5B7E,gBAAiBA,EAAgBA,gBACjCS,cAAeT,EAAgBS,cAC/BD,gBAAiBR,EAAgBQ,kBAEnCiH,EAAKD,MAAMnB,cAAa,MAG1ByM,QAAU,WACR,OAAIrL,EAAKD,MAAMvI,cACN,SACEwI,EAAKD,MAAMhH,iBAAmBiH,EAAKD,MAAM7H,aAC3C,QAEA,UAIXoT,UAAY,SAAAC,GACV,OAAIvL,EAAKD,MAAMvI,cACNtC,IAAO8K,EAAKD,MAAMvI,cAAe,KAAKlC,OAAO,QAC3C0K,EAAKD,MAAM7H,aACpB,QAAA9C,OAAe4K,EAAKD,MAAM7H,cACjB8H,EAAKD,MAAMhH,gBACpB,GAAA3D,OAAUF,IAAO8K,EAAKD,MAAMhH,gBAAiB,OAAOzD,OAAO,QAA3D,KAEOJ,IAAOqW,GAAcjW,OAAO,yBAIvCkW,OAAS,SAACD,EAAcjU,EAAKmU,GAC3B,GAAIzL,EAAKD,MAAM7F,YACb8F,EAAKiL,QAAQ/V,IAAOqW,GAAcjR,IAAIhD,EAAKmU,SACtC,GAAIzL,EAAKD,MAAM7H,aACpB8H,EAAKkL,SAASpR,SAASkG,EAAKD,MAAM7H,cAAgBZ,QAC7C,GAAI0I,EAAKD,MAAMvI,cACpBwI,EAAKmL,UAAUrR,SAASyR,GAAgBjU,QACnC,GAAI0I,EAAKD,MAAMhH,gBAAiB,CACrC,IAAMjB,EAAa5C,IAAOqW,EAAc,OAAOzT,aAC/CkI,EAAKoL,YAAalW,IAAOqW,EAAc,OAAOzT,WAAWA,EAAaR,GAAMhC,OAAO,YAIvFoW,WAAa,SAACH,EAAcE,EAAM/O,EAASC,GACzC,GAAI4O,EAAc,CAChB,IAAMI,EAAezW,IAAOqW,GAAczP,SAAS,EAAG2P,GAChDG,EAAW1W,IAAOqW,GAAcjR,IAAI,EAAGmR,GACvCI,EAAOF,EAAarW,OAAb,GAAAF,OAAuBF,IAAOwH,GAASgG,OAAvC,WACPlD,EAAM9C,EAAQ3C,QAAQ,QAAQzE,OAAO,cACrCwW,EAAOF,EAAStW,OAAT,GAAAF,OAAmBF,IAAOyH,GAAS+F,OAAnC,WACPjD,EAAM9C,EAAQ5C,QAAQ,QAAQzE,OAAO,cAC3C,MAAO,CACLyW,SAAU7W,IAAO2W,GAAMG,cAAc9W,IAAOsK,IAC5CsM,KAAM5W,IAAO4W,GAAMG,eAAe/W,IAAOuK,8FAxIzB+D,EAAWgB,GAC/B,OAAOhB,EAAUtJ,cAAgBgG,KAAKH,MAAM7F,aAC1CsJ,EAAUhM,gBAAkB0I,KAAKH,MAAMvI,eACvCgM,EAAUtL,eAAiBgI,KAAKH,MAAM7H,cACtCsL,EAAUzK,kBAAoBmH,KAAKH,MAAMhH,iDAyIpC,IAAA4H,EAAAT,KAAAyE,EACiFzE,KAAKH,MAArFrD,EADDiI,EACCjI,QAASC,EADVgI,EACUhI,QAASnF,EADnBmN,EACmBnN,cAAe0C,EADlCyK,EACkCzK,YAAanB,EAD/C4L,EAC+C5L,gBAAiBb,EADhEyM,EACgEzM,aACjEqT,EAAe/T,GAAiBuB,GAAmBmB,GAAehC,EAClEuT,EAAOvL,KAAKmL,UAEZK,EAAaxL,KAAKwL,WAAWH,EAAcE,EAAM/O,EAASC,GAC1DgF,EAAoB+J,GAAcA,EAAWK,SAC7CnK,EAAgB8J,GAAcA,EAAWI,KAE/C,OACEhL,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,sBACVqF,SAAU,EACVD,UAAW,SAAA7F,GAAE,MACC,cAAXA,EAAGvJ,KAAuB2J,EAAK6K,OAAOD,GAAe,EAAGE,IAC7C,eAAXlL,EAAGvJ,KAAwB2J,EAAK6K,OAAOD,EAAc,EAAGE,KAE9D3K,EAAAxK,EAAAyK,cAAA,KACEC,UAAWC,KAAW,sBAAuB,CAACY,UAAaF,IAC3DR,QAAS,kBAAMQ,GAAqBhB,EAAK6K,OAAOD,GAAe,EAAGE,MAElEvL,KAAKoL,UAAUC,GACjBzK,EAAAxK,EAAAyK,cAAA,KACEC,UAAWC,KAAW,uBAAwB,CAACY,UAAaD,IAC5DT,QAAS,kBAAMS,GAAiBjB,EAAK6K,OAAOD,EAAc,EAAGE,cArKhDrK,IAAMC,WAmMdC,eAvBS,SAAArC,GAAK,MAAK,CAChCvC,QAASuC,EAAMD,IAAItC,QACnBC,QAASsC,EAAMD,IAAIrC,QACnBzC,YAAa+E,EAAMS,SAASxF,YAC5BhC,aAAc+G,EAAMD,IAAI9G,aACxBV,cAAeyH,EAAMD,IAAIxH,cACzBuB,gBAAiBkG,EAAMD,IAAIjG,gBAC3BrC,YAAauI,EAAMD,IAAItI,YACvBC,QAASsI,EAAMD,IAAIrI,QACnBuH,OAAQe,EAAMS,SAASxB,OACvB5F,gBAAiB2G,EAAMS,SAASpH,gBAChCxC,KAAMmJ,EAAMD,IAAIlJ,OAGS,SAAAyL,GAAQ,MAAK,CACtCpD,UAAW,SAAA7G,GAAG,OAAIiK,EAASpD,EAAU7G,KACrCsH,aAAc,SAAAtH,GAAG,OAAIiK,EAAS3C,EAAatH,KAC3C6F,gBAAiB,SAAA7F,GAAG,OAAIiK,EAASpE,EAAgB7F,KACjD4F,iBAAkB,SAAA5F,GAAG,OAAIiK,EAASrE,EAAiB5F,KACnD8F,mBAAoB,SAAA9F,GAAG,OAAIiK,EAASnE,EAAmB9F,KACvD8G,UAAW,SAAA9G,GAAG,OAAIiK,EAASnD,EAAU9G,OAGxBgK,CAA6C0J,ICpK7CkB,gNA9BbC,WAAa,WACX,IAAMC,EAAQ7J,KAAcvC,EAAKD,MAAMsM,QACpCC,MAAM,IACNC,WAAWhK,KAAc,OAC5BA,KAAUvC,EAAK+D,KAAKqI,OACjBI,aACAnM,KAAK+L,GACR7J,KAAUvC,EAAK+D,KAAKqI,OAClBK,OAAO,QACNC,KAAK,IAAK,IACVA,KAAK,IAAK1M,EAAKD,MAAM4F,MAAQ,IAC7BsE,MAAM,cAAe,UACrBA,MAAM,OAAQ,QACdA,MAAM,YAAa,IACnB0C,KAAK,yGArBRzM,KAAKiM,0DAILjM,KAAKiM,8CAqBL,OACErL,EAAAxK,EAAAyK,cAAA,KAAGC,UAAU,cACV4L,UAAW1M,KAAKH,MAAM6M,UACtBpH,IAAI,QACJd,KAAK,OACLmI,SAAU,GACV1E,WAAW,kBAjCA/G,IAAMuH,eCmCXmE,gNA1BbX,WAAa,WACX,IAAMY,EAAQxK,KAAYvC,EAAKD,MAAMiN,QAClCV,MAAMtM,EAAKD,MAAMkN,WACjBV,WAAWhK,KAAU,MACxBA,KAAUvC,EAAK+D,KAAKgJ,OACjBP,aACAnM,KAAK0M,GACRxK,KAAUvC,EAAK+D,KAAKgJ,OACjBN,OAAO,QACPC,KAAK,YAAa,eAClBA,KAAK,IAAK,GAAK1M,EAAKD,MAAMmN,OAAOhD,MACjCwC,KAAK,KAAM,IACXA,KAAK,KAAM,OACXzC,MAAM,OAAQ,QACdA,MAAM,YAAa,IACnBA,MAAM,cAAe,UACrB0C,KAAK,sGAvBRzM,KAAKiM,0DAILjM,KAAKiM,8CAuBL,OACErL,EAAAxK,EAAAyK,cAAA,KAAGC,UAAU,cAAcwE,IAAI,iBA9BjBpE,IAAMuH,eCIpBwE,eACJ,SAAAA,EAAYpN,GAAO,IAAAC,EAAA,OAAAnJ,OAAAoJ,EAAA,EAAApJ,CAAAqJ,KAAAiN,IACjBnN,EAAAnJ,OAAAsJ,GAAA,EAAAtJ,CAAAqJ,KAAArJ,OAAAuJ,GAAA,EAAAvJ,CAAAsW,GAAA9M,KAAAH,KAAMH,KAcRlB,UAAY,SAAAS,GACVU,EAAKD,MAAMlB,UAAU,CAAE/I,KAAMwJ,EAAG7J,IAAKuK,EAAKD,MAAMrJ,YAAYsJ,EAAKD,MAAM7F,gBAhBtD8F,EAmBnBoN,WAAa,WACX,IACMvK,EADSN,KAAUvC,EAAK+D,KAAKsJ,MAAMC,MAAMtN,EAAKD,MAAMwN,UACnC9D,UAAU,QAAQ3T,KAAK,SAAAwJ,GAAC,OAAIA,IAEnDuD,EAAQ2K,YAER,IAAMvP,EAAQ+B,EAAKD,MAAM9B,MAEzB4E,EAAQ2J,aACLE,KAAK,OAAQ,SAACpN,EAAG1G,GAAJ,OAAUA,IAAMoH,EAAKf,MAAMwO,WAAalL,KAAOtE,GAAOyP,SAAWzP,IAEjF,IAAM0P,EAAQ9K,EAAQ8K,QAAQlB,OAAO,KAAKmB,QAAQ,OAAO,GACzDD,EACGjB,KAAK,OAAQ,SAACpN,EAAG1G,GAAJ,OAAUA,IAAMoH,EAAKf,MAAMwO,WAAalL,KAAOtE,GAAOyP,SAAWzP,IAEjF0P,EACGlB,OAAO,QACPC,KAAK,SAAU,GACfA,KAAK,YAAa,SAAApN,GAAC,mBAAAlK,OAAiBkK,EAAEjF,EAAnB,MAAAjF,OAAyB4K,EAAKD,MAAM8N,WAApC,OACnBnB,KAAK,KAAM,SAACpN,EAAG1G,GAAJ,aAAAxD,OAAiBwD,KAC5ByP,GAAG,YAAa,SAAC/I,EAAG1G,GAAJ,OAAUoH,EAAKS,SAAS,CAAEgN,WAAY7U,MACtDyP,GAAG,aAAc,kBAAMrI,EAAKS,SAAS,CAAEgN,YAAa,MACpDpF,GAAG,QAAS,SAAA/I,GAAC,OAAIU,EAAKnB,UAAUS,KAEtBuD,EAAQiL,OAAOF,QAAQ,OAAO,GAExClB,KAAK,OAAQzO,GACbyO,KAAK,UAAW,IAChBF,aACAE,KAAK,UAAW,GAChBqB,SAEHlL,EACGmL,MAAML,GACNnC,OAAO,QACPkB,KAAK,QAAS,SAAApN,GAAC,OAAIA,EAAEqG,QACrB+G,KAAK,WAAY,SAAApN,GAAC,SAAAlK,OAAOkK,EAAEtF,YAAT,4BAAA5E,OAA+CF,IAAOoK,EAAExJ,KAAM,MAAMR,OAAO,QAA3E,OAAAF,OAAwFF,IAAO4E,SAASwF,EAAExJ,MAAM,EAAG,MAAMR,OAAO,WAClJoX,KAAK,WAAY,eACjBkB,QAAQ,cAAe,SAACtO,EAAG1G,GAAJ,OAAUA,IAAMoH,EAAKf,MAAMwO,aAClDjB,aACAyB,SAAS,KACTvB,KAAK,YAAa,SAAApN,GAAC,mBAAAlK,OAAiBkK,EAAEjF,EAAnB,MAAAjF,OAAyBkK,EAAEyG,EAA3B,OACnB2G,KAAK,SAAU,SAAApN,GAAC,OAAIA,EAAEsG,UA3DzB5F,EAAKf,MAAQ,CACXwO,YAAa,GAHEzN,qFAQjBE,KAAKkN,0DAILlN,KAAKkN,8CAqDL,OACEtM,EAAAxK,EAAAyK,cAAA,KAAGyE,IAAI,gBAnEMpE,IAAMuH,eAiFVrH,eATS,SAAArC,GAAK,MAAK,CAChCvI,YAAauI,EAAMD,IAAItI,YACvBwD,YAAahF,IAAO+J,EAAMS,SAASxF,aAAa5E,OAAO,gBAG9B,SAAAiM,GAAQ,MAAK,CACtC1C,UAAW,SAAAvH,GAAG,OAAIiK,EAAS1C,EAAUvH,OAGxBgK,CAA6C6L,IClFtDe,gNAcJC,WAAa,WACX,IAAIC,EAAO7L,KAAa,SACxB,GAAI6L,EAAKC,OAAQ,CACf,IAAMC,EAAcF,EAAKC,OAAOE,iBAChCH,EACG1B,KAAK,mBAAoB4B,GACzB5B,KAAK,oBAAqB4B,GAC1B5B,KAAK,eAAgB,GACrBA,KAAK,SAAU,WACfF,aACAyB,SAAS,KACTvB,KAAK,eAAgB,GACrBA,KAAK,oBAAqB,GAEpBnK,KAAa,SAErBmK,KAAK,YAAa,oBAClBF,aACAgC,MAAM,KACNP,SAAS,KACTvB,KAAK,YAAa,qBAGvB+B,gBAAkB,SAACC,EAAQC,GAAW,IAAAhK,EAC6D3E,EAAKD,MAA9F6O,EAD4BjK,EAC5BiK,WAAY5B,EADgBrI,EAChBqI,OAAQa,EADQlJ,EACRkJ,WAAY5P,EADJ0G,EACI1G,MAAOsP,EADX5I,EACW4I,SAAU1O,EADrB8F,EACqB9F,UAAWnI,EADhCiO,EACgCjO,YAAawD,EAD7CyK,EAC6CzK,YAE3E2U,EAAc,SAAAjW,GAQlB,IAPA,IACIkW,EADEC,EAAQC,SAASC,uBAAuB,QAG1CC,EAAY,EACdvT,EAAMoT,GAASA,EAAMnW,GAAG2V,iBACxBtH,EAAS,KAEJtL,IACLsL,EAAS4C,KAAK9C,OAAOmI,EAAYvT,GAAO,GACxCmT,EAAMC,EAAMnW,GAAGuW,iBAAiBlI,GAC3BA,IAAWtL,GAAOsL,IAAWiI,GAAcJ,EAAIzU,IAAMqU,IAG1D,GAAII,EAAIzU,EAAIqU,EAAa/S,EAAMsL,MAC1B,MAAI6H,EAAIzU,EAAIqU,GACZ,MADoBQ,EAAYjI,EAIvC,OAAO6H,GAGTvM,KAAU,eACPmK,KAAK,IAAK,WACT,IAAIpN,EAAI,IAAMoP,EAAS,KAAOb,EAAa,IAE3C,OADAvO,GAAK,IAAMoP,EAAS,OAIxB,IAAMU,EAAa7M,KAAc,MAC3B5N,EAAY4N,KAAa,MAE/BA,KAAa,mBACVmK,KAAK,YAAa,SAASpN,EAAG1G,GAC7B,IAAMkW,EAAMD,EAAYjW,GAClByB,EAAIuU,EAAWS,OAAOP,EAAIzU,GAYhC,OAVAkI,KAAa,QACVmK,KAAK,OAAQ,SAAApN,GAAC,OAAK8P,EAAWza,EAAU2K,EAAExJ,SAAWsZ,EAAW/U,GAAKkI,KAAOtE,GAAOyP,SAAWzP,IAEjGsE,KAAU,mBACP0H,MAAM,UAAW,IACpB1H,KAAU,cACP0H,MAAM,OAAQ,WACdA,MAAM,cAAe,QACrB0C,KAAK9T,OAAOmU,EAAOqC,OAAOP,EAAI/I,IAAIjN,QAAQ,IAEtC,aAAe4V,EAAS,IAAMI,EAAI/I,EAAG,MAGhD,IAAMuJ,EAAO,WACX/M,KAAU,mBACP0H,MAAM,UAAW,GACpB1H,KAAU,kBACP0H,MAAM,UAAW,GACpB1H,KAAU,aACP0H,MAAM,UAAW,GACpB1H,KAAU,eACP0H,MAAM,UAAW,IAGtB1H,KAAa,kBACVmK,KAAK,YAAa,SAASpN,EAAG1G,GAE7B,IAAMyU,EAAOE,EAASvX,IAAI,SAAA4C,GAAC,OAAI1D,IAAO0D,EAAE9C,KAAM,KAAKR,OAAO,QAEpD+E,EAAIuU,EAAWS,OAAOR,EAAYjW,GAAGyB,GAE3C,GAAIgT,EAAKjU,QAAQgW,EAAW/U,KAAO,EAAG,CACpC,IAAMzE,EAAO2X,EAASjL,KAAK,SAAA1J,GAAC,OAAI1D,IAAO0D,EAAE9C,KAAM,KAAKR,OAAO,QAAU8Z,EAAW/U,KAiBhF,OAhBAkI,KAAU,uBACP0H,MAAM,SAAU,WAChB5B,GAAG,QAAS,WACXiH,IACAzQ,EAAU,CAAE/I,KAAMF,EAAMH,IAAKiB,EAAYxB,IAAOgF,GAAa5E,OAAO,mBAGxEiN,KAAU,kBACP0H,MAAM,UAAW,IACpB1H,KAAU,aACP0H,MAAM,UAAW,GACjBA,MAAM,OAAQ1H,KAAOtE,GAAOyP,UAC5BzD,MAAM,cAAe,QACrB0C,KAAK/W,EAAKoE,aACbuI,KAAU,eACP0H,MAAM,UAAW,GACpB,aAAA7U,OAAoBsZ,EAApB,KAAAtZ,OAA8BQ,EAAKmQ,EAAI,IAAvC,KAEFxD,KAAU,uBACP0H,MAAM,SAAU,QAChB5B,GAAG,QAAS,MACfiH,SAINC,eAAiB,SAAAjY,GACfiL,KAAU,eACP0H,MAAM,UAAW3S,GACpBiL,KAAa,gCACV0H,MAAM,UAAW3S,GACpBiL,KAAa,8BACV0H,MAAM,UAAW3S,2FA5IAkM,EAAWgB,GAC/B,OAAOhB,EAAUtJ,cAAgBgG,KAAKH,MAAM7F,aAC1CsJ,EAAUgM,YAActP,KAAKH,MAAMyP,sDAIrCtP,KAAKiO,0DAILjO,KAAKiO,8CAqIE,IAAAxN,EAAAT,KAAAuP,EACiEvP,KAAKH,MAArE6O,EADDa,EACCb,WAAYY,EADbC,EACaD,UAAW3B,EADxB4B,EACwB5B,WAAYX,EADpCuC,EACoCvC,OAAQF,EAD5CyC,EAC4CzC,OAAQ0C,EADpDD,EACoDC,SAErD/a,EAAY4N,KAAa,SAEzBoN,EAAOpN,OACVlI,EAAE,SAAAiF,GAAC,OAAIsP,EAAWja,EAAS,GAAAS,OAAIkK,EAAJ,WAC3BsQ,GAAG/B,EAAaX,EAAO/C,IAAM+C,EAAO2C,QACpCpb,GAAG,SAAA6K,GAAC,OAAI0N,EAAO0C,EAASpQ,MACxBwQ,MAAMvN,MAEH6L,EAAO7L,OACVlI,EAAE,SAAAiF,GAAC,OAAIsP,EAAWja,EAAS,GAAAS,OAAIkK,EAAJ,WAC3ByG,EAAE,SAAAzG,GAAC,OAAI0N,EAAO0C,EAASpQ,MACvBwQ,MAAMvN,MAET,OACEzB,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,YAAYwE,IAAI,aAC7B1E,EAAAxK,EAAAyK,cAAA,YACED,EAAAxK,EAAAyK,cAAA,kBAAgBoF,GAAG,OAAO5R,GAAG,KAAKE,GAAG,OAAOD,GAAG,KAAKE,GAAG,KAAKqb,aAAa,OACvEjP,EAAAxK,EAAAyK,cAAA,QAAMlM,OAAO,MAAMmb,UAAU,OAAOC,YAAa,KACjDnP,EAAAxK,EAAAyK,cAAA,QAAMlM,OAAO,MAAMmb,UAAU,UAAUC,YAAa,OAGxDnP,EAAAxK,EAAAyK,cAAA,QAAMC,UAAU,OACV0D,KAAK,aACLpF,EAAGqQ,EAAK9Y,OAAOC,KAAK4Y,MAE1B5O,EAAAxK,EAAAyK,cAAA,QAAMC,UAAU,cACV1B,EAAG8O,EAAKvX,OAAOC,KAAK4Y,MAE1B5O,EAAAxK,EAAAyK,cAAA,KAAGC,UAAU,sBACXF,EAAAxK,EAAAyK,cAAA,QACEC,UAAU,aACVyE,OAAO,OACPC,YAAa,EACbwK,gBAAgB,MAChBC,QAAS,IAGXrP,EAAAxK,EAAAyK,cAAA,KACEC,UAAU,kBAEVF,EAAAxK,EAAAyK,cAAA,UACEC,UAAU,cACV3K,EAAG,EACHqO,KAAK,UACLgB,YAAa,EACbD,OAAO,OACP0K,QAAS,IAEXrP,EAAAxK,EAAAyK,cAAA,QACEC,UAAU,iBACV3G,EAAG,GACH0L,GAAI,GACJoK,QAAS,IAGXrP,EAAAxK,EAAAyK,cAAA,QACEC,UAAU,YACV6L,SAAU,GACVD,UAAU,qBAGd9L,EAAAxK,EAAAyK,cAAA,KAAGC,UAAU,iBACXF,EAAAxK,EAAAyK,cAAA,UACEC,UAAU,aACV3K,EAAG,EACHqO,KAAMnC,KAAOrC,KAAKH,MAAM9B,OAAOyP,SAC/BhI,YAAa,EACbD,OAAO,OACP0K,QAAS,IAEXrP,EAAAxK,EAAAyK,cAAA,QACEC,UAAU,gBACV3G,GAAI,GACJ0L,GAAI,GACJoK,QAAS,IAGXrP,EAAAxK,EAAAyK,cAAA,QACEC,UAAU,WACV4L,UAAU,mBACVC,SAAU,GACVsD,QAAS,KAGbrP,EAAAxK,EAAAyK,cAAA,QACE4E,MAAO6J,EAAY,GACnB5J,OAAQiI,EACRjB,UAAU,iBACVlI,KAAK,OACL0L,cAAc,MACdC,aAAc,kBAAM1P,EAAK4O,eAAe,MACxCe,YAAa,kBAAM3P,EAAK4O,eAAe,MACvChF,YAAa,SAAAhK,GAAE,OAAII,EAAK8N,gBAAgBlO,EAAGgQ,YAAYC,QAAU,GAAIjQ,EAAGgQ,YAAYE,qBA/OxErP,IAAMC,WAmQfC,eAXS,SAAArC,GAAK,MAAK,CAChCvI,YAAauI,EAAMD,IAAItI,YACvBwD,YAAahF,IAAO+J,EAAMS,SAASxF,aACnCpE,KAAMmJ,EAAMD,IAAIlJ,OAGS,SAAAyL,GAAQ,MAAK,CACtC1C,UAAW,SAAAvH,GAAG,OAAIiK,EAAS1C,EAAUvH,OAIxBgK,CAA6C4M,gCC/PtDwC,gNAEJC,UAAY,WACV3Q,EAAKD,MAAMlB,UAAU,SAGvB+R,aAAe,SAACtZ,EAAKuZ,EAAIC,GAAV,OAAkBxZ,EAAMuZ,EAAG,KAAOC,EAAG,GAAKA,EAAG,KAAOD,EAAG,GAAKA,EAAG,IAAMC,EAAG,8EAE9E,IAAAnQ,EAAAT,KAAAyE,EACuCzE,KAAKH,MAA3C7F,EADDyK,EACCzK,YAAawE,EADdiG,EACcjG,UAAWC,EADzBgG,EACyBhG,UAC9B,OACAmC,EAAAxK,EAAAyK,cAAA,OAAKC,UAAWC,KAAW,QAAS,UAAW,CAAC8P,gBAAiBrS,GAAY,CAACsS,gBAAiBtS,IAAayC,QAASjB,KAAKyQ,WACxH7P,EAAAxK,EAAAyK,cAAA,WAASC,UAAU,aAAaG,QAAS,SAAAZ,GAAE,OAAIA,EAAG0D,oBAChDnD,EAAAxK,EAAAyK,cAAA,KAAGC,UAAU,eAAeG,QAASjB,KAAKyQ,YAC1C7P,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,eAAe9G,GAC7BwE,GAAaoC,EAAAxK,EAAAyK,cAAA,sBAAc7L,IAAOwJ,EAAU5I,KAAM,MAAMR,OAAO,QAAlD,MAA8DJ,IAAO4E,SAAS4E,EAAU5I,MAAM,EAAG,MAAMR,OAAO,SAC5HwL,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,cACbF,EAAAxK,EAAAyK,cAAA,OAAKkQ,IAAKC,KAAOC,IAAI,GAAGxL,MAAO,GAAIC,OAAQ,MAE7C9E,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,kBAEXnK,OAAOC,KAAK6H,GAAW3I,IAAI,SAAAgB,GAAG,OAC1B8J,EAAAxK,EAAAyK,cAAA,QAAMC,UAAU,OAAOiJ,MAAO,CAAE4C,SAAUlM,EAAKiQ,aAAajS,EAAU3H,GAAM,CAAC,EAAE,IAAK,CAAC,GAAG,OAC3FA,eAvBKoK,IAAMuH,eA4CXrH,eAVS,SAAArC,GAAK,MAAK,CAChCP,UAAWO,EAAMY,SAASnB,UAC1BxE,YAAahF,IAAO+J,EAAMS,SAASxF,aAAa5E,OAAO,sBACvDqJ,UAAWM,EAAMY,SAASlB,YAGD,SAAA4C,GAAQ,MAAK,CACtC1C,UAAW,SAAAvH,GAAG,OAAIiK,EAAS1C,EAAUvH,OAGxBgK,CAA6CoP,ICO7CpP,eAdS,SAAArC,GAAK,MAAK,CAChCmS,sBAAuBnS,EAAMY,SAAStB,iBACtC8S,uBAAwBpS,EAAMY,SAASrB,kBACvC8S,yBAA0BrS,EAAMY,SAASpB,sBAGhB,SAAA8C,GAAQ,MAAK,CACtChD,iBAAkB,SAAAjH,GAAG,OAAIiK,EAAShD,EAAiBjH,KACnDkH,kBAAmB,SAAAlH,GAAG,OAAIiK,EAAS/C,EAAkBlH,KACrDmH,oBAAqB,SAAAnH,GAAG,OAAIiK,EAAS9C,EAAoBnH,KACzDsH,aAAc,SAAAtH,GAAG,OAAIiK,EAAS3C,EAAatH,KAC3Cia,QAAS,SAAAja,GAAG,OAAIiK,EhBSK,SAAAjK,GAAG,MAAK,CAAE2F,KA5DnB,QA4DgC3F,OgBTnBia,CAAQja,OAGpBgK,CAlDA,SAAAvB,GACb,IAAMyR,EAAmB,WACvBzR,EAAMxB,kBAAkBwB,EAAMqR,wBAE1BK,EAAwB,WAC5B1R,EAAMvB,mBAAmBuB,EAAMsR,yBAE3BK,EAA0B,WAC9B3R,EAAMtB,qBAAqBsB,EAAMuR,2BAkBnC,OACExQ,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,qBACXjB,EAAM4R,WAdV7Q,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,cACZF,EAAAxK,EAAAyK,cAAA,QAAMC,UAAWC,KAAW,WAAY,CAACC,KAAQnB,EAAMqR,wBAAyBjQ,QAASqQ,GAAzF,iBACgB1Q,EAAAxK,EAAAyK,cAAA,SAAO9D,KAAK,WAAW2U,QAAS7R,EAAMqR,sBAAuBS,gBAAgB,EAAOC,SAAUN,KAE/G1Q,EAAAxK,EAAAyK,cAAA,QAAMC,UAAWC,KAAW,WAAY,CAACC,KAAQnB,EAAMsR,yBAA0BlQ,QAASsQ,GAA1F,kBACkB3Q,EAAAxK,EAAAyK,cAAA,SAAO9D,KAAK,WAAW2U,QAAS7R,EAAMsR,uBAAwBQ,gBAAgB,EAAOC,SAAUL,KAEjH3Q,EAAAxK,EAAAyK,cAAA,QAAMC,UAAWC,KAAW,WAAY,CAACC,KAAQnB,EAAMuR,2BAA4BnQ,QAASuQ,GAA5F,YACY5Q,EAAAxK,EAAAyK,cAAA,SAAO9D,KAAK,WAAW2U,QAAS7R,EAAMuR,yBAA0BO,gBAAgB,EAAOC,SAAUJ,MAMnE5Q,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,eACzDF,EAAAxK,EAAAyK,cAAA,UAAQI,QAnBU,WACpBpB,EAAMwR,YAkBJ,oBCxBAQ,eACJ,SAAAA,EAAYhS,GAAO,IAAAC,EAAA,OAAAnJ,OAAAoJ,EAAA,EAAApJ,CAAAqJ,KAAA6R,IACjB/R,EAAAnJ,OAAAsJ,GAAA,EAAAtJ,CAAAqJ,KAAArJ,OAAAuJ,GAAA,EAAAvJ,CAAAkb,GAAA1R,KAAAH,KAAMH,KAkBRiS,OAAS,WACPhS,EAAKS,SAAS,CACZkF,MAAOqJ,SAASiD,eAAe,QAAQC,YAAclS,EAAKD,MAAMmN,OAAOhD,KAAOlK,EAAKD,MAAMmN,OAAOiF,SArBjFnS,EAyBnBoS,QAAU,WACR,OAAMpS,EAAKD,MAAMlI,aAAaW,OACrBwH,EAAKD,MAAM5H,WAEd6H,EAAKD,MAAMnJ,cAAc4B,OACtBwH,EAAKD,MAAMtI,YAEduI,EAAKD,MAAMxH,gBAAgBC,OACxBwH,EAAKD,MAAM/G,cAEbgH,EAAKD,MAAMwN,UAnCDvN,EAsCnBqS,YAAc,WACZ,OAAIrS,EAAKD,MAAMqR,sBACNnX,EAAuB+F,EAAKD,MAAMjK,KAAMkK,EAAKD,MAAM7F,YAAa8F,EAAKD,MAAMrJ,aAEhFsJ,EAAKD,MAAMsR,uBACN1W,EAAwBqF,EAAKD,MAAMjK,KAAMkK,EAAKD,MAAM7F,YAAa8F,EAAKD,MAAMrJ,aAEjFsJ,EAAKD,MAAMuR,yBACNlZ,EAAmBlD,IAAO8K,EAAKD,MAAM7F,aAAa5E,OAAO,OAAQ0K,EAAKD,MAAMrJ,YAAasJ,EAAKD,MAAMpJ,QAASqJ,EAAKD,MAAMzH,gBAAiB0H,EAAKD,MAAMjK,MAAM6C,WAE7JqH,EAAKD,MAAM7G,eAAeV,OACvBS,EAA0B+G,EAAKD,MAAM7G,eAAgB8G,EAAKD,MAAMjK,KAAMkK,EAAKD,MAAMrJ,YAAasJ,EAAKD,MAAMpJ,SAAS2C,qBAD3H,GAhDiB0G,EAqDnBsS,cAAgB,kBAAMtS,EAAKD,MAAMqR,uBAAyBpR,EAAKD,MAAMsR,wBAA0BrR,EAAKD,MAAMuR,4BAA8BtR,EAAKD,MAAM7G,eAAeV,QArD/IwH,EAuDnBuS,YAAc,SAAAzc,GACZ,IAAMuW,EAAS9J,OACTqM,EAAarM,OACbyK,EAASzK,OAAiBiQ,OAE1B9C,EAAW1P,EAAKqS,cAEhB5S,EAAMiQ,EACV7F,KAAK4I,KAAK5I,KAAKpK,IAAI8C,KAAO1L,OAAOQ,OAAOqY,GAAU1Z,IAAI,SAAA4C,GAAC,OAAIkB,SAASlB,MAAM2J,KAAO1L,OAAOQ,OAAOvB,GAAME,IAAI,SAAA4C,GAAC,OAAIkB,SAASlB,QACvH2J,KAAO1L,OAAOQ,OAAOvB,IAEjB4c,EAAU,CAAC,EAAG1S,EAAKsS,gBAAkB7S,EAAMA,EAAM,GAAKA,GAGtDkT,EADYpQ,KAAa,QACd5N,CAAU,SAc3B,OAZA0X,EACGhJ,OAAO,CAACsP,EAAUpQ,KAAW1N,OAAO8d,KACpCvP,MAAM,CAAC,EAAGpD,EAAKf,MAAM0G,MAAQ3F,EAAKD,MAAMmN,OAAOiF,QAElDvD,EACGvL,OAAO,CAACsP,EAAUpQ,KAAW1N,OAAO8d,KACpCvP,MAAM,CAAC,EAAGpD,EAAKf,MAAM0G,MAAQ3F,EAAKD,MAAMmN,OAAOiF,QAElDnF,EACG3J,OAAOqP,GACPtP,MAAM,CAACpD,EAAKD,MAAM6F,OAAS5F,EAAKD,MAAMmN,OAAO/C,IAAMnK,EAAKD,MAAMmN,OAAO2C,OAAQ,IAEzE,CAACxD,SAAQW,SAAQ4B,eAnFP5O,EAsFnB4S,eAAiB,WAGf,MAAO,CAACpD,UAFUxP,EAAKf,MAAM0G,OAAS3F,EAAKD,MAAMmN,OAAOhD,KAAOlK,EAAKD,MAAMmN,OAAOiF,OAE9DtE,WADA7N,EAAKD,MAAM6F,SAtF9B5F,EAAKf,MAAQ,CACX0G,MAAgG,KAAxFqJ,SAASiD,eAAe,QAAQC,YAAcnS,EAAMmN,OAAOhD,KAAOnK,EAAMmN,OAAOiF,QAHxEnS,qFAOC,IAAAW,EAAAT,KAClBvC,OAAO8M,iBAAiB,SAAU,kBAAM9J,EAAKqR,0DAGxB,IAAAa,EAAA3S,KACrBvC,OAAOmV,oBAAoB,SAAU,kBAAMD,EAAKb,wDAIhDnJ,KAAaC,2CA4EN,IAAAiK,EAAA7S,KACDpK,EAAOoK,KAAKkS,UADXY,EAGiC9S,KAAKqS,YAAYzc,GAAjDuW,EAHD2G,EAGC3G,OAAQW,EAHTgG,EAGShG,OAAQ4B,EAHjBoE,EAGiBpE,WAHjBqE,EAI2B/S,KAAK0S,iBAA/BpD,EAJDyD,EAICzD,UAAW3B,EAJZoF,EAIYpF,WAEbpO,EAAM8C,KAAO1L,OAAOQ,OAAOvB,IAC3BmX,EAAYxN,EAAM,GAAKA,EAAOA,EAAM,GAAKA,EAAM,EAAIA,EAAM,EAEzD9K,EAAY4N,KAAa,MAEzB2Q,EAAW,CACf7G,SACAW,SACA4B,aACAY,YACA3B,aACAZ,aAEIM,EAAW,CACfA,SAAU1W,OAAOC,KAAKhB,GAAME,IAAI,SAACJ,EAAMgD,GAAP,MAAc,CAC5CuN,GAAIvN,EACJ9C,KAAMF,EACNyE,EAAGgS,EAAO1X,EAAUiB,IACpBmQ,EAAGiH,EAAOlX,EAAKF,IACf+P,OAASoN,EAAK9T,MAAM0G,MAAQoN,EAAKhT,MAAMmN,OAAOiF,OAAS,GAAM,GAC7DvM,OAAQiI,EAAab,EAAOlX,EAAKF,IAASmd,EAAKhT,MAAMmN,OAAO/C,IAAM4I,EAAKhT,MAAMmN,OAAO2C,OACpF7V,YAAalE,EAAKF,OAIhBgX,EAAS,aAAAxX,OAAgB8K,KAAKH,MAAMmN,OAAOhD,KAAlC,KAAA9U,OAA0C8K,KAAKH,MAAMmN,OAAO/C,IAA5D,KACTlM,EAAQiC,KAAKH,MAAM9B,OAAS6D,GAAgB5B,KAAKH,OAEjD4R,IAAezR,KAAKH,MAAMvI,eAAiB0I,KAAKH,MAAMhH,iBAAmBmH,KAAKH,MAAM7H,cAE1F,OACE4I,EAAAxK,EAAAyK,cAAA,WACED,EAAAxK,EAAAyK,cAAA,OAAK4E,MAAM,OAAOC,OAAQ1F,KAAKH,MAAM6F,OAAQJ,IAAI,YAC/C1E,EAAAxK,EAAAyK,cAAA,KAAG6L,UAAWA,EAAWjH,MAAO6J,EAAW5J,OAAQiI,GACjD/M,EAAAxK,EAAAyK,cAACoS,GAADtc,OAAA8I,OAAA,GAAWuT,EAAX,CAAqBtG,UAAS,eAAAxX,OAAiByY,EAAa,GAA9B,KAAqCX,OAAQhN,KAAKH,MAAMmN,OAAQvH,MAAOzF,KAAKjB,MAAM0G,MAAOC,OAAQ1F,KAAKH,MAAM8N,cAC1I/M,EAAAxK,EAAAyK,cAACqS,GAADvc,OAAA8I,OAAA,GAAWuT,EAAX,CAAqBhG,OAAQhN,KAAKH,MAAMmN,OAAQtH,OAAQiI,KACxD/M,EAAAxK,EAAAyK,cAACsS,GAADxc,OAAA8I,OAAA,GAAUuT,EAAc3F,EAAxB,CAAkCtP,MAAOA,KACxCiC,KAAKoS,iBACNxR,EAAAxK,EAAAyK,cAACuS,GAADzc,OAAA8I,OAAA,GAAeuT,EAAc3F,EAA7B,CAAuCL,OAAQhN,KAAKH,MAAMmN,OAAQwC,SAAUxP,KAAKmS,cAAepU,MAAOA,OAG3G6C,EAAAxK,EAAAyK,cAACwS,GAAD,CAAQ5B,WAAYA,IACpB7Q,EAAAxK,EAAAyK,cAACoI,GAAA7S,EAAD,CAAc6P,GAAG,cAAciD,WAAS,EAACC,MAAM,YAC/CvI,EAAAxK,EAAAyK,cAACyS,GAAD,cA9IepS,IAAMC,WAoLdC,eAjCS,SAAArC,GAAK,MAAK,CAChCvI,YAAauI,EAAMD,IAAItI,YACvBmB,aAAcoH,EAAMD,IAAInH,aACxBjB,cAAeqI,EAAMD,IAAIpI,cACzB2B,gBAAiB0G,EAAMD,IAAIzG,gBAC3BJ,WAAY8G,EAAMD,IAAI7G,WACtBV,YAAawH,EAAMD,IAAIvH,YACvBuB,cAAeiG,EAAMD,IAAIhG,cACzBd,aAAc+G,EAAMD,IAAI9G,aACxBgC,YAAahF,IAAO+J,EAAMS,SAASxF,aAAa5E,OAAO,cACvDkC,cAAeyH,EAAMD,IAAIxH,cACzBuB,gBAAiBkG,EAAMD,IAAIjG,gBAC3BG,eAAgB+F,EAAMD,IAAI9F,eAC1BK,aAAc0F,EAAMD,IAAIzF,aACxBzD,KAAMmJ,EAAMD,IAAIlJ,KAChBa,QAASsI,EAAMD,IAAIrI,QACnB+F,QAASuC,EAAMD,IAAItC,QACnBpE,gBAAiB2G,EAAMS,SAASpH,gBAChC8Y,sBAAuBnS,EAAMY,SAAStB,iBACtC8S,uBAAwBpS,EAAMY,SAASrB,kBACvC8S,yBAA0BrS,EAAMY,SAASpB,oBACzCR,MAAOgB,EAAMS,SAASzB,MACtBC,OAAQe,EAAMS,SAASxB,SAGE,SAAAqD,GAAQ,MAAK,CACtChD,iBAAkB,SAAAjH,GAAG,OAAIiK,EAAShD,EAAiBjH,KACnDkH,kBAAmB,SAAAlH,GAAG,OAAIiK,EAAS/C,EAAkBlH,KACrDmH,oBAAqB,SAAAnH,GAAG,OAAIiK,EAAS9C,EAAoBnH,KACzDsH,aAAc,SAAAtH,GAAG,OAAIiK,EAAS3C,EAAatH,KAC3C8G,UAAW,SAAA9G,GAAG,OAAIiK,EAASnD,EAAU9G,OAGxBgK,CAA6CyQ,ICpJ7CzQ,sBARS,SAAArC,GAAK,MAAK,CAChCvI,YAAauI,EAAMD,IAAItI,YACvBmB,aAAcoH,EAAMD,IAAInH,aACxBjB,cAAeqI,EAAMD,IAAIpI,cACzB2B,gBAAiB0G,EAAMD,IAAIzG,gBAC3B2B,YAAahF,IAAO+J,EAAMS,SAASxF,aAAa5E,OAAO,gBAG1CgM,CApCG,SAAAvB,GAChB,IAAMnB,IAAiBmB,EAAMrJ,YAAYqJ,EAAM7F,gBAC3C6F,EAAMlI,aAAaW,UACnBuH,EAAMnJ,cAAc4B,UACpBuH,EAAMxH,gBAAgBC,OAEpBib,EAAgB,CACpBlG,SAAUxN,EAAMjK,KAChBoX,OAAQnN,EAAMmN,OACdtH,OAAQ7F,EAAM6F,QAGhB,OACE9E,EAAAxK,EAAAyK,cAAC4J,GAAD,CAAS3J,UAAU,sBACjBF,EAAAxK,EAAAyK,cAAC6J,GAAD,CAAMvE,SAAU,GACdvF,EAAAxK,EAAAyK,cAAC2S,GAAD,CAAUxZ,YAAa6F,EAAM7F,cAC7B4G,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,YAEXpC,EACIkC,EAAAxK,EAAAyK,cAAC4S,GAAaF,GACd3S,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,eAAf,0BCzBV4S,sBACJ,SAAAA,EAAY7T,GAAO,IAAAC,EAAA,OAAAnJ,OAAAoJ,EAAA,EAAApJ,CAAAqJ,KAAA0T,IACjB5T,EAAAnJ,OAAAsJ,GAAA,EAAAtJ,CAAAqJ,KAAArJ,OAAAuJ,GAAA,EAAAvJ,CAAA+c,GAAAvT,KAAAH,KAAMH,KAcR8T,UAAY,SAAAvc,GACV,IAAMmI,EAAMoK,KAAKpK,IAALhF,MAAAoP,KAAIhT,OAAAmF,EAAA,EAAAnF,CAAQA,OAAOQ,OAAO2I,EAAKD,MAAMjK,QAC3C0J,EAAMqK,KAAKrK,IAAL/E,MAAAoP,KAAIhT,OAAAmF,EAAA,EAAAnF,CAAQA,OAAOQ,OAAO2I,EAAKD,MAAMjK,QACjD,OAAsBwB,EAAMkI,IAAQC,EAAMD,GAAnC,IAA2C,KAlBjCQ,EAqBnB8T,cAAgB,SAAAxc,GACd,IAAMmI,EAAMoK,KAAKpK,IAALhF,MAAAoP,KAAIhT,OAAAmF,EAAA,EAAAnF,CAAQA,OAAOQ,OAAO2I,EAAKD,MAAMjK,QAC3C0J,EAAMqK,KAAKrK,IAAL/E,MAAAoP,KAAIhT,OAAAmF,EAAA,EAAAnF,CAAQA,OAAOQ,OAAO2I,EAAKD,MAAMjK,QACjD,OAAoBwB,EAAMkI,IAAQC,EAAMD,GAAjC,GAAyC,GAxB/BQ,EA2BnB+T,cAAgB,SAAAC,GACdA,EACG/J,MAAM,eAAW9K,GACjByO,QAAQ,CAAEqG,IAAKjU,EAAKf,MAAMiV,UAC7BlU,EAAKS,SAAS,CACZyT,SAAUlU,EAAKf,MAAMiV,WAhCNlU,EAoCnBmU,WAAa,WACX,IAAMC,EAAM7R,KAAUvC,EAAK+D,KAAKnE,aAS1B9J,EAHYe,OAAOC,KAAKkJ,EAAKD,MAAMjK,MACtCue,KAAK,SAAC/d,EAAG2L,GAAJ,OAAU/M,IAAOoB,EAAG,OAAOwB,aAAe5C,IAAO+M,EAAG,OAAOnK,eAE5C9B,IAAI,SAAAgB,GACzB,MAAO,CACLsd,aAActU,EAAKD,MAAMjK,KAAKkB,GAC9B/B,MAAO+K,EAAK8T,cAAc9T,EAAKD,MAAMjK,KAAKkB,IAC1Cud,MAAOvd,EACPiH,MAAOsE,KAAoBvC,EAAK6T,UAAU7T,EAAKD,MAAMjK,KAAKkB,QAIxDwd,EAAO1e,EAAKE,IAAI,SAACL,EAAKiD,GAC1B,OAAO2J,OAASkS,YAhBD,KAgBa7b,EAfV8b,IAeqCC,YAhBxC,MAgBqD/b,EAAI,GAAgB+M,IAftE+O,MAkBdE,EAAW9e,EAAKE,IAAI,SAAUL,EAAKiD,GACvC,OAAO2J,OAASkS,YApBD,KAoBa7b,EAAA,OAAmD+b,YApBhE,MAoB6E/b,EAAI,GAAiB8b,KAnB/FA,MAsBdG,EAAU/e,EAAKE,IAAI,SAAUL,EAAKiD,GACtC,MAAO,CACL,CAAC3D,MAAmB,IAAZU,EAAIV,MAAc6f,IAAKN,EAAK5b,GAAImc,OAAQpf,GAChD,CAACV,MAA2B,KAAnB,IAAMU,EAAIV,OAAe6f,IAAKF,EAAShc,GAAImc,OAAQpf,GAC5D,CAACV,MAAO,GAAY6f,IAAKN,EAAK5b,GAAImc,OAAQpf,MAGxCqf,EAAMzS,OACT8R,KAAK,MACLpf,MAAM,SAAAqK,GAAC,OAAIA,EAAErK,QAEV+M,EAAIoS,EAAI3K,UAAU,KAAK3T,KAAK+e,GAC/BlH,QACAlB,OAAO,KACPC,KAAK,YAAa,kCAEfuI,EAAQb,EAAI3K,UAAU,eAAe3T,KAAK,CAAC,KAAK6X,QACnDlB,OAAO,KACPmB,QAAQ,aAAa,GACrBlB,KAAK,YAAa,kCAErB1K,EAAEyH,UAAU,QAAQ3T,KAAK,SAAUwJ,GACjC,OAAO0V,EAAI1V,KAEVqO,QACAlB,OAAO,QACPC,KAAK,KAAM,SAAUpN,EAAG1G,GACvB,OAAU,IAANA,EACK,MAAQ0G,EAAExJ,KAAKif,OAAOR,MAErB,IAAN3b,EACK,OAAS0G,EAAExJ,KAAKif,OAAOR,WADhC,IAIDtK,MAAM,SAAU,WAChB5B,GAAG,YAAa,SAAU/I,EAAG1G,GAC5B,GAAU,IAANA,EAAS,CACX,IAAMuN,EAAK5D,KAAUrC,MAAMwM,KAAK,MAChCnK,KAAa,QACViK,aACAzV,OAAO,WACN,OAAOwL,KAAUrC,MAAMwM,KAAK,QAAUvG,IAEvC8H,SAAS,KACRvB,KAAK,UAAW,SAAUpN,EAAG4V,GAC7B,OAAOA,IAAMtc,EAAI,EAAI,GAAM,IAG/B2J,KAAa,mBACViK,aACAzV,OAAO,WACN,OAAOwL,KAAUrC,MAAMyM,SAAWrN,EAAExJ,KAAKif,OAAOR,QAEjDtG,SAAS,KACRvB,KAAK,UAAW,SAAUpN,EAAG4V,GAC7B,OAAOA,IAAMtc,EAAI,EAAI,GAAM,OAIlCyP,GAAG,aAAc,SAAC/I,EAAG1G,GACpB2J,KAAa,QAAQmK,KAAK,UAAW,GACrCnK,KAAa,mBAAmBmK,KAAK,UAAW,KAEjDA,KAAK,OAAQ,SAACpN,EAAG1G,GAAJ,OAAgB,IAANA,EAAU0G,EAAExJ,KAAKif,OAAO9W,MAAc,IAANrF,EAAU,UAAY,SAC7E4T,aACAyB,SAAS,KACPkH,UAAU,IAAK,SAAU7V,GACxB,IAAM1G,EAAI2J,KAAejD,EAAE8V,WAAW,GAAK9V,EAAE+V,UAC7C,OAAO,SAASC,GAEd,OADAhW,EAAE+V,SAAWzc,EAAE0c,GACRhW,EAAExJ,KAAKgf,IAAIxV,MAI1B8U,EAAI3K,UAAU,KAAK8L,KAAK,SAAUjW,EAAG8H,GACxB7E,KAAUrC,MAClBuJ,UAAU,QAAQ8L,KAAK,SAAUlf,EAAGuC,GACrC,GAAU,IAANA,EAAS,CACX,IAAM4c,EAAWnf,EAAEP,KAAKif,OACxB/S,EAAEyK,OAAO,QACNC,KAAK,YAAe,IACpBA,KAAK,OAAQ,QACbA,KAAK,oBAAqB,WAC1BD,OAAO,YACPC,KAAK,aAAc,SAAUpN,EAAG1G,GAC/B,OAAO,IAER8T,KAAK,aAAc,QAAU8I,EAASjB,OACtC7H,KAAK,cAAe,KACpBA,KAAK,KAAM,QACXF,aACAgC,MAAM,KACJ7B,KAAK6I,EAASlB,cAErB,GAAU,IAAN1b,EAAS,CACX,IAAM6c,EAAepf,EAAEP,KAAKgf,IAAIY,SAAS,CACvCN,WAAY/e,EAAE+e,WACdC,SAAUhf,EAAE+e,aAERI,EAAWnf,EAAEP,KAAKif,OACxBE,EAAMxI,OAAO,QACVC,KAAK,YAAe,IACpBA,KAAK,OAAQ,kBAAM8I,EAASvX,QAC5ByO,KAAK,cAAe,OACpBF,aACAgC,MAAM,KACJ7B,KAAK6I,EAASjB,OAChB7H,KAAK,YAAa,cAAgB+I,EAAa,GAAO,MAAuB,IAAOA,EAAa,GAAK,iBACtG/I,KAAK,oBAAqB,iBAzKnC1M,EAAKf,MAAQ,CACXiV,SAAS,GAHMlU,qFAQjBE,KAAKiU,0DAILjU,KAAKiU,8CAsKL,OACErT,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,eAAewE,IAAI,cAAcG,MAAM,OAAOC,OAAQ,aApLjDxE,IAAMuH,gBA8LjBrH,eALS,SAAArC,GAAK,MAAK,CAChCvI,YAAauI,EAAMD,IAAItI,YACvBwD,YAAahF,IAAO+J,EAAMS,SAASxF,aAAa5E,OAAO,gBAG1CgM,CAAyBsS,ICtKzBtS,eANS,SAAArC,GAAK,MAAK,CAChCvI,YAAauI,EAAMD,IAAItI,YACvBZ,KAAMmJ,EAAMD,IAAIlJ,KAChBa,QAASsI,EAAMD,IAAIrI,UAGN2K,CArBc,SAAAvB,GAG3B,OACEe,EAAAxK,EAAAyK,cAAC4J,GAAD,CAAS3J,UAAU,qBACjBF,EAAAxK,EAAAyK,cAAC6J,GAAD,KACE9J,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,8CAAf,gBACAF,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,YACbF,EAAAxK,EAAAyK,cAAC4U,GAAD,CAAa7f,KxB0FW,SAACa,EAASb,EAAMY,GAChD,IAAM6B,EAAkB1B,OAAOC,KAAKJ,GACjChB,OAAO,SAACC,EAAKqB,GACZ,IAAMqB,EAAUnD,IAAO8B,EAAK,cAAc1B,OAAO,OAGjD,OAFAK,EAAI0C,GAAW1C,EAAI0C,IAAY,GAC/B1C,EAAI0C,GAAS9B,KAAKG,EAAYM,IACvBrB,GACN,IACL,OAAOkB,OAAOC,KAAKyB,GAChB7C,OAAO,SAACC,EAAKqB,GAEZ,OADArB,EAAIqB,GAAOuB,EAAgBvB,GAAKU,OAAOc,OAChC7C,GACN,IwB7GqBigB,CAAmB7V,EAAMpJ,QAASoJ,EAAMjK,KAAMiK,EAAMrJ,iICiKjE4K,eAvBS,SAAArC,GAAK,MAAK,CAChCpC,MAAOoC,EAAMD,IAAInC,MACjBD,YAAaqC,EAAMD,IAAIpC,cAGE,SAAA2E,GAAQ,MAAK,CACtCsU,WAAY,SAAAve,GAAG,OAAIiK,ExB/CK,SAAAjK,GAAG,MAAK,CAAE2F,KAxGhB,cAwGmC3F,OwB+CzBue,CAAWve,KACvCwe,QAAS,SAAAxe,GAAG,OAAIiK,ExBjDK,SAAAjK,GAAG,MAAK,CAAE2F,KAxGhB,WAwGgC3F,OwBiDtBwe,CAAQxe,KACjCye,eAAgB,SAAAze,GAAG,OAAIiK,ExBhDK,SAAAjK,GAAG,MAAK,CAAE2F,KAxGf,mBAwGuC3F,OwBgD9Bye,CAAeze,KAC/C0F,YAAa,SAAA1F,GAAG,OAAIiK,EAASvE,EAAY1F,KACzC0e,aAAc,SAAA1e,GAAG,OAAIiK,EvBzFK,SAAAjK,GAAG,MAAK,CAAE2F,KApEhB,gBAoEqC3F,OuByF3B0e,CAAa1e,KAC3CsH,aAAc,SAAAtH,GAAG,OAAIiK,EAAS3C,EAAatH,KAC3C4F,iBAAkB,SAAA5F,GAAG,OAAIiK,EAASrE,EAAiB5F,KACnD6F,gBAAiB,SAAA7F,GAAG,OAAIiK,EAASpE,EAAgB7F,KACjD8F,mBAAoB,SAAA9F,GAAG,OAAIiK,EAASnE,EAAmB9F,KACvD6G,UAAW,SAAA7G,GAAG,OAAIiK,EAASpD,EAAU7G,KACrCiH,iBAAkB,SAAAjH,GAAG,OAAIiK,EAAShD,EAAiBjH,KACnDkH,kBAAmB,SAAAlH,GAAG,OAAIiK,EAAS/C,EAAkBlH,KACrDmH,oBAAqB,SAAAnH,GAAG,OAAIiK,EAAS9C,EAAoBnH,KACzD2e,YAAa,SAAA3e,GAAG,OAAIiK,EvB7FK,SAAAjK,GAAG,MAAK,CAAE2F,KApEhB,eAoEoC3F,OuB6F1B2e,CAAY3e,OAI5BgK,CA1JA,SAAAvB,GACb,IAuBMlD,EAAQkD,EAAMlD,MAAM7G,IAAI,SAACkgB,EAAMtd,GAAP,OAC5BkI,EAAAxK,EAAAyK,cAAA,QAAM/J,IAAK4B,GACNkI,EAAAxK,EAAAyK,cAAA,KAAG/J,IAAKkf,EAAKC,MACVD,EAAKC,MAERrV,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,aAZF,SAAAoV,GAElB,GAAc,IAAVA,EAAa,MAAO,SACxB,IAAMxd,EAAIkB,SAAS+P,KAAK9C,MAAM8C,KAAK/F,IAAIsS,GAASvM,KAAK/F,IAAI,QACzD,OAAO+F,KAAKwM,MAAMD,EAAQvM,KAAKyM,IAAI,KAAM1d,GAAI,GAAK,IAHpC,CAAC,QAAS,KAAM,KAAM,KAAM,MAGoBA,GAStD2d,CAAYL,EAAKhP,UAOrBsP,EAAgB,SAAAC,GACpBlU,KAAOkU,GAASC,KAAK,SAAA5gB,GACnBiK,EAAM+V,QAAQhgB,GACdiK,EAAMiW,cAAa,KAClBW,MAAM,SAAAC,GACP,MAAMA,KAgDV,OACE9V,EAAAxK,EAAAyK,cAAC4J,GAAD,CAASpB,MAAM,iBAAiBvI,UAAU,kBACxCF,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,kBACbF,EAAAxK,EAAAyK,cAAC8V,GAAAvgB,EAAD,CACE0K,UAAU,WACV8V,QA5DQ,CAAC,gBAAiB,gBAAiB,gBAAiB,iBA6D5DC,YAAY,YACZ9hB,MAAO8K,EAAMnD,YACbkV,SA5BS,SAAAlc,GAvBfmK,EAAMnB,cAAa,GACnBmB,EAAMiW,cAAa,GACnBjW,EAAM7C,iBAAiB,CACrBtG,cAAe,GACfa,YAAa,KAEfsI,EAAM3C,mBAAmB,CACvBrE,gBAAiB,KACjBC,cAAe,GACfT,gBAAiB,KAEnBwH,EAAM5C,gBAAgB,CACpBjF,aAAc,KACdC,WAAY,GACZN,aAAc,KAEhBkI,EAAM5B,UAAU,MAChB4B,EAAMxB,kBAAiB,GACvBwB,EAAMvB,mBAAkB,GACxBuB,EAAMtB,qBAAoB,GAC1BsB,EAAMkW,cAKN,IAAMhhB,EAAQW,EAAKX,MACnB8K,EAAMgW,eAAe9gB,GACrB8K,EAAM/C,aAAY,GACJ,kBAAV/H,GACFuhB,EAAcQ,MAEF,kBAAV/hB,GACFuhB,EAAcS,MAEF,kBAAVhiB,GACFuhB,EAAcU,MAEF,kBAAVjiB,GACFuhB,EAAcW,SAeZrW,EAAAxK,EAAAyK,cAACqW,GAAA,EAAD,CACEC,OAAO,WACPC,OArGO,SAACC,EAAeC,GAC7BzX,EAAM8V,WAAW0B,GACjBA,EAAclV,QAAQ,SAAA6T,GACpB,IAAMuB,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,IAAM7hB,EAAO2hB,EAAOG,OACdC,EAAStV,KAAYzM,GAC3BiK,EAAM+V,QAAQ+B,GACd9X,EAAMiW,cAAa,IAErByB,EAAOK,QAAU,kBAAMjU,QAAQC,IAAI,6BACnC2T,EAAOM,QAAU,kBAAMlU,QAAQC,IAAI,4BACnC2T,EAAOO,mBAAmB9B,OA2FrB,SAAA+B,GAAiD,IAA/CC,EAA+CD,EAA/CC,aAAcC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,aAC9B,OACEtX,EAAAxK,EAAAyK,cAAA,MAAAlK,OAAA8I,OAAA,GACMuY,IADN,CAEElX,UAAWC,KAAW,WAAY,CAACoX,qBAAsBD,EAAcE,qBAAsBzb,EAAMrE,WAEnGsI,EAAAxK,EAAAyK,cAAA,QAAWoX,KAEPtb,EAAMrE,OACJsI,EAAAxK,EAAAyK,cAAA,QAAMC,UAAU,aACZF,EAAAxK,EAAAyK,cAAA,KAAGC,UAAU,iBAChBnE,GAEDiE,EAAAxK,EAAAyK,cAAA,QAAMC,UAAU,kBACZF,EAAAxK,EAAAyK,cAAA,KAAGC,UAAU,iBADjB,oHC5DPM,eARS,SAAArC,GAAK,MAAK,CAChCtI,QAASsI,EAAMD,IAAIrI,QACnBuD,YAAahF,IAAO+J,EAAMS,SAASxF,aAAa5E,OAAO,cACvDkI,kBAAmByB,EAAMS,SAASlC,kBAClCc,kBAAmBW,EAAMY,SAASvB,kBAClCvB,iBAAkBkC,EAAMD,IAAIjC,mBAGfuE,CAvDH,SAAAvB,GAgBV,OACEe,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,OACbF,EAAAxK,EAAAyK,cAAA,UAAQC,UAAU,UAChBF,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,SAAf,kCACAF,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,SACbF,EAAAxK,EAAAyK,cAAA,KAAGwX,KAAK,2DAA2DtR,OAAO,SAASuR,IAAI,uBACrF1X,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,cAAciQ,IAAKwH,KAAYtH,IAAI,SAASb,YAAa,SAAA/P,GAAE,OAAIA,EAAGmY,cAAczH,IAAM0H,MAAiBtI,aAAc,SAAA9P,GAAE,OAAIA,EAAGmY,cAAczH,IAAMwH,SAEnK3X,EAAAxK,EAAAyK,cAAA,KAAGwX,KAAK,6CAA6CtR,OAAO,SAASuR,IAAI,uBACvE1X,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,WAAWiQ,IAAK2H,KAASzH,IAAI,SAASb,YAAa,SAAA/P,GAAE,OAAIA,EAAGmY,cAAczH,IAAM4H,MAAcxI,aAAc,SAAA9P,GAAE,OAAIA,EAAGmY,cAAczH,IAAM2H,WAI9J9X,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,WACbF,EAAAxK,EAAAyK,cAAC+X,GAAD,MACE/Y,EAAMvC,mBAAqBsD,EAAAxK,EAAAyK,cAACgY,GAAD,MAC3BhZ,EAAMzB,mBACNwC,EAAAxK,EAAAyK,cAAA,WACED,EAAAxK,EAAAyK,cAAA,yBACAD,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,oBA/BvBF,EAAAxK,EAAAyK,cAACiY,GAAD,CACEljB,KAAMiK,EAAMpJ,QAAQoJ,EAAM7F,aAC1BgT,OAAQ,CAAE/C,IAAK,GAAIgI,MAAO,GAAItC,OAAQ,GAAI3F,KAAM,IAChDtE,OAAQ,MA8BE7F,EAAMzB,mBAAqBwC,EAAAxK,EAAAyK,cAACkY,GAAD,QAIjClZ,EAAMhD,kBA9BZ+D,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,WACbF,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,mBACfF,EAAAxK,EAAAyK,cAAA,OAAKC,UAAU,wBCrBDkY,QACW,cAA7Bvb,OAAOwb,SAASC,UAEe,UAA7Bzb,OAAOwb,SAASC,UAEhBzb,OAAOwb,SAASC,SAASC,MACvB,2DCRN,IAKMC,GAAQC,YACZza,EACAnB,OAAO6b,8BAAgC7b,OAAO6b,6BAA6B,CACzEC,gBARoB,SAACra,GAAD,MACN,0BAAhBA,EAAOnC,MAAoCmC,EAAOtJ,KAAlDe,OAAA0I,EAAA,EAAA1I,CAAA,GACOuI,EADP,CACetJ,KAAM,kBAAoBsJ,GAOvCsa,eAAgB,SAACza,GAAD,OAAWA,EAAMnJ,KAANe,OAAA0I,EAAA,EAAA1I,CAAA,GAAkBoI,EAAlB,CAAyBnJ,KAAM,kBAAoBmJ,MAIlF0a,IAASC,OACP9Y,EAAAxK,EAAAyK,cAAC8Y,EAAA,EAAD,CAAUP,MAAOA,IACfxY,EAAAxK,EAAAyK,cAAC+Y,GAAD,OAEF9K,SAASiD,eAAe,SDsGpB,kBAAmB8H,WACrBA,UAAUC,cAAcC,MAAMvD,KAAK,SAAAwD,GACjCA,EAAaC","file":"static/js/main.e373aa5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.7338f8ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo.eb8752b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.d668b059.svg\";","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.4437b604.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","module.exports = __webpack_public_path__ + \"static/media/github-logo-hover.b2035e53.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo-hover.eebd97c5.svg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport {onShiftClick, showSpinner} from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nlet x1, x2, y1, y2;\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n    // this.brush = d3.brush()\n    //   .extent([[0, 0], [600, 600]])\n    //   .on('start', this.brushStart)\n    //   .on('end', this.brushEnd);\n    // d3.select(this.refs.brush).call(this.brush);\n  }\n\n  // brushStart = () => {\n  //   const s = d3.event.selection,\n  //     x0 = s[0][0],\n  //     y0 = s[0][1],\n  //     dx = s[1][0] - x0,\n  //     dy = s[1][1] - y0,\n  //     max = 0;\n  //\n  //   if (dx && dy) {\n  //    console.log(dx, dy);\n  //   }\n  // };\n  //\n  // brushEnd = () => {\n  //   if (!d3.event.selection) {\n  //     return;\n  //   }\n  //   const [x1, x2] = d3.event.selection;\n  //\n  //   console.log(x1, x2);\n  // };\n\n  selectAll = ev => {\n    if (ev.key === 'A' && ev.shiftKey) {\n      this.props.onShiftClick('all');\n    }\n  };\n\n  recalc = () => {\n    const div = this.refs.div;\n    const x3 = Math.min(x1, x2);\n    const x4 = Math.max(x1, x2);\n    const y3 = Math.min(y1, y2);\n    const y4 = Math.max(y1, y2);\n    div.style.left = x3 + 'px';\n    div.style.top = y3 + 'px';\n    div.style.width = x4 - x3 + 'px';\n    div.style.height = y4 - y3 + 'px';\n  };\n\n  onMouseDown = ev => {\n    const div = this.refs.div;\n    div.hidden = 0;\n    x1 = ev.clientX;\n    y1 = ev.clientY;\n    this.recalc();\n  };\n\n  onMouseMove = ev => {\n    x2 = ev.clientX;\n    y2 = ev.clientY;\n    this.recalc();\n  };\n\n  onMouseUp = () => {\n    const div = this.refs.div;\n    div.hidden = 1;\n  };\n\n  //  onMouseDown={ev => this.onMouseDown(ev)} onMouseMove={ev => this.onMouseMove(ev)} onMouseUp={this.onMouseUp}\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card tabIndex={0} onKeyDown={ev => this.selectAll(ev)}>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n            <div id='div' ref='div' hidden />\n          </div>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val)),\n  onShiftClick: val => dispatch(onShiftClick(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import moment from 'moment';\n\nconst parseTime = (timeStamp, offset) => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  const value = offset || (timeStamp.split(';')[1]).split(';')[0];\n  return moment.utc(`${timeString}`, 'HH:mm:ss').utcOffset(value).format('HH:mm:ss');\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  newData.unshift({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]], item[data.columns[1]]) }));\n  newData.unshift({ date: parseDate(data.columns[0]), time: parseTime(data.columns[0], data.columns[1]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekInsights = (week, dayInsights, allDays) => {\n  const weekInsights = Object.keys(dayInsights)\n    .filter(key => {\n      return moment(key).isoWeekday(1).format('w') === week.toString()\n    })\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekInsights).reduce((acc, key) => {\n    acc.push(weekInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfWeek = Object.keys(allDays)\n    .filter(key => moment(key).isoWeek() === week)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfWeek).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedWeek: week,\n    daysOfWeek: mergedDays,\n    weekInsights: mergedData.flat()\n  };\n};\n\nexport const getDatasetOverview = (allDays, data, dayInsights) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .reduce((obj, key) => {\n      const weekday = moment(key, 'YYYY-MM-DD').format('ddd');\n      obj[weekday] = obj[weekday] || [];\n      obj[weekday].push(dayInsights[key]);\n      return obj;\n    }, {});\n  return Object.keys(weekdayInsights)\n    .reduce((obj, key) => {\n      obj[key] = weekdayInsights[key].flat().length;\n      return obj;\n    }, {});\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const getShiftSelectionInsights = (shiftSelection, data, dayInsights, allDays) => {\n  const shiftInsights = Object.keys(dayInsights)\n    .filter(key => shiftSelection.indexOf(moment(key).format('MMMM')) > -1 ||\n      shiftSelection.indexOf(moment(key).isoWeek()) > -1 ||\n      shiftSelection.indexOf(moment(key).format('ddd')) > -1 ||\n      shiftSelection.indexOf(key) > -1 ||\n      shiftSelection.indexOf('all') > -1)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n\n  const mergedData = Object.keys(shiftInsights).reduce((acc, key) => {\n    acc.push(shiftInsights[key]);\n    return acc;\n  }, []);\n\n  const allSelectedDays = Object.keys(allDays)\n    .filter(key => shiftSelection.indexOf(moment(key).format('MMMM')) > -1 ||\n      shiftSelection.indexOf(moment(key).isoWeek()) > -1 ||\n      shiftSelection.indexOf(moment(key).format('ddd')) > -1 ||\n      shiftSelection.indexOf(key) > -1 ||\n      shiftSelection.indexOf('all') > -1)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n\n  const mergedDays = Object.values(allSelectedDays).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  let selectedDaysObj = {};\n  for (let i = 0; i < 24; i++) {\n    selectedDaysObj[i] = mergedDays[i] ? Number(mergedDays[i] / shiftSelection.length).toFixed(2) : 0\n  }\n\n  return {\n    shiftSelection,\n    selectedDays: mergedDays,\n    selectedDaysInsights: mergedData.flat(),\n    selectedDaysObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return parseInt(m.startOf('hour').format('HH'));\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 0; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: 7}, (x, i) => moment(selectedDay).startOf('isoWeek').add(i, 'days').format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => days.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let weekObj = {};\n\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: moment(selectedDay).daysInMonth()}, (x, i) => moment(selectedDay).startOf('isoMonth').add(i, 'days').format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => days.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n  return monthObj;\n};\n\n\nconst contains = (item, arr) => {\n  let i = arr.length;\n  while (i--) {\n    if (arr[i] === item) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getCurrentWeek = (selectedDay, data) => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = (selectedDay, data) => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = (selectedDay, data) => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    contains(moment(dayItem1).format('YYYY-MM-DD'), Object.keys(data)) && daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  const array = [...new Set(daysArr.concat(daysArr1))];\n\n  return {\n    daysArr: array,\n    length: array.length\n  }\n};\n\nexport const getExactTimes = (selectedHour, arr) => {\n  const exactTimes = arr.filter(i => moment(i, 'HH:mm:ss').format('HH') === moment(selectedHour.data, 'H').format('HH'));\n  return countOccurrences(exactTimes.map(i => moment(i, 'HH:mm:ss').format('HH:mm')));\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_WEEK_INSIGHTS = 'SET_WEEK_INSIGHTS';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\nconst ON_SHIFT_CLICK = 'ON_SHIFT_CLICK';\nconst REMOVE_ITEM = 'REMOVE_ITEM';\nconst RESET_SHIFT_SELECTION = 'RESET_SHIFT_SELECTION';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  weekInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedWeek: null,\n  selectedMonth: null,\n  shiftSelection: [],\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  daysOfWeek: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    case SET_WEEK_INSIGHTS:\n      return {\n        ...state,\n        weekInsights: action.val.weekInsights,\n        daysOfWeek: action.val.daysOfWeek,\n        selectedWeek: action.val.selectedWeek\n      };\n    case ON_SHIFT_CLICK:\n      return {\n        ...state,\n        shiftSelection: [...new Set(state.shiftSelection.concat(action.val))]\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        shiftSelection: state.shiftSelection.filter(item => item !== action.val)\n      };\n    case RESET_SHIFT_SELECTION:\n      return {\n        ...state,\n        shiftSelection: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekInsights = val => ({ type: SET_WEEK_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\nexport const onShiftClick = val => ({ type: ON_SHIFT_CLICK, val });\nexport const resetShiftSelection = val => ({ type: RESET_SHIFT_SELECTION, val });\nexport const removeItem = val => ({ type: REMOVE_ITEM, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\nconst RESET_COLORS = 'RESET_COLORS';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      const data = action.val && action.val.data;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay, data),\n        currentMonth: getCurrentMonth(selectedDay, data),\n        currentWeekdays: getCurrentWeekdays(selectedDay, data)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: [...new Set(state.colors.concat({\n            day: action.val.day,\n            value: action.val.value\n        }))]\n      });\n    case RESET_COLORS:\n      return {\n      ...state,\n        colors: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\nexport const resetColors = val => ({ type: RESET_COLORS, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { getExactTimes } from '../helpers/parser';\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst OPEN_MODAL = 'OPEN_MODAL';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false,\n  modalData: null,\n  timeArray: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalData: action.val && action.val.data,\n        timeArray: action.val ? getExactTimes(action.val.data, action.val.arr) : []\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const openModal = val => ({ type: OPEN_MODAL, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport {setWeekdayInsights, setMonthInsights, onShiftClick, resetShiftSelection, removeItem} from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nclass DayLabels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  onWeekdayClick = (ev, day) => {\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      });\n      this.state.toggle ? this.props.onShiftClick(day) : this.props.removeItem(day);\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      const weekdayInsights = getWeekdayInsights(day, this.props.dayInsights, this.props.allDays);\n      this.props.setWeekdayInsights({\n        selectedWeekday: weekdayInsights.selectedWeekday,\n        daysOfWeekday: weekdayInsights.daysOfWeekday,\n        weekdayInsights: weekdayInsights.weekdayInsights\n      });\n      this.props.showBarChart(true);\n      this.setState({\n        toggle: false\n      });\n    }\n  };\n\n  render() {\n    const weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n      return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n    });\n\n    return (\n      <div className='day-labels-container'>\n        {\n          weekArray.map(day =>\n            <text\n              key={day}\n              className={classNames('day-labels', {'bold': this.props.selectedWeekday === day || this.props.shiftSelection.indexOf(day) > -1})}\n              onClick={ev => this.onWeekdayClick(ev, day)}\n            >\n              {day}\n            </text>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\nconst getDaysArrayByMonth = (month, year, data) => {\n  let daysInMonth = moment(month, 'M').daysInMonth();\n  const arrDays = [];\n\n  while(daysInMonth) {\n    const current = moment(month, 'M').date(daysInMonth).format(`${year}-MM-DD`);\n    Object.keys(data).find(key => key === current) && arrDays.push(current);\n    daysInMonth--;\n  }\n  return arrDays;\n};\n\nexport const getAverageColor = props => {\n  let rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  let filteredColors = [];\n  const insertMissingColors = daysArray => {\n    daysArray.forEach(day => {\n      if (!filteredColors.find(color => moment(color.day, 'DD-MM-YYYY').format('YYYY-MM-DD') === day)) {\n        const value = d3.color(getColors(props.data).oranges(props.data[day]));\n        filteredColors.push({\n          day,\n          value\n        });\n      }\n    })\n  };\n  if (props.selectedWeek) {\n    filteredColors = props.colors.filter(color => moment(color.day).isoWeek() === props.selectedWeek && color);\n    const daysArray = Object.keys(props.allDays).filter(key => moment(key).isoWeek() === props.selectedWeek);\n    insertMissingColors(daysArray);\n  }\n\n  if (props.selectedMonth) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('M') === props.selectedMonth && color);\n    const daysArray = getDaysArrayByMonth(props.selectedMonth, moment(props.minDate).format('YYYY'), props.data);\n    insertMissingColors(daysArray);\n  }\n\n  if (props.selectedWeekday) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('ddd') === props.selectedWeekday && color);\n    const daysArray = Object.keys(props.allDays).filter(key => moment(key).isoWeekday() === moment(props.selectedWeekday, 'ddd').isoWeekday());\n    insertMissingColors(daysArray);\n  }\n\n  filteredColors.forEach(color => {\n    rgb.r += color.value.r;\n    rgb.g += color.value.g;\n    rgb.b += color.value.b;\n  });\n\n  return d3.rgb(rgb.r / filteredColors.length, rgb.g / filteredColors.length, rgb.b / filteredColors.length);\n};\n\nconst contains = (arr, showOverview, item) => {\n  if (arr && showOverview) {\n    let i = arr.length;\n    while (i--) {\n      if (arr[i] === item) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\nexport const getAdjacentDayColor = (props, day) => {\n  const item = Object.keys(props.data).find(key => moment(key, 'YYYY-MM-DD').format('DD-MM-YYYY') === day);\n  if (item) {\n    return d3.color(getColors(props.data).oranges(props.data[item]));\n  }\n  return '#efefef';\n};\n\nexport const getColors = data => {\n  const min = d3.min(Object.values(data));\n  const max = d3.max(Object.values(data));\n  return {\n    purples: purplePalette(min, max),\n    oranges: orangePalette(min, max)\n  }\n};\n\nconst purplePalette = (min, max) => {\n  const d = (max-min)/20;\n  return d3.scaleThreshold()\n    .range(['#dadaeb','#d1d0e6','#c9c7e1','#c0bedc','#b7b5d7','#afacd2','#a6a3ce','#9e9ac9','#9591c4','#8c89c0','#8380bc','#7d76b7','#786db2','#7464ad','#6f5aa8','#6950a3','#64469e','#5f3d99','#5a3294','#54278f'])\n    .domain([min+d,min+2*d,min+3*d,min+4*d,min+5*d,min+6*d,min+7*d,min+8*d,min+9*d,min+10*d,min+11*d,min+12*d,min+13*d,min+14*d,min+15*d,min+16*d,min+17*d,min+18*d,min+19*d,min+20*d]);\n};\n\nconst orangePalette = (min, max) => {\n  const d = (max-min)/10;\n  return d3.scaleThreshold()\n    .range(['#fdd0a2','#febb81','#fea763','#fd9243','#f67e30','#ea6c23','#dc5c18','#cb4d0e','#b94107','#a63603'])\n    .domain([min+d,min+2*d,min+3*d,min+4*d,min+5*d,min+6*d,min+7*d,min+8*d,min+9*d,min+10*d]);\n};\n\nexport const getDayColor = (props, isCurrentDay) => {\n  const item = Object.keys(props.data).find(key => new Date(key).setHours(0,0,0,0) === props.day.setHours(0,0,0,0));\n\n  if (item) {\n    const day = moment(props.day).format('DD-MM-YYYY');\n\n    const isCurrentWeek = contains(props.currentWeek, props.showWeekOverview, day) ||\n      (props.selectedWeek && props.selectedWeek === moment(props.day).isoWeek()) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).isoWeek()) > -1);\n    const isCurrentMonth = contains(props.currentMonth, props.showMonthOverview, day) ||\n      (props.selectedMonth && props.selectedMonth === moment(props.day).format('M')) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).format('MMMM')) > -1);\n    const isCurrentWeekday = contains(props.currentWeekdays.daysArr, props.showWeekdayOverview, day) ||\n      (props.selectedWeekday && props.selectedWeekday === moment(props.day).format('ddd')) ||\n      (!!props.shiftSelection.length && props.shiftSelection.indexOf(moment(props.day).format('ddd')) > -1);\n    const isSelected = !!props.shiftSelection.length &&\n      (props.shiftSelection.indexOf(moment(props.day).format('YYYY-MM-DD')) > -1 ||\n        props.shiftSelection.indexOf('all') > -1);\n\n    const colors = getColors(props.data);\n    const interpolateColor = (isCurrentDay || isSelected || isCurrentWeek || isCurrentMonth || isCurrentWeekday) ? colors.oranges(props.data[item]) : colors.purples(props.data[item]);\n\n    return {\n      count: props.data[item],\n      fillColor: interpolateColor\n    }\n  }\n\n  return {\n    fillColor: '#efefef',\n    count: 0\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {\n  onShiftClick, removeItem,\n  resetShiftSelection,\n  setMonthInsights,\n  setWeekdayInsights,\n  setWeekInsights\n} from '../../reducers/app';\nimport {getAdjacentDayColor, getDayColor, getColors} from '../../helpers/colors';\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.selectedWeek !== nextProps.selectedWeek ||\n      this.isEqual(nextProps) ||\n      this.props.fill !== nextProps.fill ||\n      this.props.shiftSelection !== nextProps.shiftSelection ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  isEqual = nextProps => {\n    const isCurrentWeek = (nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentMonth = (nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentWeekday = (nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    return isCurrentWeek || isCurrentMonth || isCurrentWeekday;\n  };\n\n  onDayClick = (ev, day, color) => {\n    console.log(this.refs.day.getBoundingClientRect())\n    ev.stopPropagation();\n    const formattedDay = moment(day).format('YYYY-MM-DD');\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      });\n      this.state.toggle ? this.props.onShiftClick(formattedDay) : this.props.removeItem(formattedDay);\n    } else {\n      this.props.setMonthInsights({\n        selectedMonth: null,\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setWeekInsights({\n        selectedWeek: null,\n        daysOfWeek: [],\n        weekInsights: []\n      });\n      this.props.resetShiftSelection();\n      const color = d3.color(getColors(this.props.data).oranges(this.props.data[formattedDay]));\n      this.props.selectDay({ day, color, data: this.props.data });\n      this.props.showBarChart(true);\n      const previousDay = moment(day).subtract(1, 'd').format('DD-MM-YYYY');\n      const nextDay = moment(day).add(1, 'd').format('DD-MM-YYYY');\n      const isColorSaved = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n      const isPreviousColorSaved = this.props.colors.find(color => color.day === previousDay);\n      const isNextColorSaved = this.props.colors.find(color => color.day === nextDay);\n      !isColorSaved && this.props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value: color });\n      !isPreviousColorSaved && this.props.saveColor({ day: previousDay, value: getAdjacentDayColor(this.props, previousDay) });\n      !isNextColorSaved && this.props.saveColor({ day: nextDay, value: getAdjacentDayColor(this.props, nextDay) });\n    }\n  };\n\n  render() {\n    const props = this.props;\n    const { cellMargin, cellSize } = this.props;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const color = getDayColor(props, isCurrentDay);\n\n    const isSelected = !!props.shiftSelection.length &&\n      (moment(d).format('M') === props.selectedMonth ||\n        moment(d).isoWeek() === props.selectedWeek ||\n        moment(d).format('ddd') === props.selectedWeekday ||\n        moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY'));\n\n    const showStroke = isCurrentDay || (isSelected && props.data[moment(d).format('YYYY-MM-DD')]);\n\n    return (\n      <rect\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${color.count}`}\n        data-for='svgTooltip'\n        ref='day'\n        key={d}\n        className='day fade-in'\n        stroke={showStroke ? '#000' : ''}\n        strokeWidth={showStroke ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={color.fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin + 20}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={ev => this.onDayClick(ev, d, color)}\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeek: state.app.selectedWeek,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport './Card.scss';\n\nconst Card = props =>\n  <div className='card' id='card' onKeyDown={props.onKeyDown} tabIndex={props.tabIndex}>\n    {props.children}\n  </div>;\n\nexport default Card;\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights, getWeekInsights } from '../../helpers/parser';\nimport { setWeekInsights, setMonthInsights, setWeekdayInsights, onShiftClick, resetShiftSelection, removeItem } from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\nimport ReactTooltip from \"react-tooltip\";\nimport Card from \"../widget/Card\";\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1,\n      toggle: false\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n    this.brush = d3.brush()\n      .on('end', this.brushEnd);\n    d3.select(this.refs.brush).call(this.brush);\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  brushEnd = () => {\n    if (!d3.event.selection) {\n      return;\n    }\n    const [x1, x2] = d3.event.selection;\n\n    console.log(x1, x2);\n  };\n\n  showMoreData = () => {\n    let { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth() + 1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count + 2 }));\n    }\n  };\n\n  getWeeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  renderMonthOverview = (ev, month) => {\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      });\n      this.state.toggle ? this.props.onShiftClick(month) : this.props.removeItem(month);\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setWeekInsights({\n        selectedWeek: null,\n        daysOfWeek: [],\n        weekInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), this.props.dayInsights, this.props.allDays);\n      this.props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      this.props.showBarChart(true);\n    }\n  };\n\n  renderWeekOverview = (ev, week) => {\n    if (ev.shiftKey) {\n      this.setState({\n        toggle: !this.state.toggle\n      });\n      this.state.toggle ? this.props.onShiftClick(week) : this.props.removeItem(week);\n    } else {\n      this.props.selectDay(null);\n      this.props.resetShiftSelection();\n      this.props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      this.props.setMonthInsights({\n        selectedMonth: null,\n        daysOfMonth: [],\n        monthInsights: []\n      });\n      const weekInsights = getWeekInsights(week, this.props.dayInsights, this.props.allDays);\n      this.props.setWeekInsights({\n        selectedWeek: weekInsights.selectedWeek,\n        daysOfWeek: weekInsights.daysOfWeek,\n        weekInsights: weekInsights.weekInsights\n      });\n      this.props.showBarChart(true);\n    }\n  };\n\n  renderDays = (renderList, isCurrentMonth) =>\n    renderList.map(d =>\n      <Day fill={isCurrentMonth || moment(d).format('ddd') === this.props.selectedWeekday}\n           day={d} month={this.props.month}\n           key={d}\n           className='day'\n      />\n      );\n\n  getWeekIndices = month => {\n    const firstDayOfMonth = moment(month).startOf('month');\n    const lastDayOfMonth = moment(month).endOf('month');\n    let weekIndices = [];\n\n    let currentDay = moment(firstDayOfMonth);\n    weekIndices.push(currentDay.isoWeek());\n\n    while(currentDay.month() === firstDayOfMonth.month()) {\n      currentDay.add(1, 'weeks');\n      weekIndices.push(currentDay.isoWeek());\n    }\n\n    if (currentDay.isoWeek() !== lastDayOfMonth.isoWeek()) {\n      weekIndices.pop();\n    }\n\n    return weekIndices;\n  };\n\n  renderWeekLabels = (cellSize, cellMargin, month) => {\n    const arr = this.getWeekIndices(month);\n    const nrOfWeeks = arr.length;\n    let offsets = [0.1, 0.3, 0.5, 0.7, 0.9, 1.1].slice(0, nrOfWeeks);\n    return arr.map((week, i) =>\n      <text\n        className={classNames('week slow-fade-in', {'bold': this.props.selectedWeek === week || this.props.shiftSelection.indexOf(week) > -1})}\n        key={week}\n        y={cellSize}\n        x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month)))) * offsets[i]}\n        textAnchor='middle'\n        onClick={ev => this.renderWeekOverview(ev, week)}\n      >\n        { week }\n      </text>\n    )\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 50)}\n        width={(cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          {\n          endReached &&\n            <text\n              className={classNames('month-name', 'slow-fade-in', {'bold': isCurrentMonth || this.props.shiftSelection.indexOf(monthName(month)) > -1})}\n              y={(cellSize * 7) + (cellMargin * 8) + 35}\n              x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 1))) / 2}\n              textAnchor='middle'\n              onClick={ev => this.renderMonthOverview(ev, monthName(month))}\n            >\n              { monthName(month) }\n            </text>\n          }\n          { endReached && this.renderWeekLabels(cellSize, cellMargin, month) }\n          { this.renderDays(renderList, isCurrentMonth) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  onShiftClick: val => dispatch(onShiftClick(val)),\n  resetShiftSelection: val => dispatch(resetShiftSelection(val)),\n  removeItem: val => dispatch(removeItem(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    const monthsArr = this.getChunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper' ref='brush'>\n        {\n          monthsArr.map((months, i) =>\n            <g className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </g>\n          )\n        }\n        <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\n\nimport './Section.scss';\n\nconst Section = props =>\n  <section className={`section ${props.className || ''}`}>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {saveColor, selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights, setWeekInsights} from '../../reducers/app';\nimport {getMonthInsights, getWeekdayInsights, getWeekInsights} from '../../helpers/parser';\nimport * as d3 from 'd3';\nimport {getAdjacentDayColor} from \"../../helpers/colors\";\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeek !== this.props.selectedWeek ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  pickDay = day => {\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.setWeekInsights({\n      weekInsights: [],\n      daysOfWeek: [],\n      selectedWeek: null\n    });\n    const color = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n    let value = color && d3.color(color.value);\n    if (!value) {\n      value = getAdjacentDayColor(this.props, moment(day).format('DD-MM-YYYY'), moment(day).startOf('month'));\n      this.props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value });\n    }\n    this.props.selectDay({ day, color: value, data: this.props.data });\n    this.props.showBarChart(true);\n  };\n\n  pickWeek = week => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    const weekInsights = getWeekInsights(week, this.props.dayInsights, this.props.allDays);\n    this.props.setWeekInsights({\n      selectedWeek: weekInsights.selectedWeek,\n      daysOfWeek: weekInsights.daysOfWeek,\n      weekInsights: weekInsights.weekInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  pickMonth = month => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.setWeekInsights({\n      weekInsights: [],\n      daysOfWeek: [],\n      selectedWeek: null\n    });\n    const monthInsights = getMonthInsights(month.toString(), this.props.dayInsights, this.props.allDays);\n    this.props.setMonthInsights({\n      selectedMonth: monthInsights.selectedMonth,\n      daysOfMonth: monthInsights.daysOfMonth,\n      monthInsights: monthInsights.monthInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  pickWeekday = weekday => {\n    this.props.selectDay(null);\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    const weekdayInsights = getWeekdayInsights(weekday, this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.data);\n    this.props.setWeekdayInsights({\n      weekdayInsights: weekdayInsights.weekdayInsights,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      selectedWeekday: weekdayInsights.selectedWeekday\n    });\n    this.props.showBarChart(true);\n  };\n\n  getUnit = () => {\n    if (this.props.selectedMonth) {\n      return 'months';\n    } else if (this.props.selectedWeekday || this.props.selectedWeek) {\n      return 'weeks';\n    } else {\n      return 'days';\n    }\n  };\n\n  getString = selectedItem => {\n    if (this.props.selectedMonth) {\n      return moment(this.props.selectedMonth, 'M').format('MMMM');\n    } else if (this.props.selectedWeek) {\n      return `Week ${this.props.selectedWeek}`;\n    } else if (this.props.selectedWeekday) {\n      return `${moment(this.props.selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      return moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n  };\n\n  select = (selectedItem, val, unit) => {\n    if (this.props.selectedDay) {\n      this.pickDay(moment(selectedItem).add(val, unit));\n    } else if (this.props.selectedWeek) {\n      this.pickWeek(parseInt(this.props.selectedWeek) + val);\n    } else if (this.props.selectedMonth) {\n      this.pickMonth(parseInt(selectedItem) + val);\n    } else if (this.props.selectedWeekday) {\n      const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n      this.pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + val)).format('ddd'));\n    }\n  };\n\n  showArrows = (selectedItem, unit, minDate, maxDate) => {\n    if (selectedItem) {\n      const previousItem = moment(selectedItem).subtract(1, unit);\n      const nextItem = moment(selectedItem).add(1, unit);\n      const prev = previousItem.format(`${moment(minDate).year()}-MM-DD`);\n      const min = minDate.startOf('year').format('YYYY-MM-DD');\n      const next = nextItem.format(`${moment(maxDate).year()}-MM-DD`);\n      const max = maxDate.startOf('year').format('YYYY-MM-DD');\n      return {\n        previous: moment(prev).isSameOrAfter(moment(min)),\n        next: moment(next).isSameOrBefore(moment(max))\n      }\n    }\n  };\n\n  render() {\n    const { minDate, maxDate, selectedMonth, selectedDay, selectedWeekday, selectedWeek } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay || selectedWeek;\n    const unit = this.getUnit();\n\n    const showArrows = this.showArrows(selectedItem, unit, minDate, maxDate);\n    const showPreviousArrow = showArrows && showArrows.previous;\n    const showNextArrow = showArrows && showArrows.next;\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}\n           onKeyDown={ev =>\n             (ev.key === 'ArrowLeft' && this.select(selectedItem, -1, unit)) ||\n             (ev.key === 'ArrowRight' && this.select(selectedItem, 1, unit))\n           }>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => showPreviousArrow && this.select(selectedItem, -1, unit)}\n        />\n        { this.getString(selectedItem) }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showNextArrow && this.select(selectedItem, 1, unit)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeek: state.app.selectedWeek,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale)\n      .ticks(24)\n      .tickFormat(d3.timeFormat('%H'));\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n    d3.select(this.refs.xAxis)\n     .append('text')\n      .attr('y', 35)\n      .attr('x', this.props.width - 70)\n      .style('text-anchor', 'middle')\n      .style('fill', '#000')\n      .style('font-size', 12)\n      .text('Hour of the day');\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale)\n      .ticks(this.props.nrOfTicks)\n      .tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n    d3.select(this.refs.yAxis)\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 10 - this.props.margin.left)\n      .attr('x', -36)\n      .attr('dy', '1em')\n      .style('fill', '#000')\n      .style('font-size', 12)\n      .style('text-anchor', 'middle')\n      .text('Observations');\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { openModal } from '../../reducers/barChart';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  openModal = d => {\n    this.props.openModal({ data: d, arr: this.props.dayInsights[this.props.selectedDay] });\n  };\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n\n    current.interrupt();\n\n    const color = this.props.color;\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('id', (d, i) => `bar-${i}`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => this.openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `${d.occurrences} occurrences<br>between ${moment(d.data, 'hh').format('H:mm')} - ${moment(parseInt(d.data)+1, 'hh').format('H:mm')}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bars);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport {openModal} from \"../../reducers/barChart\";\n\nclass AreaChart extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { xScaleArea, yScale, plotHeight, color, plotData, openModal, dayInsights, selectedDay } = this.props;\n\n    const getPosition = i => {\n      const lines = document.getElementsByClassName('line');\n      let pos;\n\n      let beginning = 0,\n        end = lines && lines[i].getTotalLength(),\n        target = null;\n\n      while (end){\n        target = Math.floor((beginning + end) / 2);\n        pos = lines[i].getPointAtLength(target);\n        if ((target === end || target === beginning) && pos.x !== mouseX) {\n          break;\n        }\n        if (pos.x > mouseX)      end = target;\n        else if (pos.x < mouseX) beginning = target;\n        else break; //position found\n      }\n\n      return pos;\n    };\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const formatTime = d3.timeFormat('%H');\n    const parseTime = d3.timeParse('%H');\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        const pos = getPosition(i);\n        const x = xScaleArea.invert(pos.x);\n\n        d3.selectAll('.bar')\n          .attr('fill', d =>  formatTime(parseTime(d.data)) === formatTime(x) ? d3.rgb(color).darker() : color);\n\n        d3.select('.line-rectangle')\n          .style('opacity', 0.9);\n        d3.select('.line-text')\n          .style('fill', '#7888BF')\n          .style('font-weight', 'bold')\n          .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n\n    const hide = () => {\n      d3.select('.line-rectangle')\n        .style('opacity', 0);\n      d3.select('.bar-rectangle')\n        .style('opacity', 0);\n      d3.select('.bar-text')\n        .style('opacity', 0);\n      d3.select('.bar-circle')\n        .style('opacity', 0);\n    };\n\n    d3.selectAll('.mouse-per-bar')\n      .attr('transform', function(d, i) {\n\n        const bars = plotData.map(i => moment(i.data, 'H').format('HH'));\n\n        const x = xScaleArea.invert(getPosition(i).x);\n\n        if (bars.indexOf(formatTime(x)) > -1) {\n          const item = plotData.find(i => moment(i.data, 'H').format('HH') === formatTime(x));\n          d3.select('.mouse-over-effects')\n            .style('cursor', 'pointer')\n            .on('click', () => {\n              hide();\n              openModal({ data: item, arr: dayInsights[moment(selectedDay).format('YYYY-MM-DD')] });\n            });\n\n          d3.select('.bar-rectangle')\n            .style('opacity', 0.9);\n          d3.select('.bar-text')\n            .style('opacity', 1)\n            .style('fill', d3.rgb(color).darker())\n            .style('font-weight', 'bold')\n            .text(item.occurrences);\n          d3.select('.bar-circle')\n            .style('opacity', 1);\n          return `translate(${mouseX},${item.y - 3.8})`\n        }\n        d3.select('.mouse-over-effects')\n          .style('cursor', 'auto')\n          .on('click', null);\n        hide();\n      });\n  };\n\n  setLineOpacity = val => {\n    d3.select('.mouse-line')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-circle')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-text')\n      .style('opacity', val);\n  };\n\n  render() {\n    const { xScaleArea, plotWidth, plotHeight, margin, yScale, insights } = this.props;\n\n    const parseTime = d3.timeParse('%H:%M');\n\n    const area = d3.area()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(insights[d]))\n      .curve(d3.curveMonotoneX);\n\n    const line = d3.line()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y(d => yScale(insights[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(insights))}\n        />\n        <path className='line shadow'\n              d={line(Object.keys(insights))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#777'\n            strokeWidth={1}\n            strokeDasharray='3,3'\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              className='line-circle'\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <rect\n              className='line-rectangle'\n              x={10}\n              y={-14}\n              opacity={0}\n            >\n            </rect>\n            <text\n              className='line-text'\n              fontSize={14}\n              transform='translate(16,3)'\n            />\n          </g>\n          <g className='mouse-per-bar'>\n            <circle\n              className='bar-circle'\n              r={5}\n              fill={d3.rgb(this.props.color).darker()}\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <rect\n              className='bar-rectangle'\n              x={-50}\n              y={-14}\n              opacity={0}\n            >\n            </rect>\n            <text\n              className='bar-text'\n              transform='translate(-35,3)'\n              fontSize={14}\n              opacity={0}\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            transform='translate(0,0)'\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => this.setLineOpacity('0')}\n            onMouseOver={() => this.setLineOpacity('1')}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './Modal.scss';\n\nimport { openModal } from \"../../reducers/barChart\";\nimport moment from 'moment';\nimport clock from \"../../icons/clock.svg\";\n\nclass Modal extends React.PureComponent {\n\n  hideModal = () => {\n    this.props.openModal(null);\n  };\n\n  convertRange = (val, r1, r2 )=> (val - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\n  render() {\n    const { selectedDay, modalData, timeArray } = this.props;\n      return (\n      <div className={classNames('modal', 'fade-in', {'display-block': modalData}, {'display-none': !modalData})} onClick={this.hideModal}>\n        <section className='modal-main' onClick={ev => ev.stopPropagation()}>\n          <i className='fas fa-times' onClick={this.hideModal} />\n          <div className='modal-title'>{selectedDay}</div>\n          {modalData && <div>between {moment(modalData.data, 'hh').format('H:mm')} - {moment(parseInt(modalData.data)+1, 'hh').format('H:mm')}</div>}\n          <div className='clock-icon'>\n            <img src={clock} alt='' width={50} height={50} />\n          </div>\n          <div className='time-container'>\n            {\n              Object.keys(timeArray).map(key =>\n                  <span className='time' style={{ fontSize: this.convertRange(timeArray[key], [1,20], [15,50]) }}>\n              {key}\n            </span>\n              )\n            }\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  modalData: state.barChart.modalData,\n  selectedDay: moment(state.calendar.selectedDay).format('dddd, MMMM DD YYYY'),\n  timeArray: state.barChart.timeArray\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.onReset();\n  };\n  const renderCheckboxes = () =>\n    <div className='checkboxes'>\n       <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n         Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n         Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n         Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n       </span>\n    </div>;\n\n  return (\n    <div className='footer year-label'>\n      { props.showFooter ? renderCheckboxes() : <div className='checkboxes'/> }\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights, getShiftSelectionInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport Modal from '../widget/Modal';\nimport { showBarChart, showMonthOverview, showWeekdayOverview, showWeekOverview } from '../../reducers/barChart';\nimport {saveColor} from '../../reducers/calendar';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\nimport {getAverageColor} from \"../../helpers/colors\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: (document.getElementById('card').clientWidth - props.margin.left - props.margin.right) * 0.66\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    this.setState({\n      width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n    });\n  };\n\n  getData = () => {\n    if (!!this.props.weekInsights.length) {\n      return this.props.daysOfWeek;\n    }\n    if (!!this.props.monthInsights.length) {\n      return this.props.daysOfMonth;\n    }\n    if (!!this.props.weekdayInsights.length) {\n      return this.props.daysOfWeekday;\n    }\n    return this.props.plotData;\n  };\n\n  getInsights = () => {\n    if (this.props.isWeekOverviewChecked) {\n      return getCurrentWeekInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isMonthOverviewChecked) {\n      return getCurrentMonthInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      return getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.data).weekdayObj;\n    }\n    if (!!this.props.shiftSelection.length) {\n      return getShiftSelectionInsights(this.props.shiftSelection, this.props.data, this.props.dayInsights, this.props.allDays).selectedDaysObj\n    }\n  };\n\n  showAreaChart = () => this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked || !!this.props.shiftSelection.length;\n\n  updateScale = data => {\n    const xScale = d3.scaleTime();\n    const xScaleArea = d3.scaleTime();\n    const yScale = d3.scaleLinear().nice();\n\n    const insights = this.getInsights();\n\n    const max = insights ?\n      Math.ceil(Math.max(d3.max(Object.values(insights).map(i => parseInt(i))), d3.max(Object.values(data).map(i => parseInt(i))))) :\n      d3.max(Object.values(data));\n\n    const yDomain = [0, this.showAreaChart() ? max + max / 12 : max];\n\n    const parseTime = d3.timeParse('%H:%M');\n    const midnight = parseTime('00:00');\n\n    xScale\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    xScaleArea\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([this.props.height - this.props.margin.top - this.props.margin.bottom, 0]);\n\n    return {xScale, yScale, xScaleArea};\n  };\n\n  updatePlotSize = () => {\n    const plotWidth = this.state.width - (this.props.margin.left + this.props.margin.right);\n    const plotHeight = this.props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    const data = this.getData();\n\n    const { xScale, yScale, xScaleArea } =  this.updateScale(data);\n    const { plotWidth, plotHeight } = this.updatePlotSize();\n\n    const max = d3.max(Object.values(data));\n    const nrOfTicks = max < 10 ? max : (max > 20 ? max / 4 : max / 2);\n\n    const parseTime = d3.timeParse('%H');\n\n    const metaData = {\n      xScale,\n      yScale,\n      xScaleArea,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n    const color = this.props.color || getAverageColor(this.props);\n\n    const showFooter = !(this.props.selectedMonth || this.props.selectedWeekday || this.props.selectedWeek);\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight - 50})`} margin={this.props.margin} width={this.state.width} height={this.props.plotHeight}/>\n            <YAxis {...metaData} margin={this.props.margin} height={plotHeight} />\n            <Bars {...metaData} {...plotData} color={color}/>\n            {this.showAreaChart() &&\n            <AreaChart {...metaData} {...plotData} margin={this.props.margin} insights={this.getInsights()} color={color}/>}\n          </g>\n        </svg>\n        <Footer showFooter={showFooter} />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n        <Modal />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfWeek: state.app.daysOfWeek,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedWeek: state.app.selectedWeek,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  shiftSelection: state.app.shiftSelection,\n  selectedDays: state.app.selectedDays,\n  data: state.app.data,\n  allDays: state.app.allDays,\n  minDate: state.app.minDate,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[props.selectedDay] ||\n    !!props.weekInsights.length ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    plotData: props.data,\n    margin: props.margin,\n    height: props.height\n  };\n\n  return (\n    <Section className='section-two-thirds'>\n      <Card tabIndex={0}>\n        <DayLabel selectedDay={props.selectedDay} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  weekInsights: state.app.weekInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport './RadialChart.scss';\n\nclass RadialChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true\n    }\n  }\n\n  componentDidMount() {\n    this.renderArcs();\n  }\n\n  componentDidUpdate() {\n    this.renderArcs();\n  }\n\n  normalize = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n  };\n\n  getPercentage = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (80 - 5) * ((val - min) / (max - min)) + 5;\n  };\n\n  toggleFadeCss = blocks => {\n    blocks\n      .style('opacity', undefined)\n      .classed({ out: this.state.visible });\n    this.setState({\n      visible: !this.state.visible\n    })\n  };\n\n  renderArcs = () => {\n    const svg = d3.select(this.refs.radialChart);\n\n    const width = 350;\n    const arcSize = (5 * width / 100);\n    const innerRadius = arcSize * 2;\n\n    const keysArray = Object.keys(this.props.data)\n      .sort((a, b) => moment(a, 'ddd').isoWeekday() - moment(b, 'ddd').isoWeekday());\n\n    const data = keysArray.map(key => {\n      return {\n        defaultValue: this.props.data[key],\n        value: this.getPercentage(this.props.data[key]),\n        label: key,\n        color: d3.interpolateBlues(this.normalize(this.props.data[key]))\n      }\n    });\n\n    const arcs = data.map((obj, i) => {\n      return d3.arc().innerRadius(i * arcSize + innerRadius).outerRadius((i + 1) * arcSize - (width / 100) + innerRadius);\n    });\n\n    const arcsGrey = data.map(function (obj, i) {\n      return d3.arc().innerRadius(i * arcSize + (innerRadius + ((arcSize / 2) - 2))).outerRadius((i + 1) * arcSize - ((arcSize / 2)) + (innerRadius));\n    });\n\n    const pieData = data.map(function (obj, i) {\n      return [\n        {value: obj.value * 0.75, arc: arcs[i], object: obj},\n        {value: (100 - obj.value) * 0.75, arc: arcsGrey[i], object: obj},\n        {value: 100 * 0.25, arc: arcs[i], object: obj}];\n    });\n\n    const pie = d3.pie()\n      .sort(null)\n      .value(d => d.value);\n\n    const g = svg.selectAll('g').data(pieData)\n      .enter()\n      .append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    const gText = svg.selectAll('g.textClass').data([{}]).enter()\n      .append('g')\n      .classed('textClass', true)\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    g.selectAll('path').data(function (d) {\n      return pie(d);\n    })\n      .enter()\n      .append('path')\n      .attr('id', function (d, i) {\n        if (i === 0) {\n          return 'Arc' + d.data.object.label;\n        }\n        if (i === 1) {\n          return 'Text' + d.data.object.label;\n        }\n      })\n      .style('cursor', 'pointer')\n      .on('mouseover', function (d, i) {\n        if (i === 0) {\n          const id = d3.select(this).attr('id');\n          d3.selectAll('path')\n            .transition()\n            .filter(function () {\n              return d3.select(this).attr('id') !== id;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n\n          d3.selectAll('.textClass text')\n            .transition()\n            .filter(function () {\n              return d3.select(this).text() !== d.data.object.label;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n        }\n      })\n      .on('mouseleave', (d, i) => {\n        d3.selectAll('path').attr('opacity', 1);\n        d3.selectAll('.textClass text').attr('opacity', 1);\n      })\n      .attr('fill', (d, i) => i === 0 ? d.data.object.color : i === 1 ? '#F1F1F1' : 'none')\n      .transition()\n      .duration(1000)\n        .attrTween('d', function (d) {\n          const i = d3.interpolate(d.startAngle+0.1, d.endAngle);\n          return function(t) {\n            d.endAngle = i(t);\n            return d.data.arc(d);\n          }\n      });\n\n    svg.selectAll('g').each(function (d, index) {\n      const el = d3.select(this);\n      el.selectAll('path').each(function (r, i) {\n        if (i === 1) {\n          const labelObj = r.data.object;\n          g.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', '#777')\n            .attr('dominant-baseline', 'central')\n            .append('textPath')\n            .attr('textLength', function (d, i) {\n              return 0;\n            })\n            .attr('xlink:href', '#Text' + labelObj.label)\n            .attr('startOffset', '5')\n            .attr('dy', '-3em')\n            .transition()\n            .delay(1000)\n              .text(labelObj.defaultValue);\n        }\n        if (i === 0) {\n          const centroidText = r.data.arc.centroid({\n            startAngle: r.startAngle,\n            endAngle: r.startAngle\n          });\n          const labelObj = r.data.object;\n          gText.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', () => labelObj.color)\n            .attr('font-weight', '600')\n            .transition()\n            .delay(1000)\n              .text(labelObj.label)\n            .attr('transform', 'translate(' + (centroidText[0] - ((1.5 * width) / 100)) + ',' + (centroidText[1] + ') rotate(' + (180) + ')'))\n            .attr('dominant-baseline', 'central');\n        }\n      })\n    });\n  };\n\n  render() {\n    return (\n      <svg className='radial-chart' ref='radialChart' width='100%' height={350} />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(RadialChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../bar-chart/BarChart.scss';\nimport RadialChart from \"./RadialChart\";\nimport { getDatasetOverview} from \"../../helpers/parser\";\n\nconst RadialChartContainer = props => {\n  const getInsights = () => getDatasetOverview(props.allDays, props.data, props.dayInsights);\n\n  return (\n    <Section className='section-one-third'>\n      <Card>\n        <div className='year-label dayTitle dataset-overview-title'>Week average</div>\n        <div className='barChart'>\n          <RadialChart data={getInsights()} />\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  data: state.app.data,\n  allDays: state.app.allDays\n});\n\nexport default connect(mapStateToProps)(RadialChartContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekInsights, setWeekdayInsights, uploadFile } from '../../reducers/app';\nimport { showCalendar, selectDay, resetColors } from '../../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../../reducers/barChart';\n\nimport Section from './Section';\n\nimport dataset1 from '../../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../../data/itch_tbc.csv';\nimport dataset3 from '../../data/ptsd_filtered.csv';\nimport dataset4 from '../../data/data.csv';\n\nconst Upload = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.setWeekInsights({\n      selectedWeek: null,\n      daysOfWeek: [],\n      weekInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n    props.resetColors();\n  };\n\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n\n  return (\n    <Section title='Select dataset' className='upload-section'>\n      <div className='upload-dataset'>\n        <Dropdown\n          className='dropdown'\n          options={options}\n          placeholder='Choose...'\n          value={props.datasetName}\n          onChange={onSelect}\n        />\n        <Dropzone\n          accept='text/csv'\n          onDrop={onDrop}\n        >\n          {({getRootProps, getInputProps, isDragActive}) => {\n            return (\n              <div\n                {...getRootProps()}\n                className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n              >\n                <input {...getInputProps()} />\n                {\n                  !!files.length\n                    ? <span className='file-name'>\n                          <i className='fa fa-remove' />\n                      {files}\n                        </span>\n                    : <span className='upload-message'>\n                          <i className='fa fa-upload' />\n                            Drag & Drop\n                        </span>\n                }\n              </div>\n            )\n          }}\n        </Dropzone>\n      </div>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files,\n  datasetName: state.app.datasetName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekInsights: val => dispatch(setWeekInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  resetColors: val => dispatch(resetColors(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport RadialChartContainer from './radial-chart/RadialChartContainer';\nimport Upload from './widget/Upload';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport githubLogo from '../icons/github-logo.svg';\nimport githubLogoHover from '../icons/github-logo-hover.svg';\nimport pdfLogo from '../icons/pdf-logo.svg';\nimport pdfLogoHover from '../icons/pdf-logo-hover.svg';\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      data={props.allDays[props.selectedDay]}\n      margin={{ top: 10, right: 30, bottom: 40, left: 50 }}\n      height={300}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n        <div className='icons'>\n          <a href='https://github.com/diana-tofan/Time-Series-Visualization' target='_blank' rel='noopener noreferrer'>\n            <img className='github-icon' src={githubLogo} alt='Github' onMouseOver={ev => ev.currentTarget.src = githubLogoHover} onMouseLeave={ev => ev.currentTarget.src = githubLogo} />\n          </a>\n          <a href='https://www.overleaf.com/read/vptjwvyzjnvg' target='_blank' rel='noopener noreferrer'>\n            <img className='pdf-icon' src={pdfLogo} alt='Report' onMouseOver={ev => ev.currentTarget.src = pdfLogoHover} onMouseLeave={ev => ev.currentTarget.src = pdfLogo} />\n          </a>\n        </div>\n      </header>\n      <div className='content'>\n        <Upload />\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible &&\n          <div>\n            <p>Day overview</p>\n            <div className='charts-container'>\n              { renderBarChart() }\n              { props.isBarChartVisible && <RadialChartContainer /> }\n            </div>\n          </div>\n        }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}