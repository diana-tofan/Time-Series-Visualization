{"version":3,"sources":["data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd.csv","data/data.csv","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/calendar/Heatmap.js","components/bar-chart/BarChart.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","reduce","r","a","push","parseData","x","replace","timestamp","obj","initialState","minDate","maxDate","dayInsights","datasetName","files","showTooltip","isSpinnerVisible","isEmptyContainerVisible","showSpinner","val","type","showEmptyContainer","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","isRadialChartVisible","selectedDay","isBarChartVisible","showBarChart","rootReducer","combineReducers","app","state","arguments","length","undefined","action","moments","Object","keys","d","objectSpread","min","max","calendar","radialChart","barChart","weekArray","Array","apply","_","i","startOf","isoWeekday","DayLabels","react_default","createElement","className","day","key","connect","dispatch","changeYear","props","previousYear","subtract","nextYear","add","showPreviousArrow","showNextArrow","classNames","disabled","onClick","selectDay","isCurrentDay","getDay","week","d3","month","count","Date","getFullYear","getMonth","find","setHours","filter","j","value","Math","toConsumableArray","fillColor","width","height","rx","ry","fill","y","formattedDay","data-tip","data-for","weeksInMonth","m","floor","offset","monthName","days","lastDay","endOf","firstDay","extraSpace","textAnchor","calendar_Day","target","size","months","range","parseInt","monthsArr","memo","index","hidden","calendar_Month","Heatmap","this","id","ref","calendar_DayLabels","calendar_YearLabel","calendar_Year","react_tooltip_dist_default","multiline","class","React","Component","BarChart","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderAxis","roundedHours","hour","minute","second","millisecond","occurrences","acc","values","nrOfTicks","xScale","padding","domain","xAxis","yScale","yAxis","ticks","tickFormat","refs","hoverIndex","circleHoverIndex","_this2","margin","setState","clientWidth","clientHeight","ReactTooltip","rebuild","_this3","transform","startDate","endDate","isBefore","toDate","clone","formattedDays","weekInsights","includes","weekOccurrences","weekObj","Number","toFixed","area","y0","y1","curve","valueline","svgHeight","fontSize","bandwidth","onMouseOver","onMouseLeave","is","x1","x2","y2","spreadMethod","stopColor","stopOpacity","cx","cy","data-key","data-value","uploadFile","showCalendar","setData","setDatasetName","file","name","bytes","log","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","dist_default","options","placeholder","onChange","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","components_bar_chart_BarChart","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0796f0a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.9f78b97e.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd.553964c1.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","import moment from 'moment';\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport default parseData;\n","import parseData, { getDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SHOW_EMPTY_CONTAINER = 'SHOW_EMPTY_CONTAINER';\n\nconst initialState = {\n  data: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  datasetName: '',\n  files: [],\n  showTooltip: false,\n  isSpinnerVisible: false,\n  isEmptyContainerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SHOW_EMPTY_CONTAINER:\n      return {\n        ...state,\n        isEmptyContainerVisible: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const showEmptyContainer = val => ({ type: SHOW_EMPTY_CONTAINER, val });\n","const SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","const SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isBarChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport moment from 'moment';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = () =>\n  <div className='dayLabelsContainer'>\n    <span>\n      {\n        weekArray.map(day =>\n          <text\n            key={day}\n            className='dayLabels'\n          >\n            {day}\n          </text>\n        )\n      }\n    </span>\n  </div>;\n\nexport default DayLabels;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='yearLabel'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport { showEmptyContainer } from '../../reducers/app';\nimport { selectDay, showBarChart } from '../../reducers/barChart';\n\nconst Day = props => {\n  const cellMargin = props.cellMargin,\n    cellSize = props.cellSize;\n  const d = props.day;\n\n  let isCurrentDay = false;\n  if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n    isCurrentDay = true;\n  }\n\n  const day = d => (d.getDay() + 6) % 7,\n    week = d3.timeFormat('%W');\n\n  const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n  const month = props.month;\n\n  const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n  let filters = days.map(d =>\n    Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n  );\n  const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n  const item = Object.keys(props.data).find(key =>\n    new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n  const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n  const fillColor = !!props.data[item] ? d3.interpolatePurples(value) : '#ececec';\n\n  const onDayClick = () => {\n    props.selectDay(d);\n    const formattedDay = moment(d).format('YYYY-MM-DD');\n    if (!!props.dayInsights[formattedDay]) {\n      props.showEmptyContainer(false);\n      props.showBarChart(true);\n    } else {\n      props.showBarChart(false);\n      props.showEmptyContainer(true);\n    }\n  };\n  return (\n    <rect\n      key={d}\n      className='day'\n      width={cellSize}\n      height={cellSize}\n      rx={50}\n      ry={50}\n      fill={isCurrentDay ? '#CCFF19' : fillColor}\n      y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n      x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n      onClick={onDayClick}\n      data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n      data-for='svgTooltip'\n    >\n    </rect>\n  )\n};\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.barChart.selectedDay,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showEmptyContainer: val => dispatch(showEmptyContainer(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\n\nconst Month = props => {\n  const month = props.month;\n\n  const weeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  const cellMargin = props.cellMargin,\n    cellSize = props.cellSize;\n\n  const monthName = d3.timeFormat('%B');\n\n  const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n  const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n  const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n  let extraSpace = 0;\n  if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n    extraSpace += 10;\n  }\n\n  return (\n    <svg\n      className='month'\n      height={((cellSize * 7) + (cellMargin * 8) + 20)}\n      width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n      key={month}\n    >\n      <g>\n        <text\n          className='month-name'\n          y={(cellSize * 7) + (cellMargin * 8) + 15}\n          x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n          textAnchor='middle'\n        >\n          { monthName(month) }\n        </text>\n        { days.map(d => <Day day={d} month={month} key={d} />) }\n      </g>\n    </svg>\n  )\n};\n\nconst mapStateToProps = state => ({\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nexport default connect(mapStateToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nconst Year = props => {\n  const minDate = props.minDate.format('YYYY-MM-DD'); // new Date(2016, 0, 1);\n  const maxDate = props.maxDate.format('YYYY-MM-DD'); // new Date(2020, 11, 31);\n\n  const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n    new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n  const chunk = (target, size) => {\n    return target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]])\n  };\n  const monthsArr = chunk(months, months.length / 12);\n\n  return (\n    <div>\n      {\n        monthsArr.map((months, i) =>\n          <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n            {\n              months.map(month =>\n                <Month\n                  key={month}\n                  month={month}\n                />\n              )\n            }\n          </div>\n        )\n      }\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\n\nclass Heatmap extends React.Component {\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <div id='calendar' ref='calendar'>\n          <DayLabels />\n          <YearLabel />\n          <div className='months'>\n            <Year />\n          </div>\n          <ReactTooltip id='svgTooltip' multiline class='tooltipx'/>\n        </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport ReactTooltip from 'react-tooltip';\n\nimport './BarChart.scss';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1,\n      circleHoverIndex: -1\n    }\n  }\n  renderAxis = () => {\n    const dayInsights = this.props.dayInsights[this.props.selectedDay];\n    const roundedHours = dayInsights && dayInsights.map(hour => {\n        const m = moment(`${this.props.selectedDay} ${hour}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    const max = d3.max(Object.values(occurrences));\n    const nrOfTicks = max < 10 ? max : max / 2;\n    let obj = {};\n    for (let i = 1; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    const xScale = d3.scaleBand().padding(0.1)\n      .domain(Object.keys(obj))\n      .range([0, this.state.width]);\n    const xAxis = d3.axisBottom(xScale);\n    const yScale = d3.scaleLinear()\n      .domain([0, max])\n      .range([this.state.height, 0]);\n    const yAxis = d3.axisLeft(yScale).ticks(nrOfTicks).tickFormat(d3.format('d'));\n    d3.select(this.refs.xAxis)\n      .call(xAxis);\n    d3.select(this.refs.yAxis)\n      .call(yAxis);\n  };\n\n  componentDidMount() {\n    const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n    this.setState({\n      width: this.refs.barChart.clientWidth - margin.left - margin.right,\n      height: this.refs.barChart.clientHeight - margin.top - margin.bottom\n    }, () => {\n      this.renderAxis();\n    });\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n    ReactTooltip.rebuild();\n  }\n\n  render() {\n    const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n\n    const dayInsights = this.props.dayInsights[this.props.selectedDay];\n    const roundedHours = dayInsights && dayInsights.map(hour => {\n        const m = moment(`${this.props.selectedDay} ${hour}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 1; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    const transform = `translate(${margin.left},${margin.top})`;\n\n\n    const svgHeight = 300;\n\n    const startDate = moment(this.props.selectedDay).isoWeekday(1);\n    const endDate = moment(this.props.selectedDay).isoWeekday(8);\n    let days = [];\n    let day = startDate;\n    while (day.isBefore(endDate)) {\n      days.push(day.toDate());\n      day = day.clone().add(1, 'd');\n    }\n    const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n\n    const weekArray = Object.keys(this.props.data).filter(key => formattedDays.includes(key));\n    let weekInsights = weekArray.reduce((acc, item) => {\n      acc.push({ day: item, occurrences: this.props.dayInsights[item] });\n      return acc;\n    }, []);\n    weekInsights = weekInsights.map(week =>\n      week.occurrences.map(item => {\n        const m = moment(`${week.day} ${item}`);\n        return m.minute() || m.second() || m.millisecond()\n          ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n          : parseInt(m.startOf('hour').format('HH'))\n      })\n    );\n\n    const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n\n    let weekObj = {};\n    for (let i = 1; i <= 24; i++) {\n      weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i]/7).toFixed(2) : 0\n    }\n\n    const max = d3.max(Object.values(occurrences));\n\n    const xScale = d3.scaleBand().padding(0.1)\n      .domain(Object.keys(obj))\n      .range([0, this.state.width]);\n    const yScale = d3.scaleLinear()\n      .domain([0, max])\n      .range([this.state.height, 0]);\n\n    // define the area\n    const area = d3.area()\n      .x(function(d) { return xScale(d)+25; })\n      .y0(svgHeight - margin.top - margin.bottom)\n      .y1(function(d) { return yScale(weekObj[d]) || 0; })\n      .curve(d3.curveCardinal);\n\n    const valueline = d3.line()\n      .x(function(d) { return xScale(d)+25; })\n      .y(function(d) { return yScale(weekObj[d]); })\n      .curve(d3.curveCardinal);\n\n    return (\n      <div className='container'>\n        <div className='dayLabel'>\n          { moment(this.props.selectedDay).format('dddd, MMMM DD YYYY') }\n        </div>\n        <div className='barChart'>\n          <svg width='100%' height={svgHeight} ref='barChart'>\n            <g transform={transform}>\n              <g className='axis axis-x' transform={`translate(0,${svgHeight - 50})`} ref='xAxis' fill='none' fontSize={10} textAnchor='middle' />\n              <g className='axis axis-y' ref='yAxis' />\n              {\n                Object.keys(occurrences).map((item, i) =>\n                    <rect\n                      className='bar'\n                      x={xScale(item) || 0}\n                      y={yScale(occurrences[item]) || 0}\n                      width={xScale.bandwidth() || 0}\n                      height={(this.state.height - yScale(occurrences[item])) || 0}\n                      fill={`${i === this.state.hoverIndex ? \"#5455D6\" : \"#6595ec\"}`}\n                      onMouseOver={() => this.setState({ hoverIndex: i })}\n                      onMouseLeave={() => this.setState({ hoverIndex: -1 })}\n                      data-tip={`Time - ${item}:00 <br> Occurrences - ${occurrences[item]}`}\n                      data-for='rectTooltip'\n                    />\n                  )}\n              <defs>\n                <linearGradient id=\"grad\" is x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\" spreadMethod=\"pad\">\n                  <stop offset=\"10%\" stopColor=\"#fff\" stopOpacity={.4}/>\n                  <stop offset=\"80%\" stopColor=\"#7888BF\" stopOpacity={.8}/>\n                </linearGradient>\n              </defs>\n              <path className=\"area\"\n                    fill=\"url(#grad)\"\n                    d={area(Object.keys(weekObj)) || 0}\n              />\n              <path className=\"line shadow\"\n                    d={valueline(Object.keys(weekObj)) || 0}\n              />\n              {\n                Object.keys(weekObj).map((item, i) =>\n                  !!weekObj[item] &&\n                  <circle className='dot'\n                          key={i}\n                          r={5}\n                          cx={xScale(item)+25 || 0}\n                          cy={yScale(weekObj[item]) || 0}\n                          data-key={item}\n                          data-value={weekObj[item]}\n                          data-tip={`${startDate.format('MMM DD')}-${endDate.format('MMM DD')} (Week ${startDate.week()})<br>Average observations at ${item}:00 --> ${weekObj[item]}`}\n                          fill={`${i === this.state.circleHoverIndex ? \"#7888BF\" : \"#fff\"}`}\n                          onMouseOver={() => this.setState({ circleHoverIndex: i })}\n                          onMouseLeave={() => this.setState({ circleHoverIndex: -1 })}\n                          data-for='rectTooltip'\n                  />\n                )\n              }\n                )\n              }\n            </g>\n          </svg>\n          <ReactTooltip id='rectTooltip' multiline class='tooltipx'/>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD'),\n  data: state.app.data\n});\n\nexport default connect(mapStateToProps)(BarChart);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, uploadFile, setDatasetName, showSpinner, showEmptyContainer } from '../reducers/app';\nimport { showCalendar } from '../reducers/calendar';\nimport { showBarChart } from '../reducers/barChart';\n\nimport Heatmap from './calendar/Heatmap';\nimport BarChart from './bar-chart/BarChart';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd.csv';\nimport dataset4 from '../data/data.csv';\n\nconst App = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showEmptyContainer(false);\n    props.showCalendar(false);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = false;\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        {\n          showDropzone &&\n          <section>\n          <p>Upload file</p>\n          <Dropzone\n            accept='text/csv'\n            onDrop={onDrop}\n          >\n            {({getRootProps, getInputProps, isDragActive}) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n                >\n                  <input {...getInputProps()} />\n                  {\n                    !!files.length\n                      ? <span className='file-name'>\n                          <i className=\"fa fa-remove\" />\n                        {files}\n                        </span>\n                      : <span className='upload-message'>\n                          <i className=\"fa fa-upload\" />\n                            Drag & Drop your file or <u>Browse</u>\n                        </span>\n                  }\n                </div>\n              )\n            }}\n          </Dropzone>\n        </section>\n        }\n        <section>\n          <p>Select dataset</p>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </section>\n        {\n          props.isCalendarVisible &&\n          <section>\n            <p>Calendar heatmap</p>\n            <Heatmap\n              data={props.data}\n              dayInsights={props.dayInsights}\n            />\n          </section>\n        }\n        {\n          props.isBarChartVisible &&\n          <section>\n            <p>Day overview</p>\n            <BarChart\n              key={props.data}\n            />\n          </section>\n        }\n        {\n          props.isEmptyContainerVisible &&\n          <section>\n            <p>Day overview</p>\n            <div className='container'>\n              <div className='dayLabel'>\n                { moment(props.selectedDay).format('dddd, MMMM DD YYYY') }\n              </div>\n              <div className='emptyString'>No data recorded</div>\n            </div>\n          </section>\n        }\n        {\n          props.isSpinnerVisible &&\n          <div className='spinner'>\n            <div className=\"double-bounce1\" />\n            <div className=\"double-bounce2\" />\n          </div>\n        }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.barChart.selectedDay).format('YYYY-MM-DD'),\n  files: state.app.files,\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showEmptyContainer: val => dispatch(showEmptyContainer(val)),\n  showSpinner: val => dispatch(showSpinner(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}