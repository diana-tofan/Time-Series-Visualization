{"version":3,"sources":["icons/github-logo.svg","icons/pdf-logo.svg","icons/clock.svg","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv","icons/github-logo-hover.svg","icons/pdf-logo-hover.svg","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","helpers/colors.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/widget/Modal.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","components/bar-chart/Container.js","components/radial-chart/RadialChart.js","components/radial-chart/RadialChartContainer.js","components/widget/Upload.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","countOccurrences","arr","reduce","obj","item","getDayInsights","data","newData","map","date","columns","time","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekInsights","week","weekInsights","add","console","log","allDaysOfWeek","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","isoWeekday","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","parseDayInsights","days","roundedHours","hour","m","parseInt","startOf","occurrences","getCurrentWeekInsights","selectedDay","Array","from","x","includes","weekOccurrences","apply","weekObj","getCurrentMonthInsights","daysInMonth","monthOccurrences","monthObj","contains","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","clone","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","array","toConsumableArray","Set","getExactTimes","selectedHour","exactTimes","parseData","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","showSpinner","type","setMonthInsights","setWeekdayInsights","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","selectDay","saveColor","isRadialChartVisible","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","modalData","timeArray","showBarChart","openModal","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","value","radialChart","barChart","weekArray","_","connect","dispatch","props","react_default","createElement","className","classNames","bold","onClick","onWeekdayClick","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","getAverageColor","rgb","g","b","filteredColors","insertMissingColors","daysArray","forEach","find","d3","getValue","year","arrDays","_loop","current","getDaysArrayByMonth","count","Math","showOverview","getAdjacentDayColor","monthVal","Day","isEqual","nextProps","isCurrentWeek","_this","isCurrentMonth","isCurrentWeekday","onDayClick","ev","preventDefault","stopPropagation","previousDay","nextDay","isColorSaved","isPreviousColorSaved","isNextColorSaved","nextState","formatDate","this","fill","_this2","_this$props","isCurrentDay","getDay","Date","setHours","interpolateColor","fillColor","getDayColor","ref","stroke","strokeWidth","width","height","rx","ry","y","getFullYear","getMonth","data-tip","data-for","React","Component","Month","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","getWeeksInMonth","floor","offset","getChunk","target","size","memo","index","renderMonthOverview","renderWeekOverview","renderDays","renderList","calendar_Day","renderWeekLabels","nrOfWeeks","renderArr","offsets","textAnchor","weekLabel","monthName","lastDay","firstDay","extraSpace","endReached","PureComponent","Year","getNrOfWeeks","ceil","months","range","monthsArr","v","k","hidden","calendar_Month","Card","id","children","Section","title","Heatmap","addEventListener","onScreenResize","components_widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","dist_default","multiline","class","DayLabel","pickDay","pickMonth","toString","pickWeekday","getUnit","getString","selectedItem","select","unit","previousItem","nextItem","isAfter","isBefore","tabIndex","onKeyDown","XAxis","renderAxis","xAxis","xScale","ticks","tickFormat","refs","transition","transform","fontSize","YAxis","yAxis","yScale","nrOfTicks","Bars","renderBars","bars","datum","plotData","selectAll","interrupt","attr","hoverIndex","darker","enter","append","classed","plotHeight","on","exit","remove","merge","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","xScaleArea","getPosition","pos","lines","document","getElementsByClassName","beginning","getPointAtLength","text","invert","formatTime","hide","style","indexOf","setLineOpacity","plotWidth","_this$props2","margin","area","y0","top","bottom","y1","curve","x1","x2","y2","spreadMethod","stopColor","stopOpacity","strokeDasharray","opacity","pointerEvents","onMouseLeave","onMouseOver","onMouseMove","nativeEvent","offsetX","offsetY","Modal","hideModal","convertRange","r1","r2","display-block","display-none","src","clock","alt","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","left","right","getData","getInsights","showAreaChart","updateScale","nice","insights","yDomain","midnight","domain","updatePlotSize","_this3","removeEventListener","ReactTooltip","rebuild","_this4","_this$updateScale","_this$updatePlotSize","metaData","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","components_widget_Modal","barChartProps","bar_chart_DayLabel","bar_chart_BarChart","RadialChart","normalize","getPercentage","toggleFadeCss","blocks","out","visible","renderArcs","svg","sort","defaultValue","label","arcs","innerRadius","arcSize","outerRadius","arcsGrey","pieData","arc","object","pie","gText","j","attrTween","startAngle","endAngle","t","each","labelObj","centroidText","centroid","components_radial_chart_RadialChart","getDatasetOverview","uploadFile","setData","setDatasetName","showCalendar","resetColors","file","name","bytes","round","pow","bytesToSize","renderHeatmap","dataset","then","catch","err","react_dropdown_dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","href","rel","githubLogo","currentTarget","githubLogoHover","pdfLogo","pdfLogoHover","widget_Upload","calendar_Heatmap","bar_chart_Container","radial_chart_RadialChartContainer","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a024c73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.7338f8ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo.eb8752b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.d668b059.svg\";","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","module.exports = __webpack_public_path__ + \"static/media/github-logo-hover.b2035e53.svg\";","module.exports = __webpack_public_path__ + \"static/media/pdf-logo-hover.eebd97c5.svg\";","import moment from 'moment';\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx').utc()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekInsights = (week, dayInsights, allDays) => {\n  const weekInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).add(1, 'w').format('w') === week);\n  console.log(weekInsights)\n  const mergedData = Object.keys(weekInsights).reduce((acc, key) => {\n    acc.push(weekInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfWeek = Object.keys(allDays)\n    .filter(key => moment(key).format('w') === week)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfWeek).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n  console.log(mergedDays, mergedData)\n  // return {\n  //   selectedMonth: month,\n  //   daysOfMonth: mergedDays,\n  //   monthInsights: mergedData.flat()\n  // };\n};\n\nexport const getDatasetOverview = (allDays, data, dayInsights) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .reduce((obj, key) => {\n      const weekday = moment(key, 'YYYY-MM-DD').format('ddd');\n      obj[weekday] = obj[weekday] || [];\n      obj[weekday].push(dayInsights[key]);\n      return obj;\n    }, {});\n  return Object.keys(weekdayInsights)\n    .reduce((obj, key) => {\n      obj[key] = weekdayInsights[key].flat().length;\n      return obj;\n    }, {});\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n      return null;\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return parseInt(m.startOf('hour').format('HH'));\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 0; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: 7}, (x, i) => moment(selectedDay).startOf('isoWeek').add(i, 'days').format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => days.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let weekObj = {};\n\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const days = Array.from({length: moment(selectedDay).daysInMonth()}, (x, i) => moment(selectedDay).startOf('isoMonth').add(i, 'days').format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => days.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return parseInt(m.startOf('hour').format('HH'));\n    })\n  );\n  const length = days.filter(item => data[item]).length;\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n  return monthObj;\n};\n\n\nconst contains = (item, arr) => {\n  let i = arr.length;\n  while (i--) {\n    if (arr[i] === item) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getCurrentWeek = (selectedDay, data) => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = (selectedDay, data) => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = (selectedDay, data) => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    contains(moment(dayItem).format('YYYY-MM-DD'), Object.keys(data)) && daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    contains(moment(dayItem1).format('YYYY-MM-DD'), Object.keys(data)) && daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  const array = [...new Set(daysArr.concat(daysArr1))];\n\n  return {\n    daysArr: array,\n    length: array.length\n  }\n};\n\nexport const getExactTimes = (selectedHour, arr) => {\n  const exactTimes = arr.filter(i => moment(i, 'HH:mm:ss').format('HH') === moment(selectedHour.data, 'H').format('HH'));\n  return countOccurrences(exactTimes.map(i => moment(i, 'HH:mm:ss').format('HH:mm')));\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedMonth: null,\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\nconst RESET_COLORS = 'RESET_COLORS';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      const data = action.val && action.val.data;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay, data),\n        currentMonth: getCurrentMonth(selectedDay, data),\n        currentWeekdays: getCurrentWeekdays(selectedDay, data)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: [...new Set(state.colors.concat({\n            day: action.val.day,\n            value: action.val.value\n        }))]\n      });\n    case RESET_COLORS:\n      return {\n      ...state,\n        colors: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\nexport const resetColors = val => ({ type: RESET_COLORS, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { getExactTimes } from '../helpers/parser';\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst OPEN_MODAL = 'OPEN_MODAL';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false,\n  modalData: null,\n  timeArray: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalData: action.val && action.val.data,\n        timeArray: action.val ? getExactTimes(action.val.data, action.val.arr) : []\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const openModal = val => ({ type: OPEN_MODAL, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { setWeekdayInsights, setMonthInsights } from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = props => {\n  const onWeekdayClick = day => {\n    props.selectDay(null);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    const weekdayInsights = getWeekdayInsights(day, props.dayInsights, props.allDays);\n    props.setWeekdayInsights({\n      selectedWeekday: weekdayInsights.selectedWeekday,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      weekdayInsights: weekdayInsights.weekdayInsights\n    });\n    props.showBarChart(true);\n  };\n\n  return (\n    <div className='day-labels-container'>\n    {\n      weekArray.map(day =>\n        <text\n          key={day}\n          className={classNames('day-labels', {'bold': props.selectedWeekday === day})}\n          onClick={() => onWeekdayClick(day)}\n        >\n          {day}\n        </text>\n      )\n    }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\nconst getDaysArrayByMonth = (month, year, data) => {\n  let daysInMonth = moment(month, 'M').daysInMonth();\n  const arrDays = [];\n\n  while(daysInMonth) {\n    const current = moment(month, 'M').date(daysInMonth).format(`${year}-MM-DD`);\n    Object.keys(data).find(key => key === current) && arrDays.push(current);\n    daysInMonth--;\n  }\n  return arrDays;\n};\n\nexport const getAverageColor = props => {\n  let rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  let filteredColors = [];\n  const insertMissingColors = daysArray => {\n    daysArray.forEach(day => {\n      if (!filteredColors.find(color => moment(color.day, 'DD-MM-YYYY').format('YYYY-MM-DD') === day)) {\n        const value = d3.color(d3.interpolateOranges(getValue(props.data, day, moment(day).startOf('month'))));\n        filteredColors.push({\n          day,\n          value\n        });\n        props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value });\n      }\n    })\n  };\n  if (props.selectedMonth) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('M') === props.selectedMonth && d3.rgb(color));\n    const daysArray = getDaysArrayByMonth(props.selectedMonth, moment(props.minDate).format('YYYY'), props.data);\n    insertMissingColors(daysArray);\n  }\n\n  if (props.selectedWeekday) {\n    filteredColors = props.colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('ddd') === props.selectedWeekday && d3.rgb(color));\n    const daysArray = Object.keys(props.allDays).filter(key => moment(key).isoWeekday() === moment(props.selectedWeekday, 'ddd').isoWeekday());\n    insertMissingColors(daysArray);\n  }\n\n  filteredColors.forEach(color => {\n    rgb.r += color.value.r;\n    rgb.g += color.value.g;\n    rgb.b += color.value.b;\n  });\n\n  return d3.rgb(rgb.r / filteredColors.length, rgb.g / filteredColors.length, rgb.b / filteredColors.length);\n};\n\nconst normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\nconst getValue = (data, item, month) => {\n  const daysArr = Array.from({length: moment(month).daysInMonth()}, (x, i) => moment(month).startOf('month').add(i, 'days').format('YYYY-MM-DD'));\n\n  const count = Object.keys(data).reduce((acc, item) => {\n    daysArr.includes(item) && acc.push(data[item]);\n    return acc;\n  }, []);\n\n  return !!data[item] && normalize(data[item], Math.max(...count), Math.min(...count));\n};\n\nconst contains = (arr, showOverview, item) => {\n  if (arr && showOverview) {\n    let i = arr.length;\n    while (i--) {\n      if (arr[i] === item) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\nexport const getAdjacentDayColor = (props, day, monthVal) => {\n  const item = Object.keys(props.data).find(key => moment(key, 'YYYY-MM-DD').format('DD-MM-YYYY') === day);\n  const month = monthVal ? monthVal : props.month;\n  if (item) {\n    const value = getValue(props.data, item, month);\n    return d3.color(d3.interpolateOranges(value));\n  }\n  return '#ececec';\n};\n\nexport const getDayColor = (props, isCurrentDay) => {\n  const item = Object.keys(props.data).find(key => new Date(key).setHours(0,0,0,0) === props.day.setHours(0,0,0,0));\n\n  if (item) {\n    const day = moment(props.day).format('DD-MM-YYYY');\n\n    const isCurrentWeek = contains(props.currentWeek, props.showWeekOverview, day);\n    const isCurrentMonth = contains(props.currentMonth, props.showMonthOverview, day) || (props.selectedMonth && props.selectedMonth === moment(props.day).format('M'));\n    const isCurrentWeekday = contains(props.currentWeekdays.daysArr, props.showWeekdayOverview, day) || (props.selectedWeekday && props.selectedWeekday === moment(props.day).format('ddd'));\n\n    const value = getValue(props.data, item, props.month);\n    const interpolateColor = (isCurrentDay || isCurrentWeek || isCurrentMonth || isCurrentWeekday) ? d3.interpolateOranges(value) : d3.interpolatePurples(value);\n\n    return {\n      value,\n      count: props.data[item],\n      fillColor: interpolateColor\n    }\n  }\n\n  return {\n    fillColor: '#ececec',\n    count: 0\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport {getAdjacentDayColor, getDayColor} from '../../helpers/colors';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.isEqual(nextProps) ||\n      this.props.fill !== nextProps.fill ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  isEqual = nextProps => {\n    const isCurrentWeek = (nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentMonth = (nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentWeekday = (nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    return isCurrentWeek || isCurrentMonth || isCurrentWeekday;\n  };\n\n  onDayClick = (ev, day, color) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.selectDay({ day, color: d3.interpolateOranges(color.value), data: this.props.data });\n    this.props.showBarChart(true);\n    const previousDay = moment(day).subtract(1, 'd').format('DD-MM-YYYY');\n    const nextDay = moment(day).add(1, 'd').format('DD-MM-YYYY');\n    const isColorSaved = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n    const isPreviousColorSaved = this.props.colors.find(color => color.day === previousDay);\n    const isNextColorSaved =this.props.colors.find(color => color.day === nextDay);\n    !isColorSaved && this.props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value: d3.color(d3.interpolateOranges(color.value)) });\n    !isPreviousColorSaved && this.props.saveColor({ day: previousDay, value: getAdjacentDayColor(this.props, previousDay) });\n    !isNextColorSaved && this.props.saveColor({ day: nextDay, value: getAdjacentDayColor(this.props, nextDay) });\n  };\n\n  render() {\n    const props = this.props;\n    const { cellMargin, cellSize } = this.props;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const color = getDayColor(props, isCurrentDay);\n\n    return (\n      <rect ref='day'\n        key={d}\n        className='day fade-in'\n        stroke={isCurrentDay ? '#000' : ''}\n        strokeWidth={isCurrentDay ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={color.fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin + 20}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={ev => this.onDayClick(ev, d, color)}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${color.count}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeekday: state.app.selectedWeekday,\n  selectedMonth: state.app.selectedMonth,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights, getWeekInsights } from '../../helpers/parser';\nimport {setMonthInsights, setWeekdayInsights} from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1,\n      weekLabel: 0\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    let { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth() + 1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count + 2 }));\n    }\n  };\n\n  getWeeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  renderMonthOverview = month => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    const monthInsights = getMonthInsights(moment().month(month).format('M'), this.props.dayInsights, this.props.allDays);\n    this.props.setMonthInsights({\n      selectedMonth: monthInsights.selectedMonth,\n      daysOfMonth: monthInsights.daysOfMonth,\n      monthInsights: monthInsights.monthInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  renderWeekOverview = week => {\n    console.log(week);\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    this.props.setMonthInsights({\n      selectedMonth: null,\n      daysOfMonth: [],\n      monthInsights: []\n    });\n    const weekInsights = getWeekInsights(week, this.props.dayInsights, this.props.allDays);\n    this.props.showBarChart(true);\n  };\n\n  renderDays = (renderList, isCurrentMonth) =>\n    renderList.map(d => <Day fill={isCurrentMonth || moment(d).format('ddd') === this.props.selectedWeekday} day={d} month={this.props.month} key={d} />);\n\n  renderWeekLabels = (cellSize, cellMargin, month) => {\n    const nrOfWeeks = this.props.renderArr.length;\n    let offsets = [0.1, 0.3, 0.5, 0.7, 0.9, 1.1].slice(0, nrOfWeeks);\n    return this.props.renderArr.map((week, i) =>\n      <text\n        className='week slow-fade-in'\n        key={week}\n        y={cellSize}\n        x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month)))) * offsets[i]}\n        textAnchor='middle'\n        onClick={() => this.renderWeekOverview(week)}\n      >\n        { week }\n      </text>\n    )\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 50)}\n        width={(cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          {\n          endReached &&\n            <text\n              className={classNames('month-name', 'slow-fade-in', {'bold': isCurrentMonth})}\n              y={(cellSize * 7) + (cellMargin * 8) + 35}\n              x={((cellSize * this.getWeeksInMonth(month)) + (cellMargin * (this.getWeeksInMonth(month) + 1))) / 2}\n              textAnchor='middle'\n              onClick={() => this.renderMonthOverview(monthName(month))}\n            >\n              { monthName(month) }\n            </text>\n          }\n          { endReached && this.renderWeekLabels(cellSize, cellMargin, month) }\n          { this.renderDays(renderList, isCurrentMonth) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  getChunk = (target, size) =>\n    target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]]);\n\n  getNrOfWeeks = month => {\n    const daysInMonth = moment(month, 'M').daysInMonth();\n    const nrOfWeeks = Math.ceil(daysInMonth / 7);\n    const firstDay = moment(month, 'M').startOf('month').format('ddd');\n    if (firstDay === 'Sat' || firstDay === 'Sun' || moment(month).format('MMM') === 'Feb') {\n      return nrOfWeeks + 1;\n    }\n    return nrOfWeeks;\n  };\n\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n\n    const monthsArr = this.getChunk(months, months.length / 12);\n\n    const arr = Array.from({length: 52}, (v, k) => k+1);\n\n    let count = 0;\n\n    return (\n      <div className='year-wrapper'>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) => {\n                  let nrOfWeeks = this.getNrOfWeeks(month);\n                    if (moment(month, 'M').endOf('month').format('ddd') === 'Sun' && moment(month, 'M').add(1, 'months').startOf('month').format('ddd') === 'Mon') {\n                      count -= 1;\n                    }\n                  const renderArr = arr.slice(count, nrOfWeeks + count);\n                  count += nrOfWeeks - 1;\n                  return (\n                    <Month\n                      key={i}\n                      month={month}\n                      renderArr={renderArr}\n                    />\n                  )\n                }\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\n\nimport './Section.scss';\n\nconst Section = props =>\n  <section className={`section ${props.className || ''}`}>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n          </div>\n          <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {saveColor, selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport {getMonthInsights, getWeekdayInsights} from '../../helpers/parser';\nimport * as d3 from 'd3';\nimport {getAdjacentDayColor} from \"../../helpers/colors\";\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  pickDay = day => {\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    const color = this.props.colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n    let value = color && d3.color(color.value);\n    if (!value) {\n      value = getAdjacentDayColor(this.props, moment(day).format('DD-MM-YYYY'), moment(day).startOf('month'));\n      this.props.saveColor({ day: moment(day).format('DD-MM-YYYY'), value });\n    }\n    this.props.selectDay({ day, color: value, data: this.props.data });\n    this.props.showBarChart(true);\n  };\n\n  pickMonth = month => {\n    this.props.selectDay(null);\n    this.props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    const monthInsights = getMonthInsights(month.toString(), this.props.dayInsights, this.props.allDays);\n    this.props.setMonthInsights({\n      selectedMonth: monthInsights.selectedMonth,\n      daysOfMonth: monthInsights.daysOfMonth,\n      monthInsights: monthInsights.monthInsights\n    });\n    this.props.showBarChart(true);\n  };\n\n  pickWeekday = weekday => {\n    this.props.selectDay(null);\n    this.props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: [],\n      selectedMonth: null\n    });\n    const weekdayInsights = getWeekdayInsights(weekday, this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.data);\n    this.props.setWeekdayInsights({\n      weekdayInsights: weekdayInsights.weekdayInsights,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      selectedWeekday: weekdayInsights.selectedWeekday\n    });\n    this.props.showBarChart(true);\n  };\n\n  getUnit = () => {\n    if (this.props.selectedMonth) {\n      return 'months';\n    } else if (this.props.selectedWeekday) {\n      return 'weeks';\n    } else {\n      return 'days';\n    }\n  };\n\n  getString = selectedItem => {\n    if (this.props.selectedMonth) {\n      return moment(this.props.selectedMonth, 'M').format('MMMM');\n    } else if (this.props.selectedWeekday) {\n      return `${moment(this.props.selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      return moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n  };\n\n  select = (selectedItem, val, unit) => {\n    if (this.props.selectedDay) {\n      this.pickDay(moment(selectedItem).add(val, unit));\n    } else if (this.props.selectedMonth) {\n      this.pickMonth(parseInt(selectedItem) + val);\n    } else if (this.props.selectedWeekday) {\n      const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n      this.pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + val)).format('ddd'));\n    }\n  };\n\n  render() {\n    const { minDate, maxDate, selectedMonth, selectedDay, selectedWeekday } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay;\n    const unit = this.getUnit();\n\n    const previousItem = selectedMonth ? selectedMonth-1 : moment(selectedItem).subtract(1, unit);\n    const nextItem = selectedMonth ? parseInt(selectedMonth)+1 : moment(selectedItem).add(1, unit);\n\n    const showPreviousArrow = selectedMonth ? moment(previousItem, 'M').isAfter(minDate.startOf('year')) : previousItem.isAfter(minDate.startOf('year'));\n    const showNextArrow = selectedMonth ? true : nextItem.isBefore(maxDate.endOf('year'));\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}\n           onKeyDown={ev =>\n             (ev.key === 'ArrowLeft' && this.select(selectedItem, -1, unit)) ||\n             (ev.key === 'ArrowRight' && this.select(selectedItem, 1, unit))\n           }>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => showPreviousArrow && this.select(selectedItem, -1, unit)}\n        />\n        { this.getString(selectedItem) }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => showPreviousArrow && this.select(selectedItem, 1, unit)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale)\n      .ticks(24)\n      .tickFormat(d3.timeFormat('%H'));\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale)\n      .ticks(this.props.nrOfTicks)\n      .tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { openModal } from '../../reducers/barChart';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  openModal = d => {\n    this.props.openModal({ data: d, arr: this.props.dayInsights[this.props.selectedDay] });\n  };\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n\n    current.interrupt();\n\n    const color = this.props.color;\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('id', (d, i) => `bar-${i}`)\n      .on('mouseover', (d, i) => this.setState({ hoverIndex: i }))\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => this.openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `${d.occurrences} occurrences<br>between ${moment(d.data, 'hh').format('H:mm')} - ${moment(parseInt(d.data)+1, 'hh').format('H:mm')}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bars);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport {openModal} from \"../../reducers/barChart\";\n\nclass AreaChart extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { xScaleArea, yScale, plotHeight, color, plotData, openModal, dayInsights, selectedDay } = this.props;\n\n    const getPosition = i => {\n      const lines = document.getElementsByClassName('line');\n      let pos;\n\n      let beginning = 0,\n        end = lines && lines[i].getTotalLength(),\n        target = null;\n\n      while (end){\n        target = Math.floor((beginning + end) / 2);\n        pos = lines[i].getPointAtLength(target);\n        if ((target === end || target === beginning) && pos.x !== mouseX) {\n          break;\n        }\n        if (pos.x > mouseX)      end = target;\n        else if (pos.x < mouseX) beginning = target;\n        else break; //position found\n      }\n\n      d3.select('.line-text')\n        .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n      return pos;\n    };\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const formatTime = d3.timeFormat('%H');\n    const parseTime = d3.timeParse('%H');\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        const pos = getPosition(i);\n        const x = xScaleArea.invert(pos.x);\n\n        d3.selectAll('.bar')\n          .attr('fill', d =>  formatTime(parseTime(d.data)) === formatTime(x) ? d3.rgb(color).darker() : color);\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n\n    const hide = () => {\n      d3.select('.bar-text')\n        .style('opacity', 0);\n      d3.select('.bar-circle')\n        .style('opacity', 0);\n    };\n\n    d3.selectAll('.mouse-per-bar')\n      .attr('transform', function(d, i) {\n\n        const bars = plotData.map(i => moment(i.data, 'H').format('HH'));\n\n        const x = xScaleArea.invert(getPosition(i).x);\n\n        if (bars.indexOf(formatTime(x)) > -1) {\n          const item = plotData.find(i => moment(i.data, 'H').format('HH') === formatTime(x));\n          d3.select('.mouse-over-effects')\n            .style('cursor', 'pointer')\n            .on('click', () => {\n              openModal({ data: item, arr: dayInsights[moment(selectedDay).format('YYYY-MM-DD')] });\n              hide();\n            });\n\n          d3.select('.bar-text')\n            .style('opacity', 1)\n            .text(item.occurrences);\n          d3.select('.bar-circle')\n            .style('opacity', 1);\n          return `translate(${mouseX},${item.y - 3.8})`\n        }\n        d3.select('.mouse-over-effects')\n          .style('cursor', 'auto')\n          .on('click', null);\n        hide();\n      });\n  };\n\n  setLineOpacity = val => {\n    d3.select('.mouse-line')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-circle')\n      .style('opacity', val);\n    d3.selectAll('.mouse-per-line .line-text')\n      .style('opacity', val);\n  };\n\n  render() {\n    const { xScaleArea, plotWidth, plotHeight, margin, yScale } = this.props;\n\n    const weekObj = this.props.weekInsights;\n\n    const parseTime = d3.timeParse('%H:%M');\n\n    const area = d3.area()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    const line = d3.line()\n      .x(d => xScaleArea(parseTime(`${d}:30`)))\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(weekObj))}\n        />\n        <path className='line shadow'\n              d={line(Object.keys(weekObj))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#777'\n            strokeWidth={1}\n            strokeDasharray='3,3'\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              className='line-circle'\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='line-text'\n              transform='translate(10,3)'\n              fontSize={14}\n            />\n          </g>\n          <g className='mouse-per-bar'>\n            <circle\n              className='bar-circle'\n              r={5}\n              fill={d3.rgb(this.props.color).darker()}\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='bar-text'\n              transform='translate(-17,3)'\n              fontSize={14}\n              opacity={0}\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            transform='translate(0,0)'\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => this.setLineOpacity('0')}\n            onMouseOver={() => this.setLineOpacity('1')}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  data: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AreaChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './Modal.scss';\n\nimport { openModal } from \"../../reducers/barChart\";\nimport moment from 'moment';\nimport clock from \"../../icons/clock.svg\";\n\nclass Modal extends React.PureComponent {\n\n  hideModal = () => {\n    this.props.openModal(null);\n  };\n\n  convertRange = (val, r1, r2 )=> (val - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\n  render() {\n    const { selectedDay, modalData, timeArray } = this.props;\n      return (\n      <div className={classNames('modal', 'fade-in', {'display-block': modalData}, {'display-none': !modalData})} onClick={this.hideModal}>\n        <section className='modal-main' onClick={ev => ev.stopPropagation()}>\n          <i className='fas fa-times' onClick={this.hideModal} />\n          <div className='modal-title'>{selectedDay}</div>\n          {modalData && <div>between {moment(modalData.data, 'hh').format('H:mm')} - {moment(parseInt(modalData.data)+1, 'hh').format('H:mm')}</div>}\n          <div className='clock-icon'>\n            <img src={clock} alt='' width={50} height={50} />\n          </div>\n          <div className='time-container'>\n            {\n              Object.keys(timeArray).map(key =>\n                  <span className='time' style={{ fontSize: this.convertRange(timeArray[key], [1,20], [15,50]) }}>\n              {key}\n            </span>\n              )\n            }\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  modalData: state.barChart.modalData,\n  selectedDay: moment(state.calendar.selectedDay).format('dddd, MMMM DD YYYY'),\n  timeArray: state.barChart.timeArray\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.onReset();\n  };\n  const renderCheckboxes = () =>\n    <div className='checkboxes'>\n       <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n         Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n         Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n       </span>\n      <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n         Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n       </span>\n    </div>;\n\n  return (\n    <div className='footer year-label'>\n      { renderCheckboxes() }\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport Modal from '../widget/Modal';\nimport { showBarChart, showMonthOverview, showWeekdayOverview, showWeekOverview } from '../../reducers/barChart';\nimport {saveColor} from '../../reducers/calendar';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\nimport {getAverageColor} from \"../../helpers/colors\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: (document.getElementById('card').clientWidth - props.margin.left - props.margin.right) * 0.66\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    this.setState({\n      width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n    });\n  };\n\n  getData = () => {\n    if (!!this.props.monthInsights.length) {\n      return this.props.daysOfMonth;\n    }\n    if (!!this.props.weekdayInsights.length) {\n      return this.props.daysOfWeekday;\n    }\n    return this.props.plotData;\n  };\n\n  getInsights = () => {\n    if (this.props.isWeekOverviewChecked) {\n      return getCurrentWeekInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isMonthOverviewChecked) {\n      return getCurrentMonthInsights(this.props.data, this.props.selectedDay, this.props.dayInsights);\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      return getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.data).weekdayObj;\n    }\n  };\n\n  showAreaChart = () => this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked;\n\n  updateScale = data => {\n    const xScale = d3.scaleTime();\n    const xScaleArea = d3.scaleTime();\n    const yScale = d3.scaleLinear().nice();\n\n    const insights = this.getInsights();\n\n    const max = insights ?\n      Math.ceil(Math.max(d3.max(Object.values(insights)), d3.max(Object.values(data)))) :\n      d3.max(Object.values(data));\n\n    const yDomain = [0, this.showAreaChart() ? max + max / 20 : max];\n\n    const parseTime = d3.timeParse('%H:%M');\n    const midnight = parseTime('00:00');\n\n    xScale\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    xScaleArea\n      .domain([midnight, d3.timeDay.offset(midnight)])\n      .range([0, this.state.width - this.props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([this.props.height - this.props.margin.top - this.props.margin.bottom, 0]);\n\n    return {xScale, yScale, xScaleArea};\n  };\n\n  updatePlotSize = () => {\n    const plotWidth = this.state.width - (this.props.margin.left + this.props.margin.right);\n    const plotHeight = this.props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  render() {\n    const data = this.getData();\n\n    const { xScale, yScale, xScaleArea } =  this.updateScale(data);\n    const { plotWidth, plotHeight } = this.updatePlotSize();\n\n    const max = d3.max(Object.values(data));\n    const nrOfTicks = max < 10 ? max : (max > 20 ? max / 4 : max / 2);\n\n    const parseTime = d3.timeParse('%H');\n\n    const metaData = {\n      xScale,\n      yScale,\n      xScaleArea,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n    const color = this.props.color || getAverageColor(this.props);\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight - 50})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} color={color}/>\n            {this.showAreaChart() &&\n            <AreaChart {...metaData} {...plotData} margin={this.props.margin} weekInsights={this.getInsights()} color={color}/>}\n          </g>\n        </svg>\n        <Footer />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n        <Modal />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  data: state.app.data,\n  allDays: state.app.allDays,\n  minDate: state.app.minDate,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[props.selectedDay] ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    plotData: props.data,\n    margin: props.margin,\n    height: props.height\n  };\n\n  return (\n    <Section className='section-two-thirds'>\n      <Card>\n        <DayLabel selectedDay={props.selectedDay} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport './RadialChart.scss';\n\nclass RadialChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true\n    }\n  }\n\n  componentDidMount() {\n    this.renderArcs();\n  }\n\n  componentDidUpdate() {\n    this.renderArcs();\n  }\n\n  normalize = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n  };\n\n  getPercentage = val => {\n    const max = Math.max(...Object.values(this.props.data));\n    const min = Math.min(...Object.values(this.props.data));\n    return (80 - 5) * ((val - min) / (max - min)) + 5;\n  };\n\n  toggleFadeCss = blocks => {\n    blocks\n      .style('opacity', undefined)\n      .classed({ out: this.state.visible });\n    this.setState({\n      visible: !this.state.visible\n    })\n  };\n\n  renderArcs = () => {\n    const svg = d3.select(this.refs.radialChart);\n\n    const width = 350;\n    const arcSize = (5 * width / 100);\n    const innerRadius = arcSize * 2;\n\n    const keysArray = Object.keys(this.props.data)\n      .sort((a, b) => moment(a, 'ddd').isoWeekday() - moment(b, 'ddd').isoWeekday());\n\n    const data = keysArray.map(key => {\n      return {\n        defaultValue: this.props.data[key],\n        value: this.getPercentage(this.props.data[key]),\n        label: key,\n        color: d3.interpolateBlues(this.normalize(this.props.data[key]))\n      }\n    });\n\n    const arcs = data.map((obj, i) => {\n      return d3.arc().innerRadius(i * arcSize + innerRadius).outerRadius((i + 1) * arcSize - (width / 100) + innerRadius);\n    });\n\n    const arcsGrey = data.map(function (obj, i) {\n      return d3.arc().innerRadius(i * arcSize + (innerRadius + ((arcSize / 2) - 2))).outerRadius((i + 1) * arcSize - ((arcSize / 2)) + (innerRadius));\n    });\n\n    const pieData = data.map(function (obj, i) {\n      return [\n        {value: obj.value * 0.75, arc: arcs[i], object: obj},\n        {value: (100 - obj.value) * 0.75, arc: arcsGrey[i], object: obj},\n        {value: 100 * 0.25, arc: arcs[i], object: obj}];\n    });\n\n    const pie = d3.pie()\n      .sort(null)\n      .value(d => d.value);\n\n    const g = svg.selectAll('g').data(pieData)\n      .enter()\n      .append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    const gText = svg.selectAll('g.textClass').data([{}]).enter()\n      .append('g')\n      .classed('textClass', true)\n      .attr('transform', 'translate(' + width / 2 + ',' + width / 2 + ') rotate(180)');\n\n    g.selectAll('path').data(function (d) {\n      return pie(d);\n    })\n      .enter()\n      .append('path')\n      .attr('id', function (d, i) {\n        if (i === 0) {\n          return 'Arc' + d.data.object.label;\n        }\n        if (i === 1) {\n          return 'Text' + d.data.object.label;\n        }\n      })\n      .style('cursor', 'pointer')\n      .on('mouseover', function (d, i) {\n        if (i === 0) {\n          const id = d3.select(this).attr('id');\n          d3.selectAll('path')\n            .transition()\n            .filter(function () {\n              return d3.select(this).attr('id') !== id;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n\n          d3.selectAll('.textClass text')\n            .transition()\n            .filter(function () {\n              return d3.select(this).text() !== d.data.object.label;\n            })\n            .duration(500)\n            . attr('opacity', function (d, j) {\n              return j !== i - 1 ? 0.1 : 1;\n            });\n        }\n      })\n      .on('mouseleave', (d, i) => {\n        d3.selectAll('path').attr('opacity', 1);\n        d3.selectAll('.textClass text').attr('opacity', 1);\n      })\n      .attr('fill', (d, i) => i === 0 ? d.data.object.color : i === 1 ? '#F1F1F1' : 'none')\n      .transition()\n      .duration(1000)\n        .attrTween('d', function (d) {\n          const i = d3.interpolate(d.startAngle+0.1, d.endAngle);\n          return function(t) {\n            d.endAngle = i(t);\n            return d.data.arc(d);\n          }\n      });\n\n    svg.selectAll('g').each(function (d, index) {\n      const el = d3.select(this);\n      el.selectAll('path').each(function (r, i) {\n        if (i === 1) {\n          const labelObj = r.data.object;\n          g.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', '#777')\n            .attr('dominant-baseline', 'central')\n            .append('textPath')\n            .attr('textLength', function (d, i) {\n              return 0;\n            })\n            .attr('xlink:href', '#Text' + labelObj.label)\n            .attr('startOffset', '5')\n            .attr('dy', '-3em')\n            .transition()\n            .delay(1000)\n              .text(labelObj.defaultValue);\n        }\n        if (i === 0) {\n          const centroidText = r.data.arc.centroid({\n            startAngle: r.startAngle,\n            endAngle: r.startAngle\n          });\n          const labelObj = r.data.object;\n          gText.append('text')\n            .attr('font-size', ((4 * width) / 100))\n            .attr('fill', () => labelObj.color)\n            .attr('font-weight', '600')\n            .transition()\n            .delay(1000)\n              .text(labelObj.label)\n            .attr('transform', 'translate(' + (centroidText[0] - ((1.5 * width) / 100)) + ',' + (centroidText[1] + ') rotate(' + (180) + ')'))\n            .attr('dominant-baseline', 'central');\n        }\n      })\n    });\n  };\n\n  render() {\n    return (\n      <svg className='radial-chart' ref='radialChart' width='100%' height={350} />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(RadialChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../bar-chart/BarChart.scss';\nimport RadialChart from \"./RadialChart\";\nimport { getDatasetOverview} from \"../../helpers/parser\";\n\nconst RadialChartContainer = props => {\n  const getInsights = () => getDatasetOverview(props.allDays, props.data, props.dayInsights);\n\n  return (\n    <Section className='section-one-third'>\n      <Card>\n        <div className='year-label dayTitle dataset-overview-title'>Weekdays vs. weekends</div>\n        <div className='barChart'>\n          <RadialChart data={getInsights()} />\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  data: state.app.data,\n  allDays: state.app.allDays\n});\n\nexport default connect(mapStateToProps)(RadialChartContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekdayInsights, uploadFile } from '../../reducers/app';\nimport { showCalendar, selectDay, resetColors } from '../../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview } from '../../reducers/barChart';\n\nimport Section from './Section';\n\nimport dataset1 from '../../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../../data/itch_tbc.csv';\nimport dataset3 from '../../data/ptsd_filtered.csv';\nimport dataset4 from '../../data/data.csv';\n\nconst Upload = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n    props.resetColors();\n  };\n\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n\n  return (\n    <Section title='Select dataset' className='upload-section'>\n      <div className='upload-dataset'>\n        <Dropdown\n          className='dropdown'\n          options={options}\n          placeholder='Choose...'\n          value={props.datasetName}\n          onChange={onSelect}\n        />\n        <Dropzone\n          accept='text/csv'\n          onDrop={onDrop}\n        >\n          {({getRootProps, getInputProps, isDragActive}) => {\n            return (\n              <div\n                {...getRootProps()}\n                className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n              >\n                <input {...getInputProps()} />\n                {\n                  !!files.length\n                    ? <span className='file-name'>\n                          <i className='fa fa-remove' />\n                      {files}\n                        </span>\n                    : <span className='upload-message'>\n                          <i className='fa fa-upload' />\n                            Drag & Drop\n                        </span>\n                }\n              </div>\n            )\n          }}\n        </Dropzone>\n      </div>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files,\n  datasetName: state.app.datasetName\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  resetColors: val => dispatch(resetColors(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport RadialChartContainer from './radial-chart/RadialChartContainer';\nimport Upload from './widget/Upload';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport githubLogo from '../icons/github-logo.svg';\nimport githubLogoHover from '../icons/github-logo-hover.svg';\nimport pdfLogo from '../icons/pdf-logo.svg';\nimport pdfLogoHover from '../icons/pdf-logo-hover.svg';\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      data={props.allDays[props.selectedDay]}\n      margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n      height={300}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n        <div className='icons'>\n          <a href='https://github.com/diana-tofan/Time-Series-Visualization' target='_blank' rel='noopener noreferrer'>\n            <img className='github-icon' src={githubLogo} alt='Github' onMouseOver={ev => ev.currentTarget.src = githubLogoHover} onMouseLeave={ev => ev.currentTarget.src = githubLogo} />\n          </a>\n          <a href='https://www.overleaf.com/read/vptjwvyzjnvg' target='_blank' rel='noopener noreferrer'>\n            <img className='pdf-icon' src={pdfLogo} alt='Report' onMouseOver={ev => ev.currentTarget.src = pdfLogoHover} onMouseLeave={ev => ev.currentTarget.src = pdfLogo} />\n          </a>\n        </div>\n      </header>\n      <div className='content'>\n        <Upload />\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible &&\n          <div>\n            <p>Day overview</p>\n            <div className='charts-container'>\n              { renderBarChart() }\n              { props.isBarChartVisible && <RadialChartContainer /> }\n            </div>\n          </div>\n        }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}