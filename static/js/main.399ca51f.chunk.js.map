{"version":3,"sources":["components/bar-chart/clock.svg","data/itching_in_nose_tbc.csv","data/itch_tbc.csv","data/ptsd_filtered.csv","data/data.csv","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/barChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/widget/Card.js","components/widget/Section.js","components/calendar/Heatmap.js","components/bar-chart/DayLabel.js","components/bar-chart/XAxis.js","components/bar-chart/YAxis.js","components/bar-chart/Bars.js","components/bar-chart/AreaChart.js","components/widget/Modal.js","components/bar-chart/Footer.js","components/bar-chart/BarChart.js","helpers/colors.js","components/bar-chart/Container.js","components/widget/DragAndDrop.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTime","timeStamp","timeString","split","slice","moment","concat","utc","format","parseDate","countOccurrences","arr","reduce","obj","item","getDayInsights","data","newData","map","date","columns","time","r","a","push","getMonthInsights","month","dayInsights","allDays","monthInsights","Object","keys","filter","key","mergedData","acc","allDaysOfMonth","mergedDays","values","val","hasOwnProperty","selectedMonth","daysOfMonth","flat","getWeekdayInsights","weekday","currentWeekdays","weekdayInsights","isoWeekday","length","daysArr","day","weekdayObj","i","Number","toFixed","selectedWeekday","daysOfWeekday","parseDayInsights","days","roundedHours","hour","m","parseInt","startOf","occurrences","getCurrentWeekInsights","selectedDay","startDate","endDate","isBefore","toDate","clone","add","formattedDays","weekInsights","includes","week","minute","second","millisecond","weekOccurrences","apply","weekObj","getCurrentWeek","startOfWeek","endOfWeek","endOf","dayItem","getCurrentMonth","startOfMonth","endOfMonth","getCurrentWeekdays","start","end","daysArr1","dayItem1","subtract","getExactTimes","selectedHour","exactTimes","parseData","x","replace","timestamp","initialState","rawData","minDate","maxDate","datasetName","files","showTooltip","isSpinnerVisible","setData","type","showSpinner","setMonthInsights","setWeekdayInsights","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","screenWidth","currentWeek","currentMonth","color","colors","showCalendar","selectDay","saveColor","isRadialChartVisible","isBarChartVisible","showWeekOverview","showMonthOverview","showWeekdayOverview","modalData","timeArray","showBarChart","openModal","rootReducer","combineReducers","app","state","arguments","undefined","action","moments","d","objectSpread","min","max","calendar","assign","toConsumableArray","Set","value","radialChart","barChart","weekArray","Array","_","connect","dispatch","props","react_default","createElement","className","classNames","bold","onClick","onWeekdayClick","changeYear","previousYear","nextYear","showPreviousArrow","showNextArrow","disabled","Day","nextProps","nextState","formatDate","isCurrentWeek","this","isCurrentMonth","isCurrentWeekday","fill","isCurrentDay","getDay","d3","count","Date","getFullYear","getMonth","find","setHours","j","Math","interpolateColor","fillColor","isColorSaved","stroke","strokeWidth","width","height","rx","ry","y","ev","preventDefault","stopPropagation","data-tip","data-for","React","Component","Month","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showMoreData","requestAnimationFrame","setState","console","log","weeksInMonth","floor","offset","monthName","lastDay","firstDay","extraSpace","renderList","textAnchor","renderMonthOverview","calendar_Day","PureComponent","Year","target","size","months","range","monthsArr","memo","index","hidden","calendar_Month","Card","id","children","Section","title","Heatmap","addEventListener","onScreenResize","widget_Section","components_widget_Card","calendar_YearLabel","calendar_DayLabels","calendar_Year","react_tooltip_dist_default","multiline","class","DayLabel","_this$props","dataArr","selectedItem","unit","previousItem","nextItem","isAfter","pickDay","pickMonth","toString","pickWeekday","string","tabIndex","onKeyDown","XAxis","renderAxis","xAxis","xScale","ticks","tickFormat","refs","transition","transform","ref","fontSize","YAxis","yAxis","yScale","nrOfTicks","Bars","renderBars","current","bars","datum","plotData","selectAll","interrupt","attr","hoverIndex","darker","enter","append","classed","plotHeight","on","exit","remove","merge","select","duration","AreaChart","renderLine","line","node","totalLength","getTotalLength","delay","handleMouseMove","mouseX","mouseY","pos","lines","document","getElementsByClassName","formatTime","beginning","getPointAtLength","text","invert","indexOf","style","cursorPointer","plotWidth","_this2","_this$props2","margin","area","y0","top","bottom","y1","curve","valueline","setLineOpacity","x1","x2","y2","spreadMethod","stopColor","stopOpacity","opacity","pointerEvents","onMouseLeave","onMouseOver","onMouseMove","nativeEvent","offsetX","offsetY","_ref","handleClose","show","display-block","display-none","isWeekOverviewChecked","isMonthOverviewChecked","isWeekdayOverviewChecked","onReset","onCheckboxChange","onMonthCheckboxChange","onWeekdayCheckboxChange","checked","defaultChecked","onChange","BarChart","resize","getElementById","clientWidth","left","right","updateScale","nice","currentWeekInsights","checkedBox","ceil","yDomain","midnight","domain","updatePlotSize","hideModal","_this3","removeEventListener","ReactTooltip","rebuild","_this4","insights","_this$updateScale","_this$updatePlotSize","metaData","currentMonthInsights","monthOccurrences","monthObj","getCurrentMonthInsights","currentWeekdayInsights","showAreaChart","rgb","g","b","filteredColors","forEach","getAverageColor","bar_chart_XAxis","bar_chart_YAxis","bar_chart_Bars","bar_chart_AreaChart","bar_chart_Footer","components_widget_Modal","src","clock","alt","r1","r2","barChartProps","bar_chart_DayLabel","bar_chart_BarChart","uploadFile","file","name","bytes","round","pow","bytesToSize","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","reader","FileReader","onload","result","parsed","onabort","onerror","readAsBinaryString","getRootProps","getInputProps","isDragActive","dropzone--isActive","dropzone--isDone","isEmptyContainerVisible","setDatasetName","renderHeatmap","dataset","then","catch","err","widget_DragAndDrop","dist_default","options","placeholder","dataset1","dataset2","dataset3","dataset4","calendar_Heatmap","bar_chart_Container","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","actionSanitizer","stateSanitizer","ReactDOM","render","es","src_components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.399ca51f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock.d668b059.svg\";","module.exports = __webpack_public_path__ + \"static/media/itching_in_nose_tbc.116a8ad6.csv\";","module.exports = __webpack_public_path__ + \"static/media/itch_tbc.345754fd.csv\";","module.exports = __webpack_public_path__ + \"static/media/ptsd_filtered.c05231cb.csv\";","module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","import moment from 'moment';\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx').utc()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  // newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  // newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport const getMonthInsights = (month, dayInsights, allDays) => {\n  const monthInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(monthInsights).reduce((acc, key) => {\n    acc.push(monthInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).format('M') === month)\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n  return {\n    selectedMonth: month,\n    daysOfMonth: mergedDays,\n    monthInsights: mergedData.flat()\n  };\n};\n\nexport const getWeekdayInsights = (weekday, dayInsights, allDays, currentWeekdays, data) => {\n  const weekdayInsights = Object.keys(dayInsights)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = dayInsights[key];\n      return obj;\n    }, {});\n  const mergedData = Object.keys(weekdayInsights).reduce((acc, key) => {\n    acc.push(weekdayInsights[key]);\n    return acc;\n  }, []);\n  const allDaysOfMonth = Object.keys(allDays)\n    .filter(key => moment(key).isoWeekday() === moment(weekday, 'ddd').isoWeekday())\n    .reduce((obj, key) => {\n      obj[key] = allDays[key];\n      return obj;\n    }, {});\n  const mergedDays = Object.values(allDaysOfMonth).reduce((acc, val) => {\n    Object.keys(val).map(key => {\n      if (acc.hasOwnProperty(key)) {\n        acc[key] += val[key];\n      } else {\n        acc[key] = val[key];\n      }\n    });\n    return acc;\n  }, {});\n\n  const length = currentWeekdays && currentWeekdays.daysArr.filter(day => data[moment(day, 'DD-MM-YYYY').format('YYYY-MM-DD')]).length - 1;\n\n  let weekdayObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekdayObj[i] = mergedDays[i] ? Number(mergedDays[i] / length).toFixed(2) : 0\n  }\n\n  return {\n    selectedWeekday: weekday,\n    daysOfWeekday: mergedDays,\n    weekdayInsights: mergedData.flat(),\n    weekdayObj\n  };\n};\n\nexport const parseDayInsights = data => {\n  const dayInsights = getDayInsights(data);\n  return Object.keys(dayInsights).reduce((acc, item) => {\n    const days = dayInsights[item];\n    const roundedHours = days && days.map(hour => {\n        const m = moment(`${item} ${hour}`);\n        return parseInt(m.startOf('hour').format('HH'));\n      }\n    );\n    const occurrences = roundedHours && roundedHours.reduce((acc, item) => {\n      acc[item] = (acc[item] || 0) + 1;\n      return acc;\n    }, {});\n    let obj = {};\n    for (let i = 0; i <= 24; i++) {\n      obj[i] = occurrences[i] || 0\n    }\n    acc[item] = occurrences;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentWeekInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).isoWeekday(1);\n  const endDate = moment(selectedDay).isoWeekday(8);\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const weekArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let weekInsights = weekArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  weekInsights = weekInsights.map(week =>\n    week.occurrences.map(item => {\n      const m = moment(`${week.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const weekOccurrences = [].concat.apply([], weekInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let weekObj = {};\n  for (let i = 0; i < 24; i++) {\n    weekObj[i] = weekOccurrences[i] ? Number(weekOccurrences[i] / length).toFixed(2) : 0\n  }\n\n  return weekObj;\n};\n\nexport const getCurrentMonthInsights = (data, selectedDay, dayInsights) => {\n  const startDate = moment(selectedDay).startOf('month');\n  const endDate = moment(selectedDay).endOf('month');\n  let days = [];\n  let day = startDate;\n  while (day.isBefore(endDate)) {\n    days.push(day.toDate());\n    day = day.clone().add(1, 'd');\n  }\n  const formattedDays = days.map(day => moment(day).format('YYYY-MM-DD'));\n  const monthArray = Object.keys(data).filter(key => formattedDays.includes(key));\n  let monthInsights = monthArray.reduce((acc, item) => {\n    acc.push({ day: item, occurrences: dayInsights[item] });\n    return acc;\n  }, []);\n  monthInsights = monthInsights.map(month =>\n    month.occurrences.map(item => {\n      const m = moment(`${month.day} ${item}`);\n      return m.minute() || m.second() || m.millisecond()\n        ? parseInt(m.add(1, 'hour').startOf('hour').format('HH'))\n        : parseInt(m.startOf('hour').format('HH'))\n    })\n  );\n\n  const length = days.filter(day => data[moment(day).format('YYYY-MM-DD')]).length;\n\n  const monthOccurrences = [].concat.apply([], monthInsights).reduce((acc, item) => {\n    acc[item] = (acc[item] || 0) + 1;\n    return acc;\n  }, {});\n\n  let monthObj = {};\n  for (let i = 0; i < 24; i++) {\n    monthObj[i] = monthOccurrences[i] ? Number(monthOccurrences[i]/ length).toFixed(2) : 0\n  }\n\n  return monthObj;\n};\n\nexport const getCurrentWeek = selectedDay => {\n  const startOfWeek = moment(selectedDay).startOf('isoWeek');\n  const endOfWeek = moment(selectedDay).endOf('isoWeek');\n\n  let daysArr = [];\n  let dayItem = startOfWeek;\n\n  while (dayItem <= endOfWeek) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentMonth = selectedDay => {\n  const startOfMonth = moment(selectedDay).startOf('month');\n  const endOfMonth = moment(selectedDay).endOf('month');\n\n  let daysArr = [];\n  let dayItem = startOfMonth;\n\n  while (dayItem <= endOfMonth) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(1, 'd');\n  }\n\n  return daysArr;\n};\n\nexport const getCurrentWeekdays = selectedDay => {\n  const start = moment(selectedDay).startOf('year');\n  const end = moment(selectedDay).endOf('year');\n\n  let daysArr = [];\n  let dayItem = moment(selectedDay);\n\n  while (dayItem <= end) {\n    daysArr.push(moment(dayItem).format('DD-MM-YYYY'));\n    dayItem = dayItem.clone().add(7, 'd');\n  }\n\n  let daysArr1 = [];\n  let dayItem1 = moment(selectedDay);\n\n  while (dayItem1 >= start) {\n    daysArr1.push(moment(dayItem1).format('DD-MM-YYYY'));\n    dayItem1 = dayItem1.clone().subtract(7, 'd');\n  }\n\n  return {\n    daysArr: daysArr.concat(daysArr1),\n    length: daysArr.concat(daysArr1).length\n  }\n};\n\nexport const getExactTimes = (selectedHour, arr) => {\n  const exactTimes = arr.filter(i => moment(i, 'HH:mm:ss').format('HH') === moment(selectedHour.data, 'H').format('HH'));\n  return countOccurrences(exactTimes.map(i => moment(i, 'HH:mm:ss').format('HH:mm')));\n};\n\nexport default parseData;\n","import parseData, { getDayInsights, parseDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\nconst SET_DATASET_NAME = 'SET_DATASET_NAME';\nconst SHOW_SPINNER = 'SHOW_SPINNER';\nconst SET_MONTH_INSIGHTS = 'SET_MONTH_INSIGHTS';\nconst SET_WEEKDAY_INSIGHTS = 'SET_WEEKDAY_INSIGHTS';\n\nconst initialState = {\n  data: [],\n  rawData: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  monthInsights: [],\n  daysOfMonth: [],\n  selectedMonth: null,\n  weekdayInsights: [],\n  daysOfWeekday: [],\n  selectedWeekday: null,\n  datasetName: '',\n  files: [],\n  allDays: [],\n  showTooltip: false,\n  isSpinnerVisible: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        rawData: action.val,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments),\n        allDays: parseDayInsights(action.val)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    case SET_DATASET_NAME:\n      return {\n        ...state,\n        datasetName: action.val\n      };\n    case SHOW_SPINNER:\n      return {\n        ...state,\n        isSpinnerVisible: action.val\n      };\n    case SET_MONTH_INSIGHTS:\n      return {\n        ...state,\n        monthInsights: action.val.monthInsights,\n        daysOfMonth: action.val.daysOfMonth,\n        selectedMonth: action.val.selectedMonth\n      };\n    case SET_WEEKDAY_INSIGHTS:\n      return {\n        ...state,\n        weekdayInsights: action.val.weekdayInsights,\n        daysOfWeekday: action.val.daysOfWeekday,\n        selectedWeekday: action.val.selectedWeekday\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\nexport const setDatasetName = val => ({ type: SET_DATASET_NAME, val });\nexport const showSpinner = val => ({ type: SHOW_SPINNER, val });\nexport const setMonthInsights = val => ({ type: SET_MONTH_INSIGHTS, val });\nexport const setWeekdayInsights = val => ({ type: SET_WEEKDAY_INSIGHTS, val });\n","import {getCurrentMonth, getCurrentWeek, getCurrentWeekdays} from \"../helpers/parser\";\n\nconst SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\nconst SCREEN_RESIZE = 'SCREEN_RESIZE';\nconst SELECT_DAY = 'SELECT_DAY';\nconst SAVE_COLOR = 'SAVE_COLOR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400,\n  screenWidth: typeof window === 'object' ? window.innerWidth : null,\n  selectedDay: null,\n  currentWeek: null,\n  currentMonth: null,\n  currentWeekdays: null,\n  color: null,\n  colors: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    case SCREEN_RESIZE:\n      return Object.assign({}, state, {\n        screenWidth: window.innerWidth,\n        cellSize: window.innerWidth / 125,\n        cellMargin: window.innerWidth / 400\n      });\n    case SELECT_DAY:\n      const selectedDay = action.val && action.val.day;\n      const color = action.val && action.val.color;\n      return {\n        ...state,\n        selectedDay,\n        color,\n        currentWeek: getCurrentWeek(selectedDay),\n        currentMonth: getCurrentMonth(selectedDay),\n        currentWeekdays: getCurrentWeekdays(selectedDay)\n      };\n    case SAVE_COLOR:\n      return Object.assign({}, state, {\n        colors: [...new Set(state.colors.concat({\n            day: action.val.day,\n            value: action.val.value\n        }))]\n      });\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\nexport const onScreenResize = val => ({ type: SCREEN_RESIZE, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\nexport const saveColor = val => ({ type: SAVE_COLOR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { getExactTimes } from '../helpers/parser';\n\nconst SHOW_BAR_CHART = 'SHOW_BAR_CHART';\nconst SHOW_WEEK_OVERVIEW = 'SHOW_WEEK_OVERVIEW';\nconst SHOW_MONTH_OVERVIEW = 'SHOW_MONTH_OVERVIEW';\nconst SHOW_WEEKDAY_OVERVIEW = 'SHOW_WEEKDAY_OVERVIEW';\nconst OPEN_MODAL = 'OPEN_MODAL';\nconst RESET = 'RESET';\n\nconst initialState = {\n  isBarChartVisible: false,\n  showWeekOverview: false,\n  showMonthOverview: false,\n  showWeekdayOverview: false,\n  modalData: null,\n  timeArray: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_BAR_CHART:\n      return {\n        ...state,\n        isBarChartVisible: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEK_OVERVIEW:\n      return {\n        ...state,\n        showWeekOverview: action.val,\n        showMonthOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_MONTH_OVERVIEW:\n      return {\n        ...state,\n        showMonthOverview: action.val,\n        showWeekOverview: false,\n        showWeekdayOverview: false\n      };\n    case SHOW_WEEKDAY_OVERVIEW:\n      return {\n        ...state,\n        showWeekdayOverview: action.val,\n        showWeekOverview: false,\n        showMonthOverview: false\n      };\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalData: action.val && action.val.data,\n        timeArray: action.val ? getExactTimes(action.val.data, action.val.arr) : []\n      };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport const showBarChart = val => ({ type: SHOW_BAR_CHART, val });\nexport const showWeekOverview = val => ({ type: SHOW_WEEK_OVERVIEW, val });\nexport const showMonthOverview = val => ({ type: SHOW_MONTH_OVERVIEW, val });\nexport const showWeekdayOverview = val => ({ type: SHOW_WEEKDAY_OVERVIEW, val });\nexport const openModal = val => ({ type: OPEN_MODAL, val });\nexport const onReset = val => ({ type: RESET, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\nimport barChart from './barChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart,\n  barChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { setWeekdayInsights, setMonthInsights } from '../../reducers/app';\nimport { showBarChart } from '../../reducers/barChart';\nimport { selectDay } from '../../reducers/calendar';\nimport { getWeekdayInsights } from '../../helpers/parser';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = props => {\n  const onWeekdayClick = day => {\n    props.selectDay(null);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    const weekdayInsights = getWeekdayInsights(day, props.dayInsights, props.allDays);\n    props.setWeekdayInsights({\n      selectedWeekday: weekdayInsights.selectedWeekday,\n      daysOfWeekday: weekdayInsights.daysOfWeekday,\n      weekdayInsights: weekdayInsights.weekdayInsights\n    });\n    props.showBarChart(true);\n  };\n  return (\n    <div className='day-labels-container'>\n    {\n      weekArray.map(day =>\n        <text\n          key={day}\n          className={classNames('day-labels', {'bold': props.selectedWeekday === day})}\n          onClick={() => onWeekdayClick(day)}\n        >\n          {day}\n        </text>\n      )\n    }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  dayInsights: state.app.dayInsights,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabels);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='year-label'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay, saveColor} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\n\nclass Day extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    const formatDate = date => moment(date).format('DD-MM-YY');\n    const isCurrentWeek = (nextProps.currentWeek && nextProps.currentWeek.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeek && this.props.currentWeek.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentMonth = (nextProps.currentMonth && nextProps.currentMonth.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentMonth && this.props.currentMonth.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    const isCurrentWeekday = (nextProps.currentWeekdays && nextProps.currentWeekdays.daysArr.includes(moment(this.props.day).format('DD-MM-YYYY'))) ||\n      (this.props.currentWeekdays && this.props.currentWeekdays.daysArr.includes(moment(nextProps.day).format('DD-MM-YYYY')));\n    return formatDate(this.props.day) === formatDate(nextProps.selectedDay) ||\n      formatDate(nextProps.day) === formatDate(this.props.selectedDay) ||\n      this.props.fill !== nextProps.fill ||\n      isCurrentWeek ||\n      isCurrentMonth ||\n      isCurrentWeekday ||\n      this.props.cellSize !== nextProps.cellSize;\n  }\n\n  componentDidUpdate() {\n    // d3.select('.day.fill')\n    //   .transition()\n    //   .duration(1000)\n  }\n\n  render() {\n    const props = this.props;\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n    const d = props.day;\n\n    let isCurrentDay = false;\n    if (moment(d).format('DD-MM-YY') === moment(props.selectedDay).format('DD-MM-YY')) {\n      isCurrentDay = true;\n    }\n\n    const day = d => (d.getDay() + 6) % 7,\n      week = d3.timeFormat('%W');\n\n    const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n    const month = props.month;\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    let filters = days.map(d =>\n      Object.keys(props.data).find(key =>\n        new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n    );\n    const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n    const isCurrentWeek = props.currentWeek && props.currentWeek.includes(moment(d).format('DD-MM-YYYY')) && props.showWeekOverview;\n    const isCurrentMonth = (props.currentMonth && props.currentMonth.includes(moment(d).format('DD-MM-YYYY')) && props.showMonthOverview) ||\n      (props.selectedMonth && props.selectedMonth === moment(d).format('M'));\n    const isCurrentWeekday = (props.currentWeekdays && props.currentWeekdays.daysArr.includes(moment(d).format('DD-MM-YYYY')) && props.showWeekdayOverview) ||\n      (props.selectedWeekday && props.selectedWeekday === moment(d).format('ddd'));\n\n    const item = Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n    const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n    const interpolateColor = (isCurrentWeek || isCurrentMonth || isCurrentWeekday)\n      ? d3.interpolateOranges(value) : d3.interpolatePurples(value);\n    let fillColor = !!props.data[item] ? (isCurrentDay ? d3.interpolateOranges(value) : interpolateColor) : '#ececec';\n\n    const isColorSaved = this.props.colors.find(color => color.day === moment(d).format('DD-MM-YYYY'));\n    value && !!props.data[item] && !isColorSaved && props.saveColor({ day: moment(d).format('DD-MM-YYYY'), value: d3.color(d3.interpolateOranges(value)) });\n\n    const onDayClick = ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      props.setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: []\n      });\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      props.selectDay({ day: d, color: d3.interpolateOranges(value) });\n      props.showBarChart(true);\n    };\n    return (\n      <rect\n        key={d}\n        className='day'\n        stroke={isCurrentDay ? '#000' : ''}\n        strokeWidth={isCurrentDay ? 1 : 0}\n        width={cellSize}\n        height={cellSize}\n        rx={50}\n        ry={50}\n        fill={fillColor}\n        y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n        x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n        onClick={onDayClick}\n        data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n        data-for='svgTooltip'\n      >\n      </rect>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  selectedDay: state.calendar.selectedDay,\n  selectedWeekday: state.app.selectedWeekday,\n  selectedMonth: state.app.selectedMonth,\n  showWeekOverview: state.barChart.showWeekOverview,\n  showMonthOverview: state.barChart.showMonthOverview,\n  showWeekdayOverview: state.barChart.showWeekdayOverview,\n  currentWeek: state.calendar.currentWeek,\n  currentMonth: state.calendar.currentMonth,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  saveColor: val => dispatch(saveColor(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\nimport { getMonthInsights } from '../../helpers/parser';\nimport {setMonthInsights, setWeekdayInsights} from \"../../reducers/app\";\nimport { showBarChart } from \"../../reducers/barChart\";\nimport { selectDay } from '../../reducers/calendar';\n\nclass Month extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    this.showMoreData();\n  }\n\n  componentDidUpdate() {\n    this.showMoreData();\n  }\n\n  showMoreData = () => {\n    const { count } = this.state;\n    const { month } = this.props;\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    if (count < days.length) {\n      requestAnimationFrame(() => this.setState({ count: count+1 }));\n    } else {\n      console.log('now show day and month labels');\n    }\n  };\n\n  render() {\n    const props = this.props;\n\n    const month = props.month;\n\n    const weeksInMonth = month => {\n      const m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    };\n\n    const cellMargin = props.cellMargin,\n      cellSize = props.cellSize;\n\n    const monthName = d3.timeFormat('%B');\n\n    const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n    const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n    const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n    let extraSpace = 0;\n    if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n      extraSpace += 10;\n    }\n\n    const { count } = this.state;\n\n    const endReached = count >= days.length;\n    const renderList = endReached ? days : days.slice(0, count);\n\n    const renderMonthOverview = month => {\n      props.selectDay(null);\n      props.setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(moment().month(month).format('M'), props.dayInsights, props.allDays);\n      props.setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      props.showBarChart(true);\n    };\n\n    const isCurrentMonth = moment(this.props.selectedMonth, 'M').format('MMMM') === monthName(month);\n    return (\n      <svg\n        className='month'\n        height={((cellSize * 7) + (cellMargin * 8) + 20)}\n        width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n        key={month}\n      >\n        <g>\n          <text\n            className={classNames('month-name', {'bold': isCurrentMonth})}\n            y={(cellSize * 7) + (cellMargin * 8) + 15}\n            x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n            textAnchor='middle'\n            onClick={() => renderMonthOverview(monthName(month))}\n          >\n            { monthName(month) }\n          </text>\n          { renderList.map(d => <Day fill={isCurrentMonth || moment(d).format('ddd') === props.selectedWeekday} day={d} month={month} key={d} />) }\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nclass Year extends React.PureComponent {\n  render() {\n    const props = this.props;\n    const minDate = props.minDate.format('YYYY-MM-DD');\n    const maxDate = props.maxDate.format('YYYY-MM-DD');\n\n    const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n      new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n    const chunk = (target, size) => {\n      return target.reduce((memo, value, index) => {\n        if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n        memo[memo.length - 1].push(value);\n        return memo\n      }, [[]])\n    };\n    const monthsArr = chunk(months, months.length / 12);\n\n    return (\n      <div className='year-wrapper'>\n        {\n          monthsArr.map((months, i) =>\n            <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n              {\n                months.map((month, i) =>\n                  <Month\n                    key={i}\n                    month={month}\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport './Card.scss';\n\nclass Card extends React.PureComponent {\n  render() {\n    return (\n      <div className='card' id='card'>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\n\nconst Section = props =>\n  <section>\n    <p>{props.title}</p>\n    {props.children}\n  </section>;\n\nexport default Section;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport '../Spinner.scss';\nimport { showSpinner } from '../../reducers/app';\nimport { onScreenResize } from '../../reducers/calendar';\n\nclass Heatmap extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    window.addEventListener('resize', () => {\n      props.onScreenResize(window.innerWidth);\n    });\n  }\n\n  componentDidMount() {\n    this.props.showSpinner(false);\n  }\n\n  render () {\n    return (\n      <Section title='Calendar heatmap'>\n        <Card>\n          <YearLabel />\n          <div className='months'>\n            <DayLabels />\n            <Year />\n          </div>\n          <ReactTooltip id='svgTooltip' multiline class='tooltip'/>\n        </Card>\n      </Section>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showSpinner: val => dispatch(showSpinner(val)),\n  onScreenResize: val => dispatch(onScreenResize(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Heatmap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport {showBarChart} from '../../reducers/barChart';\nimport {selectDay} from '../../reducers/calendar';\nimport {setMonthInsights, setWeekdayInsights} from '../../reducers/app';\nimport {getMonthInsights, getWeekdayInsights} from '../../helpers/parser';\nimport * as d3 from 'd3';\n\nclass DayLabel extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.selectedMonth !== this.props.selectedMonth ||\n      nextProps.selectedWeekday !== this.props.selectedWeekday;\n  }\n\n  render() {\n    const { minDate, maxDate, selectDay, showBarChart, setMonthInsights, setWeekdayInsights,\n      selectedMonth, selectedDay, dayInsights, allDays, selectedWeekday, colors, currentWeekdays, dataArr } = this.props;\n    const selectedItem = selectedMonth || selectedWeekday || selectedDay;\n    let unit = '';\n    if (selectedMonth) {\n      unit = 'months';\n    } else if (selectedWeekday) {\n      unit = 'weeks';\n    } else {\n      unit = 'days';\n    }\n    const previousItem = selectedMonth ? selectedMonth-1 : moment(selectedItem).subtract(1, unit);\n    const nextItem = selectedMonth ? parseInt(selectedMonth)+1 : moment(selectedItem).add(1, unit);\n    const showPreviousArrow = selectedMonth ? moment(previousItem, 'M').isAfter(minDate.startOf('year')) : previousItem.isAfter(minDate.startOf('year'));\n    const showNextArrow = selectedMonth ? true : nextItem.isBefore(maxDate.endOf('year'));\n    const pickDay = day => {\n      setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: [],\n        selectedMonth: null\n      });\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const color = colors.find(color => color.day === moment(day).format('DD-MM-YYYY'));\n      const value = color && d3.color(color.value);\n      selectDay({ day, color: value });\n      showBarChart(true);\n    };\n    const pickMonth = month => {\n      selectDay(null);\n      setWeekdayInsights({\n        selectedWeekday: null,\n        daysOfWeekday: [],\n        weekdayInsights: []\n      });\n      const monthInsights = getMonthInsights(month.toString(), dayInsights, allDays);\n      setMonthInsights({\n        selectedMonth: monthInsights.selectedMonth,\n        daysOfMonth: monthInsights.daysOfMonth,\n        monthInsights: monthInsights.monthInsights\n      });\n      showBarChart(true);\n    };\n    const pickWeekday = weekday => {\n      selectDay(null);\n      setMonthInsights({\n        monthInsights: [],\n        daysOfMonth: [],\n        selectedMonth: null\n      });\n      const weekdayInsights = getWeekdayInsights(weekday, dayInsights, allDays, currentWeekdays, dataArr);\n      setWeekdayInsights({\n        weekdayInsights: weekdayInsights.weekdayInsights,\n        daysOfWeekday: weekdayInsights.daysOfWeekday,\n        selectedWeekday: weekdayInsights.selectedWeekday\n      });\n      showBarChart(true);\n    };\n    let string = '';\n    if (selectedMonth) {\n      string = moment(selectedMonth, 'M').format('MMMM');\n    } else if (selectedWeekday) {\n      string = `${moment(selectedWeekday, 'ddd').format('dddd')}s`;\n    } else {\n      string = moment(selectedItem).format('dddd, MMMM DD YYYY');\n    }\n\n    return (\n      <div className='year-label dayTitle'\n           tabIndex={0}\n           onKeyDown={ev => {\n             if (ev) {\n               if (ev.key === 'ArrowLeft') {\n                 if (selectedDay) {\n                   pickDay(moment(selectedItem).add(-1, unit));\n                 } else if (selectedMonth) {\n                   pickMonth(parseInt(selectedItem) - 1);\n                 } else if (selectedWeekday) {\n                   const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n                   pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday - 1)).format('ddd'));\n                 }\n               }\n               if (ev.key === 'ArrowRight') {\n                 if (selectedDay) {\n                   pickDay(moment(selectedItem).add(1, unit));\n                 } else if (selectedMonth) {\n                   pickMonth(parseInt(selectedItem) + 1);\n                 } else if (selectedWeekday) {\n                   const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n                   pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + 1)).format('ddd'));\n                 }\n               }\n             }\n      }}>\n        <i\n          className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n          onClick={() => {\n            if (showPreviousArrow) {\n              if (selectedDay) {\n                pickDay(moment(selectedItem).add(-1, unit));\n              } else if (selectedMonth) {\n                pickMonth(parseInt(selectedItem) - 1);\n              } else if (selectedWeekday) {\n                const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n                pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday - 1)).format('ddd'));\n              }\n            }}\n          }\n        />\n        { string }\n        <i\n          className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n          onClick={() => {\n            if (showPreviousArrow) {\n              if (selectedDay) {\n                pickDay(moment(selectedItem).add(+1, unit));\n              } else if (selectedMonth) {\n                pickMonth(parseInt(selectedItem) + 1);\n              } else if (selectedWeekday) {\n                const isoWeekday = moment(selectedItem, 'ddd').isoWeekday();\n                pickWeekday((moment(selectedItem, 'ddd').isoWeekday(isoWeekday + 1)).format('ddd'));\n              }\n            }}\n          }\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  selectedDay: state.calendar.selectedDay,\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dayInsights: state.app.dayInsights,\n  allDays: state.app.allDays,\n  colors: state.calendar.colors,\n  currentWeekdays: state.calendar.currentWeekdays,\n  dataArr: state.app.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectDay: val => dispatch(selectDay(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayLabel);\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass XAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const xAxis = d3.axisBottom(this.props.xScale)\n      .ticks(24)\n      .tickFormat(d3.timeFormat('%H'));\n    d3.select(this.refs.xAxis)\n      .transition()\n      .call(xAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-x'\n         transform={this.props.transform}\n         ref='xAxis'\n         fill='none'\n         fontSize={10}\n         textAnchor='middle'\n      />\n    )\n  }\n}\n\nexport default XAxis;\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nclass YAxis extends React.PureComponent {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const yAxis = d3.axisLeft(this.props.yScale)\n      .ticks(this.props.nrOfTicks)\n      .tickFormat(d3.format('d'));\n    d3.select(this.refs.yAxis)\n      .transition()\n      .call(yAxis);\n  };\n\n  render() {\n    return (\n      <g className='axis axis-y' ref='yAxis' />\n    )\n  }\n}\n\nexport default YAxis;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { openModal } from '../../reducers/barChart';\n\nclass Bars extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverIndex: -1\n    }\n  }\n\n  componentDidMount() {\n    this.renderBars();\n  }\n\n  componentDidUpdate() {\n    this.renderBars();\n  }\n\n  renderBars = () => {\n    const parent = d3.select(this.refs.bars).datum(this.props.plotData);\n    const current = parent.selectAll('.bar').data(d => d);\n    const openModal = d => {\n      this.props.openModal({ data: d, arr: this.props.dayInsights[this.props.selectedDay] });\n    };\n\n    current.interrupt();\n\n    const color = this.props.color; // || '#6595ec';\n\n    current.transition()\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    const enter = current.enter().append('g').classed('bar', true);\n    enter\n      .attr('fill', (d, i) => i === this.state.hoverIndex ? d3.rgb(color).darker() : color);\n\n    enter\n      .append('rect')\n      .attr('height', 0)\n      .attr('transform', d => `translate(${d.x}, ${this.props.plotHeight})`)\n      .attr('id', (d, i) => `bar-${i}`)\n      .on('mouseover', (d, i) => { this.setState({ hoverIndex: i }) })\n      .on('mouseleave', () => this.setState({ hoverIndex: -1 }))\n      .on('click', d => openModal(d));\n\n    const exit = current.exit().classed('bar', false);\n    exit\n      .attr('fill', color)\n      .attr('opacity', 0.8)\n      .transition()\n      .attr('opacity', 0)\n      .remove();\n\n    current\n      .merge(enter)\n      .select('rect')\n      .attr('width', d => d.width)\n      .attr('data-tip', d => `${d.occurrences} occurrences<br>between ${moment(d.data, 'hh').format('H:mm')} - ${moment(parseInt(d.data)+1, 'hh').format('H:mm')}`)\n      .attr('data-for', 'rectTooltip')\n      .classed('hovered-bar', (d, i) => i === this.state.hoverIndex)\n      .transition()\n      .duration(1000)\n      .attr('transform', d => `translate(${d.x}, ${d.y})`)\n      .attr('height', d => d.height);\n  };\n\n  render() {\n    return (\n      <g ref='bars' />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bars);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nclass AreaChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cursorPointer: -1\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedDay !== this.props.selectedDay ||\n      nextProps.plotWidth !== this.props.plotWidth;\n  }\n\n  componentDidMount() {\n    this.renderLine();\n  }\n\n  componentDidUpdate() {\n    this.renderLine();\n  }\n\n  renderLine = () => {\n    let line = d3.selectAll('.line');\n    if (line.node()) {\n      const totalLength = line.node().getTotalLength();\n      line\n        .attr('stroke-dasharray', totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .attr('stroke-width', 6)\n        .attr('stroke', '#7888BF')\n        .transition()\n        .duration(1000)\n        .attr('stroke-width', 0)\n        .attr('stroke-dashoffset', 0);\n    }\n    let area = d3.selectAll('.area');\n    area\n      .attr('transform', 'translate(0,300)')\n      .transition()\n      .delay(500)\n      .duration(1000)\n      .attr('transform', 'translate(0,0)');\n  };\n\n\n  handleMouseMove = (mouseX, mouseY) => {\n    const { xScale, yScale, plotHeight, color, plotData } = this.props;\n\n    d3.select('.mouse-line')\n      .attr('d', function() {\n        let d = 'M' + mouseX + ',' + (plotHeight - 50);\n        d += ' ' + mouseX + ',' + 0;\n        return d;\n      });\n\n    const lines = document.getElementsByClassName('line');\n    let pos;\n\n    const formatTime = d3.timeFormat('%H');\n    const parseTime = d3.timeParse('%H');\n\n    d3.selectAll('.mouse-per-line')\n      .attr('transform', function(d, i) {\n        let beginning = 0,\n          end = lines && lines[i].getTotalLength(),\n          target = null;\n\n        while (end){\n          target = Math.floor((beginning + end) / 2);\n          pos = lines[i].getPointAtLength(target);\n          if ((target === end || target === beginning) && pos.x !== mouseX) {\n            break;\n          }\n          if (pos.x > mouseX)      end = target;\n          else if (pos.x < mouseX) beginning = target;\n          else break; //position found\n        }\n\n        d3.select(this).select('text')\n          .text(Number(yScale.invert(pos.y)).toFixed(2));\n\n        const x = xScale.invert(pos.x);\n\n        d3.selectAll('.bar')\n          .attr('fill', d =>  formatTime(parseTime(d.data)) === formatTime(x) ? d3.rgb(color).darker() : color);\n\n        return 'translate(' + mouseX + ',' + pos.y +')';\n      });\n\n    d3.selectAll('.mouse-per-bar')\n      .attr('transform', function(d, i) {\n\n        const bars = plotData.map(i => moment(i.data, 'H').format('HH'));\n\n        let beginning = 0,\n          end = lines && lines[i].getTotalLength(),\n          target = null;\n\n        while (end){\n          target = Math.floor((beginning + end) / 2);\n          pos = lines[i].getPointAtLength(target);\n          if ((target === end || target === beginning) && pos.x !== mouseX) {\n            break;\n          }\n          if (pos.x > mouseX)      end = target;\n          else if (pos.x < mouseX) beginning = target;\n          else break; //position found\n        }\n\n        const x = xScale.invert(pos.x);\n\n        if (bars.indexOf(formatTime(x)) > -1) {\n          const item = plotData.find(i => moment(i.data, 'H').format('HH') === formatTime(x));\n          // let repeat = () => {\n          //   d3.select(`#bar-${item.id}`)\n          //     .transition()\n          //     .duration(500)\n          //     .ease(d3.easeLinear)\n          //     .attr('width', item.width * 1.2)\n          //     .transition()\n          //     .duration(500)\n          //     .ease(d3.easeLinear)\n          //     .attr('width', item.width)\n          //     .attr('height', item.height)\n          // };\n          d3.select('.mouse-over-effects')\n            .style('cursor', 'pointer');\n          d3.select('.bar-text')\n            .style('opacity', 1)\n            .text(item.occurrences);\n          d3.select('.bar-circle')\n            .style('opacity', 1);\n          return 'translate(' + mouseX + ',' + `${item.y - 3.8}` +')'\n        }\n        d3.select('.mouse-over-effects')\n          .style('cursor', 'auto');\n        d3.select('.bar-text')\n          .style('opacity', 0);\n        d3.select('.bar-circle')\n          .style('opacity', 0);\n      });\n  };\n\n  render() {\n    const { xScale, plotWidth, plotHeight, margin, yScale } = this.props;\n\n    const weekObj = this.props.weekInsights;\n\n    const parseTime = d3.timeParse('%H');\n\n    // define the area\n    const area = d3.area()\n      .x(d => xScale(parseTime(d)))\n      .y0(plotHeight - margin.top - margin.bottom)\n      .y1(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    const valueline = d3.line()\n      .x((d, i) => xScale(parseTime(i)))\n      .y(d => yScale(weekObj[d]))\n      .curve(d3.curveMonotoneX);\n\n    const setLineOpacity = val => {\n      d3.select('.mouse-line')\n        .style('opacity', val);\n      d3.selectAll('.mouse-per-line .line-circle')\n        .style('opacity', val);\n      d3.selectAll('.mouse-per-line .line-text')\n        .style('opacity', val);\n    };\n\n    return (\n      <svg className='areaChart' ref='areaChart'>\n        <defs>\n          <linearGradient id='grad' x1='0%' y1='100%' x2='0%' y2='0%' spreadMethod='pad'>\n            <stop offset='10%' stopColor='#fff' stopOpacity={.4}/>\n            <stop offset='80%' stopColor='#7888BF' stopOpacity={.8}/>\n          </linearGradient>\n        </defs>\n        <path className='area'\n              fill='url(#grad)'\n              d={area(Object.keys(weekObj))}\n        />\n        <path className='line shadow'\n              d={valueline(Object.keys(weekObj))}\n        />\n        <g className='mouse-over-effects'>\n          <path\n            className='mouse-line'\n            stroke='#000'\n            strokeWidth={1}\n            opacity={0}\n          >\n          </path>\n          <g\n            className='mouse-per-line'\n          >\n            <circle\n              className='line-circle'\n              r={5}\n              fill='#7888BF'\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='line-text'\n              transform='translate(10,3)'\n              fontSize={14}\n            />\n          </g>\n          <g className='mouse-per-bar'>\n            <circle\n              className='bar-circle'\n              r={5}\n              fill={d3.rgb(this.props.color).darker()}\n              strokeWidth={1}\n              stroke='#000'\n              opacity={0}\n            />\n            <text\n              className='bar-text'\n              transform='translate(-17,3)'\n              fontSize={14}\n              opacity={0}\n            />\n          </g>\n          <rect\n            width={plotWidth + 40}\n            height={plotHeight}\n            transform='translate(0,-20)'\n            fill='none'\n            pointerEvents='all'\n            onMouseLeave={() => setLineOpacity('0')}\n            onMouseOver={() => setLineOpacity('1')}\n            onMouseMove={ev => this.handleMouseMove(ev.nativeEvent.offsetX - 40, ev.nativeEvent.offsetY) }\n          >\n          </rect>\n        </g>\n      </svg>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay),\n  data: state.app.data\n});\n\n\nexport default connect(mapStateToProps)(AreaChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './Modal.scss';\n\nimport { openModal } from \"../../reducers/barChart\";\n\nconst Modal = ({ handleClose, show, children, modalData, openModal }) => {\n  const hideModal = () => {\n    openModal(null);\n  };\n\n  return (\n    <div className={classNames('modal', 'modal-animation', {'display-block': show}, {'display-none': !show})} onClick={hideModal}>\n      <section className='modal-main' onClick={ev => ev.stopPropagation()}>\n        <i className='fas fa-times' onClick={handleClose} />\n        {children}\n      </section>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  modalData: state.barChart.modalData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview,\n  onReset\n} from '../../reducers/barChart';\nimport {connect} from 'react-redux';\n\nconst Footer = props => {\n  const onCheckboxChange = () => {\n    props.showWeekOverview(!props.isWeekOverviewChecked);\n  };\n  const onMonthCheckboxChange = () => {\n    props.showMonthOverview(!props.isMonthOverviewChecked);\n  };\n  const onWeekdayCheckboxChange = () => {\n    props.showWeekdayOverview(!props.isWeekdayOverviewChecked);\n  };\n  const onRemoveClick = () => {\n    props.onReset();\n  };\n\n  return (\n    <div className='footer year-label'>\n      <div className='checkboxes'>\n           <span className={classNames('checkbox', {'bold': props.isWeekOverviewChecked})} onClick={onCheckboxChange}>\n             Week overview <input type='checkbox' checked={props.isWeekOverviewChecked} defaultChecked={false} onChange={onCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isMonthOverviewChecked})} onClick={onMonthCheckboxChange}>\n             Month overview <input type='checkbox' checked={props.isMonthOverviewChecked} defaultChecked={false} onChange={onMonthCheckboxChange} />\n           </span>\n        <span className={classNames('checkbox', {'bold': props.isWeekdayOverviewChecked})} onClick={onWeekdayCheckboxChange}>\n             Weekdays <input type='checkbox' checked={props.isWeekdayOverviewChecked} defaultChecked={false} onChange={onWeekdayCheckboxChange} />\n           </span>\n      </div>\n      <button onClick={onRemoveClick}>\n        Remove charts\n      </button>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  onReset: val => dispatch(onReset(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport {getCurrentMonthInsights, getCurrentWeekInsights, getWeekdayInsights} from '../../helpers/parser';\nimport XAxis from './XAxis';\nimport YAxis from './YAxis';\nimport Bars from './Bars';\nimport AreaChart from './AreaChart';\nimport Modal from '../widget/Modal';\nimport {\n  openModal,\n  showBarChart,\n  showMonthOverview,\n  showWeekdayOverview,\n  showWeekOverview\n} from '../../reducers/barChart';\nimport ReactTooltip from 'react-tooltip';\nimport Footer from './Footer';\nimport {getAverageColor} from \"../../helpers/colors\";\nimport clock from './clock.svg';\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: document.getElementById('card').clientWidth - props.margin.left - props.margin.right\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this.resize());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.resize());\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  resize = () => {\n    this.setState({\n      width: document.getElementById('card').clientWidth - this.props.margin.left - this.props.margin.right\n    });\n  };\n\n  updateScale = (props, data) => {\n    const xScale = d3.scaleTime();\n    const yScale = d3.scaleLinear().nice();\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n\n    const checkedBox = this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked;\n\n    const max = currentWeekInsights ?\n      Math.ceil(Math.max(d3.max(Object.values(currentWeekInsights)), d3.max(Object.values(data)))) :\n      d3.max(Object.values(data));\n\n    const yDomain = [0, checkedBox ? max + max / 20 : max];\n\n    const parseTime = d3.timeParse('%H:%M');\n    const midnight = parseTime('00:00');\n\n    xScale\n      .domain([midnight, d3.timeDay.offset(midnight, 1)])\n      .range([0, this.state.width - props.margin.right]);\n\n    yScale\n      .domain(yDomain)\n      .range([props.height - props.margin.top - props.margin.bottom, 0]);\n\n    return {xScale, yScale};\n  };\n\n  updatePlotSize = props => {\n    const plotWidth = this.state.width - (props.margin.left + props.margin.right);\n    const plotHeight = props.height;\n    return {plotWidth, plotHeight}\n  };\n\n  hideModal = () => {\n    this.props.openModal(null);\n  };\n\n  render() {\n    let data = [];\n    if (!!this.props.monthInsights.length) {\n      data = this.props.daysOfMonth;\n    } else if (!!this.props.weekdayInsights.length) {\n      data = this.props.daysOfWeekday;\n    } else {\n      data = this.props.data;\n    }\n    const { xScale, yScale } =  this.updateScale(this.props, data);\n    const { plotWidth, plotHeight } = this.updatePlotSize(this.props);\n\n    const max = d3.max(Object.values(data));\n    const nrOfTicks = max < 10 ? max : (max > 20 ? max / 4 : max / 2);\n\n    const parseTime = d3.timeParse('%H');\n\n    const metaData = {\n      xScale,\n      yScale,\n      plotWidth,\n      plotHeight,\n      nrOfTicks\n    };\n    const plotData = {\n      plotData: Object.keys(data).map((item, i) => ({\n        id: i,\n        data: item,\n        x: xScale(parseTime(item)),\n        y: yScale(data[item]),\n        width: ((this.state.width - this.props.margin.right) / 24) * 0.8,\n        height: plotHeight - yScale(data[item]) - this.props.margin.top - this.props.margin.bottom,\n        occurrences: data[item]\n      }))\n    };\n\n    const transform = `translate(${this.props.margin.left},${this.props.margin.top})`;\n\n    const currentWeekInsights = this.props.isWeekOverviewChecked && getCurrentWeekInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentMonthInsights = this.props.isMonthOverviewChecked && getCurrentMonthInsights(this.props.dataArr, this.props.selectedDay, this.props.dayInsights);\n    const currentWeekdayInsights = this.props.isWeekdayOverviewChecked && getWeekdayInsights(moment(this.props.selectedDay).format('ddd'), this.props.dayInsights, this.props.allDays, this.props.currentWeekdays, this.props.dataArr);\n\n    let insights;\n    if (this.props.isWeekOverviewChecked) {\n      insights = currentWeekInsights;\n    }\n    if (this.props.isMonthOverviewChecked) {\n      insights = currentMonthInsights;\n    }\n    if (this.props.isWeekdayOverviewChecked) {\n      insights = currentWeekdayInsights.weekdayObj;\n    }\n\n    const showAreaChart = this.props.isWeekOverviewChecked || this.props.isMonthOverviewChecked || this.props.isWeekdayOverviewChecked;\n\n    const color = this.props.color || getAverageColor(this.props.selectedMonth, this.props.selectedWeekday, this.props.colors);\n\n    const d = this.props.modalData;\n\n    const convertRange = (val, r1, r2 )=> (val - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n\n    return (\n      <div>\n        <svg width='100%' height={this.props.height} ref='barChart'>\n          <g transform={transform} width={plotWidth} height={plotHeight}>\n            <XAxis {...metaData} transform={`translate(0,${plotHeight-50})`}/>\n            <YAxis {...metaData} />\n            <Bars {...metaData} {...plotData} color={color} />\n            { showAreaChart && <AreaChart {...metaData} {...plotData} margin={this.props.margin} weekInsights={insights} color={color} />}\n          </g>\n        </svg>\n        <Footer />\n        <ReactTooltip id='rectTooltip' multiline class='tooltip'/>\n        <Modal show={d} handleClose={this.hideModal}>\n          <div className='modal-title'>{moment(this.props.selectedDay,'YYYY-MM-DD').format('dddd, MMMM DD YYYY')}</div>\n          {d && <div>between {moment(d.data, 'hh').format('H:mm')} - {moment(parseInt(d.data)+1, 'hh').format('H:mm')}</div>}\n          <div className='clock-icon'>\n            <img src={clock} alt='' width={50} height={50} />\n          </div>\n          <div className='time-container'>\n            {\n              Object.keys(this.props.timeArray).map(key =>\n                <span className='time' style={{ fontSize: convertRange(this.props.timeArray[key], [1,20], [15,50]) }}>\n                  {key}\n                </span>\n              )\n            }\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  daysOfMonth: state.app.daysOfMonth,\n  daysOfWeekday: state.app.daysOfWeekday,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  selectedMonth: state.app.selectedMonth,\n  selectedWeekday: state.app.selectedWeekday,\n  dataArr: state.app.data,\n  allDays: state.app.allDays,\n  currentWeekdays: state.calendar.currentWeekdays,\n  isWeekOverviewChecked: state.barChart.showWeekOverview,\n  isMonthOverviewChecked: state.barChart.showMonthOverview,\n  isWeekdayOverviewChecked: state.barChart.showWeekdayOverview,\n  color: state.calendar.color,\n  colors: state.calendar.colors,\n  modalData: state.barChart.modalData,\n  timeArray: state.barChart.timeArray\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BarChart);\n","import moment from 'moment';\nimport * as d3 from 'd3';\n\nexport const getAverageColor = (selectedMonth, selectedWeekday, colors) => {\n  let rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  const filteredColors = selectedMonth\n    ? colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('M') === selectedMonth)\n    : colors.filter(color => moment(color.day, 'DD-MM-YYYY').format('ddd') === selectedWeekday);\n\n  filteredColors.forEach(color => {\n    rgb.r += color.value.r;\n    rgb.g += color.value.g;\n    rgb.b += color.value.b;\n  });\n\n  return d3.rgb(rgb.r / filteredColors.length, rgb.g / filteredColors.length, rgb.b / filteredColors.length);\n};\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Card from '../widget/Card';\nimport Section from '../widget/Section';\n\nimport DayLabel from './DayLabel';\nimport BarChart from './BarChart';\n\nimport './BarChart.scss';\n\nconst Container = props => {\n  const showBarChart = !!props.dayInsights[props.selectedDay] ||\n    !!props.monthInsights.length ||\n    !!props.weekdayInsights.length;\n\n  const barChartProps = {\n    data: props.data,\n    margin: props.margin,\n    height: props.height\n  };\n\n  return (\n    <Section title='Day overview'>\n      <Card>\n        <DayLabel selectedDay={props.selectedDay} />\n        <div className='barChart'>\n          {\n            showBarChart\n              ? <BarChart {...barChartProps} />\n              : <div className='emptyString'>No data recorded</div>\n          }\n        </div>\n      </Card>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  dayInsights: state.app.dayInsights,\n  monthInsights: state.app.monthInsights,\n  weekdayInsights: state.app.weekdayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD')\n});\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Section from '../widget/Section';\n\nimport { setData, uploadFile } from '../../reducers/app';\nimport { showCalendar } from '../../reducers/calendar';\n\nconst DragAndDrop = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n\n  return (\n    <Section title='Upload file'>\n      <Dropzone\n        accept='text/csv'\n        onDrop={onDrop}\n      >\n        {({getRootProps, getInputProps, isDragActive}) => {\n          return (\n            <div\n              {...getRootProps()}\n              className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n            >\n              <input {...getInputProps()} />\n              {\n                !!files.length\n                  ? <span className='file-name'>\n                            <i className='fa fa-remove' />\n                    {files}\n                          </span>\n                  : <span className='upload-message'>\n                            <i className='fa fa-upload' />\n                              Drag & Drop your file or <u>Browse</u>\n                          </span>\n              }\n            </div>\n          )\n        }}\n      </Dropzone>\n    </Section>\n  )\n};\n\nconst mapStateToProps = state => ({\n  files: state.app.files\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  setData: val => dispatch(setData(val)),\n  showCalendar: val => dispatch(showCalendar(val))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDrop);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, setDatasetName, showSpinner, setMonthInsights, setWeekdayInsights } from '../reducers/app';\nimport { showCalendar, selectDay, saveColor } from '../reducers/calendar';\nimport { showBarChart, showWeekOverview, showMonthOverview, showWeekdayOverview, openModal } from '../reducers/barChart';\n\nimport Heatmap from './calendar/Heatmap';\nimport Container from './bar-chart/Container';\nimport DragAndDrop from './widget/DragAndDrop';\nimport Section from './widget/Section';\n\nimport 'react-dropdown/style.css';\nimport './App.scss';\nimport './Spinner.scss';\n\nimport dataset1 from '../data/itching_in_nose_tbc.csv';\nimport dataset2 from '../data/itch_tbc.csv';\nimport dataset3 from '../data/ptsd_filtered.csv';\nimport dataset4 from '../data/data.csv';\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\nconst App = props => {\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const renderHeatmap = dataset => {\n    d3.csv(dataset).then(data => {\n      props.setData(data);\n      props.showCalendar(true);\n    }).catch(err => {\n      throw err;\n    });\n  };\n  const removeCharts = () => {\n    props.showBarChart(false);\n    props.showCalendar(false);\n    props.setMonthInsights({\n      monthInsights: [],\n      daysOfMonth: []\n    });\n    props.setWeekdayInsights({\n      selectedWeekday: null,\n      daysOfWeekday: [],\n      weekdayInsights: []\n    });\n    props.selectDay(null);\n    props.showWeekOverview(false);\n    props.showMonthOverview(false);\n    props.showWeekdayOverview(false);\n    props.saveColor([]);\n  };\n  const onSelect = item => {\n    removeCharts();\n    const value = item.value;\n    props.setDatasetName(value);\n    props.showSpinner(true);\n    if (value === 'Dataset_1.csv') {\n      renderHeatmap(dataset1);\n    }\n    if (value === 'Dataset_2.csv') {\n      renderHeatmap(dataset2);\n    }\n    if (value === 'Dataset_3.csv') {\n      renderHeatmap(dataset3);\n    }\n    if (value === 'Dataset_4.csv') {\n      renderHeatmap(dataset4);\n    }\n  };\n\n  const showDropzone = true;\n\n  // whyDidYouUpdate(React);\n\n  const renderBarChart = () =>\n    <Container\n      data={props.allDays[props.selectedDay]}\n      margin={{ top: 20, right: 20, bottom: 30, left: 40 }}\n      height={300}\n    />;\n\n  const renderSpinner = () =>\n    <div className='spinner'>\n      <div className='double-bounce1' />\n      <div className='double-bounce2' />\n    </div>;\n\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        { showDropzone && <DragAndDrop /> }\n        <Section title='Select dataset'>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            value={props.datasetName}\n            onChange={onSelect}\n          />\n        </Section>\n        { props.isCalendarVisible && <Heatmap /> }\n        { props.isBarChartVisible && renderBarChart() }\n        { props.isSpinnerVisible && renderSpinner() }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  allDays: state.app.allDays,\n  data: state.app.data,\n  datasetName: state.app.datasetName,\n  dayInsights: state.app.dayInsights,\n  selectedDay: moment(state.calendar.selectedDay).format('YYYY-MM-DD'),\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isBarChartVisible: state.barChart.isBarChartVisible,\n  isEmptyContainerVisible: state.app.isEmptyContainerVisible,\n  isSpinnerVisible: state.app.isSpinnerVisible,\n  modalData: state.barChart.modalData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val)),\n  setDatasetName: val => dispatch(setDatasetName(val)),\n  showBarChart: val => dispatch(showBarChart(val)),\n  showSpinner: val => dispatch(showSpinner(val)),\n  setMonthInsights: val => dispatch(setMonthInsights(val)),\n  setWeekdayInsights: val => dispatch(setWeekdayInsights(val)),\n  selectDay: val => dispatch(selectDay(val)),\n  showWeekOverview: val => dispatch(showWeekOverview(val)),\n  showMonthOverview: val => dispatch(showMonthOverview(val)),\n  showWeekdayOverview: val => dispatch(showWeekdayOverview(val)),\n  saveColor: val => dispatch(saveColor(val)),\n  openModal: val => dispatch(openModal(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst actionSanitizer = (action) => (\n  action.type === 'FILE_DOWNLOAD_SUCCESS' && action.data ?\n    { ...action, data: '<<LONG_BLOB>>' } : action\n);\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({\n    actionSanitizer: actionSanitizer,\n    stateSanitizer: (state) => state.data ? { ...state, data: '<<LONG_BLOB>>' } : state\n  })\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}