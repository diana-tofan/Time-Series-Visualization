{"version":3,"sources":["data/data.csv","helpers/parser.js","reducers/app.js","reducers/calendar.js","reducers/radialChart.js","reducers/index.js","components/calendar/DayLabels.js","components/calendar/YearLabel.js","components/calendar/Day.js","components/calendar/Month.js","components/calendar/Year.js","components/calendar/Heatmap.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTimestamp","timeStamp","dateString","split","timeString","slice","moment","concat","toDate","parseTime","utc","format","parseDate","getDayInsights","data","newData","map","item","date","columns","time","push","reduce","r","a","Object","create","parseData","replace","timestamp","x","obj","initialState","minDate","maxDate","dayInsights","files","showTooltip","isCalendarVisible","yearIndex","cellSize","window","innerWidth","cellMargin","isRadialChartVisible","selectedDay","rootReducer","combineReducers","app","state","arguments","length","undefined","action","type","val","moments","keys","d","objectSpread","min","max","calendar","radialChart","weekArray","Array","apply","_","i","startOf","isoWeekday","DayLabels","react_default","createElement","className","day","key","connect","dispatch","changeYear","props","previousYear","subtract","nextYear","add","showPreviousArrow","showNextArrow","classNames","disabled","onClick","showRadialChart","selectDay","isCurrentDay","getDay","week","d3","month","count","Date","getFullYear","getMonth","find","setHours","filter","j","value","Math","toConsumableArray","fillColor","current-day","width","height","rx","ry","fill","y","data-tip","data-for","weeksInMonth","m","floor","offset","monthName","days","lastDay","endOf","firstDay","extraSpace","textAnchor","calendar_Day","target","size","months","range","parseInt","monthsArr","memo","index","hidden","calendar_Month","Heatmap","id","ref","calendar_DayLabels","calendar_YearLabel","calendar_Year","react_tooltip_dist_default","multiline","class","React","Component","uploadFile","showCalendar","setData","file","name","bytes","log","round","pow","bytesToSize","dist_es","accept","onDrop","acceptedFiles","rejectedFiles","forEach","reader","FileReader","onload","result","parsed","onabort","console","onerror","readAsBinaryString","_ref","getRootProps","getInputProps","isDragActive","assign","dropzone--isActive","dropzone--isDone","dist_default","options","placeholder","onChange","dataset1","then","catch","err","calendar_Heatmap","RadialChart_default","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+FAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gOCElCC,EAAiB,SAAAC,GACrB,IAAMC,EAAaD,EAAUE,MAAM,KAAK,GAClCC,EAAaH,EAAUE,MAAM,KAAK,GAAGE,MAAM,GAAI,GACrD,OAAOC,IAAM,GAAAC,OAAIL,EAAJ,KAAAK,OAAkBH,GAAc,mBAAmBI,UAG5DC,EAAY,SAAAR,GAChB,IAAMG,EAAaH,EAAUE,MAAM,KAAK,GAAGE,MAAM,GAAI,GACrD,OAAOC,IAAM,GAAAC,OAAIH,GAAc,UAAUM,MAAMC,OAAO,aAGlDC,EAAY,SAAAX,GAAS,OAAIK,IAAM,GAAAC,OAAIN,EAAUE,MAAM,KAAK,IAAM,eACjEQ,OAAO,cAAcR,MAAM,KAAK,IAqBtBU,EAAiB,SAAAC,GAC5B,IAAIC,EAAUD,EAAKE,IAAI,SAAAC,GAAI,MAAK,CAAEC,KAAMN,EAAUK,EAAKH,EAAKK,QAAQ,KAAMC,KAAMX,EAAUQ,EAAKH,EAAKK,QAAQ,QAE5G,OADAJ,EAAQM,KAAK,CAAEH,KAAMN,EAAUE,EAAKK,QAAQ,IAAKC,KAAMpB,EAAec,EAAKK,QAAQ,MACpEJ,EATUO,OAAO,SAAUC,EAAGC,GAG7C,OAFAD,EAAEC,EAAEN,MAAQK,EAAEC,EAAEN,OAAS,GACzBK,EAAEC,EAAEN,MAAMG,KAAKG,EAAEJ,MACVG,GACNE,OAAOC,OAAO,QAQFC,EApBG,SAAAb,GAChB,IACIC,EADgBD,EAAKE,IAAI,SAAAC,GAAI,OAAKA,EAAKH,EAAKK,QAAQ,IAAKS,QAAQ,SAAU,MACrDZ,IAAI,SAAAC,GAAI,MAAK,CAAEY,UAAWjB,EAAUK,MAC9DF,EAAQM,KAAK,CAAEQ,UAAWjB,EAAUE,EAAKK,QAAQ,MACjD,IAAMW,EAAIf,EAAQC,IAAI,SAAAC,GAAI,OAAIA,EAAKY,YACnC,OAAwBC,EAVUR,OAAO,SAASS,EAAKd,GAEvD,OADAc,EAAId,IAASc,EAAId,IAAS,GAAK,EACxBc,GACN,KCbGC,EAAe,CACnBlB,KAAM,GACNmB,QAAS,KACTC,QAAS,KACTC,YAAa,GACbC,MAAO,GACPC,aAAa,GCTTL,EAAe,CACnBM,mBAAmB,EACnBC,UAAW,EACXC,SAAUC,OAAOC,WAAa,IAC9BC,WAAYF,OAAOC,WAAa,KCJ5BV,EAAe,CACnBY,sBAAsB,EACtBC,YAAa,MCMAC,EANKC,YAAgB,CAClCC,IHSa,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBlB,EAAcqB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IAda,WAeX,IAAMxC,EAAOa,EAAU0B,EAAOE,KACxBC,EAAU/B,OAAOgC,KAAK3C,GAAME,IAAI,SAAA0C,GAAC,OAAIpD,IAAOoD,KAClD,OAAOjC,OAAAkC,EAAA,EAAAlC,CAAA,GACFwB,EADL,CAEEnC,OACAqB,YAAatB,EAAewC,EAAOE,KACnCtB,QAAS3B,IAAOsD,IAAIJ,GACpBtB,QAAS5B,IAAOuD,IAAIL,KAExB,IAvBgB,cAwBd,OAAO/B,OAAAkC,EAAA,EAAAlC,CAAA,GACFwB,EADL,CAEEb,MAAOiB,EAAOE,MAElB,QACE,OAAON,IG1BXa,SFGa,WAAkC,IAAjCb,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBlB,EAAcqB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IAZkB,gBAahB,OAAO7B,OAAAkC,EAAA,EAAAlC,CAAA,GACFwB,EADL,CAEEX,kBAAmBe,EAAOE,MAE9B,IAhBgB,cAiBd,OAAO9B,OAAAkC,EAAA,EAAAlC,CAAA,GACFwB,EADL,CAEEV,UAAWU,EAAMV,UAAYc,EAAOE,MAExC,QACE,OAAON,IEfXc,YDAa,WAAkC,IAAjCd,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBlB,EAAcqB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IAVsB,oBAWpB,OAAO7B,OAAAkC,EAAA,EAAAlC,CAAA,GACFwB,EADL,CAEEL,qBAAsBS,EAAOE,MAEjC,IAde,aAeb,OAAO9B,OAAAkC,EAAA,EAAAlC,CAAA,GACFwB,EADL,CAEEJ,YAAaQ,EAAOE,MAExB,QACE,OAAON,uHElBPe,EAAYC,MAAMC,MAAM,KAAMD,MAAM,IAAIjD,IAAI,SAAUmD,EAAGC,GAC7D,OAAO9D,IAAO8D,EAAG,KAAKC,QAAQ,QAAQC,WAAWF,EAAE,GAAGzD,OAAO,SAmBhD4D,EAhBG,kBAChBC,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,sBACbF,EAAAhD,EAAAiD,cAAA,YAEIT,EAAUhD,IAAI,SAAA2D,GAAG,OACfH,EAAAhD,EAAAiD,cAAA,QACEG,IAAKD,EACLD,UAAU,aAETC,QCoBEE,cATS,SAAA5B,GAAK,MAAK,CAChChB,QAASgB,EAAMD,IAAIf,QACnBC,QAASe,EAAMD,IAAId,UAGM,SAAA4C,GAAQ,MAAK,CACtCC,WAAY,SAAAxB,GAAG,OAAIuB,EJLK,SAAAvB,GAAG,MAAK,CAAED,KA3BhB,cA2BmCC,OIKzBwB,CAAWxB,OAG1BsB,CA9BG,SAAAG,GAChB,IAAMC,EAAe3E,IAAO0E,EAAM/C,SAASiD,SAAS,EAAG,SAASvE,OAAO,QACjEwE,EAAW7E,IAAO0E,EAAM9C,SAASkD,IAAI,EAAG,SAASzE,OAAO,QACxD0E,EAAoBJ,GAAgBD,EAAM/C,QAAQtB,OAAO,QACzD2E,EAAgBH,GAAYH,EAAM9C,QAAQvB,OAAO,QAEvD,OACE6D,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,aACbF,EAAAhD,EAAAiD,cAAA,KACEC,UAAWa,IAAW,sBAAuB,CAACC,UAAaH,IAC3DI,QAAS,kBAAMJ,GAAqBL,EAAMD,YAAY,MAEtDC,EAAM/C,QAAQtB,OAAO,QACvB6D,EAAAhD,EAAAiD,cAAA,KACEC,UAAWa,IAAW,uBAAwB,CAACC,UAAaF,IAC5DG,QAAS,kBAAMH,GAAiBN,EAAMD,WAAW,iBC2C1CF,cAXS,SAAA5B,GAAK,MAAK,CAChCnC,KAAMmC,EAAMD,IAAIlC,KAChB0B,SAAUS,EAAMa,SAAStB,SACzBG,WAAYM,EAAMa,SAASnB,aAGF,SAAAmC,GAAQ,MAAK,CACtCY,gBAAiB,SAAAnC,GAAG,OAAIuB,EJnCK,SAAAvB,GAAG,MAAK,CAAED,KAzBf,oBAyBwCC,OImC/BmC,CAAgBnC,KACjDoC,UAAW,SAAApC,GAAG,OAAIuB,EJnCK,SAAAvB,GAAG,MAAK,CAAED,KAzBhB,aAyBkCC,OImCxBoC,CAAUpC,OAGxBsB,CAzDH,SAAAG,GACV,IAAMrC,EAAaqC,EAAMrC,WACvBH,EAAWwC,EAAMxC,SACbkB,EAAIsB,EAAML,IAEZiB,GAAe,EACftF,IAAOoD,GAAG/C,OAAO,cAAgBL,MAASK,OAAO,cACnDiF,GAAe,GAGjB,IAGmBrC,EAAKM,EAAKD,EAHvBe,EAAM,SAAAjB,GAAC,OAAKA,EAAEmC,SAAW,GAAK,GAClCC,EAAOC,IAAc,MAIjBC,EAAQhB,EAAMgB,MAOdC,EALOF,IAAYC,EAAO,IAAIE,KAAKF,EAAMG,cAAeH,EAAMI,WAAW,EAAG,IAC/DpF,IAAI,SAAA0C,GAAC,OACtBjC,OAAOgC,KAAKuB,EAAMlE,MAAMuF,KAAK,SAAAzB,GAAG,OAC9B,IAAIsB,KAAKtB,GAAK0B,SAAS,EAAE,EAAE,EAAE,KAAO5C,EAAE4C,SAAS,EAAE,EAAE,EAAE,OAEnCtF,IAAI,SAAAoD,GAAC,QAAMA,GAAKY,EAAMlE,KAAKsD,KAAImC,OAAO,SAAAC,GAAC,QAAMA,IAE7DvF,EAAOQ,OAAOgC,KAAKuB,EAAMlE,MAAMuF,KAAK,SAAAzB,GAAG,OAC3C,IAAIsB,KAAKtB,GAAK0B,SAAS,EAAE,EAAE,EAAE,KAAO5C,EAAE4C,SAAS,EAAE,EAAE,EAAE,KACjDG,IAAUzB,EAAMlE,KAAKG,KAbRsC,EAa2ByB,EAAMlE,KAAKG,GAbjC4C,EAawC6C,KAAK7C,IAALK,MAAAwC,KAAIjF,OAAAkF,EAAA,EAAAlF,CAAQwE,IAb/CrC,EAauD8C,KAAK9C,IAALM,MAAAwC,KAAIjF,OAAAkF,EAAA,EAAAlF,CAAQwE,KAb5C1C,EAAMK,IAAQC,EAAMD,GAAnC,IAA2C,KAc1EgD,EAAc5B,EAAMlE,KAAKG,GAAQ8E,IAAsBU,GAAS,UACtE,OACEjC,EAAAhD,EAAAiD,cAAA,QACEG,IAAKlB,EACLgB,UAAWa,IAAW,MAAO,CAACsB,cAAejB,IAC7CkB,MAAOtE,EACPuE,OAAQvE,EACRwE,GAAI,GACJC,GAAI,GACJC,KAAMN,EACNO,EAAIxC,EAAIjB,GAAKlB,EAAamC,EAAIjB,GAAKf,EAAcA,EACjDb,GAAKgE,EAAKpC,GAAKoC,EAAK,IAAII,KAAKxC,EAAEyC,cAAczC,EAAE0C,WAAW,KAAO5D,GAAcsD,EAAKpC,GAAKoC,EAAK,IAAII,KAAKxC,EAAEyC,cAAczC,EAAE0C,WAAW,KAAOzD,EAAcA,EACzJyE,WAAA,GAAA7G,OAAaD,IAAOoD,GAAG/C,OAAO,qBAA9B,eAAAJ,OAAgEyE,EAAMlE,KAAKG,IAAS,GACpFoG,WAAS,iBCQAxC,cALS,SAAA5B,GAAK,MAAK,CAChCT,SAAUS,EAAMa,SAAStB,SACzBG,WAAYM,EAAMa,SAASnB,aAGdkC,CAhDD,SAAAG,GACZ,IAAMgB,EAAQhB,EAAMgB,MAEdsB,EAAe,SAAAtB,GACnB,IAAMuB,EAAIxB,IAAayB,MAAMxB,GAC7B,OAAOD,IAAaA,IAAYyB,MAAMD,GAAIxB,IAAa0B,OAAOF,EAAE,IAAIpE,QAGhER,EAAaqC,EAAMrC,WACvBH,EAAWwC,EAAMxC,SAEbkF,EAAY3B,IAAc,MAE1B4B,EAAO5B,IAAYC,EAAO,IAAIE,KAAKF,EAAMG,cAAeH,EAAMI,WAAW,EAAG,IAC5EwB,EAAUtH,IAAO0F,GAAO6B,MAAM,SAASlH,OAAO,OAC9CmH,EAAWxH,IAAO0F,GAAOZ,IAAI,EAAG,UAAUf,QAAQ,SAAS1D,OAAO,OACpEoH,EAAa,EAKjB,OAJiB,QAAZH,GAAkC,QAAbE,GAAoC,QAAZF,GAAkC,QAAbE,KACrEC,GAAc,IAIdvD,EAAAhD,EAAAiD,cAAA,OACEC,UAAU,QACVqC,OAAqB,EAAXvE,EAA8B,EAAbG,EAAkB,GAC7CmE,MAAQtE,EAAW8E,EAAatB,GAAWrD,GAAc2E,EAAatB,GAAS,GAAM+B,EACrFnD,IAAKoB,GAELxB,EAAAhD,EAAAiD,cAAA,SACED,EAAAhD,EAAAiD,cAAA,QACEC,UAAU,aACVyC,EAAe,EAAX3E,EAA8B,EAAbG,EAAkB,GACvCb,GAAKU,EAAW8E,EAAatB,GAAWrD,GAAc2E,EAAatB,GAAS,IAAO,EACnFgC,WAAW,UAETN,EAAU1B,IAEZ2B,EAAK3G,IAAI,SAAA0C,GAAC,OAAIc,EAAAhD,EAAAiD,cAACwD,EAAD,CAAKtD,IAAKjB,EAAGsC,MAAOA,EAAOpB,IAAKlB,UCIzCmB,cANS,SAAA5B,GAAK,MAAK,CAChChB,QAASgB,EAAMD,IAAIf,QACnBC,QAASe,EAAMD,IAAId,QACnBK,UAAWU,EAAMa,SAASvB,YAGbsC,CAzCF,SAAAG,GACX,IAKekD,EAAQC,EALjBlG,EAAU+C,EAAM/C,QAAQtB,OAAO,cAC/BuB,EAAU8C,EAAM9C,QAAQvB,OAAO,cAE/ByH,EAASrC,IAAasC,MAAM,IAAInC,KAAKoC,SAAQ,GAAA/H,OAAI0B,EAAQ9B,MAAM,KAAK,KAAO,EAAG,GAClF,IAAI+F,KAAKoC,SAAQ,GAAA/H,OAAI2B,EAAQ/B,MAAM,KAAK,KAAO,GAAI,KAQ/CoI,GAPSL,EAOSE,EAPDD,EAOSC,EAAOjF,OAAS,GANvC+E,EAAO5G,OAAO,SAACkH,EAAM/B,EAAOgC,GAGjC,OAFIA,GAASP,EAAO/E,OAASgF,KAAU,GAAe,IAAVM,GAAaD,EAAKnH,KAAK,IACnEmH,EAAKA,EAAKrF,OAAS,GAAG9B,KAAKoF,GACpB+B,GACN,CAAC,MAIN,OACEhE,EAAAhD,EAAAiD,cAAA,WAEI8D,EAAUvH,IAAI,SAACoH,EAAQhE,GAAT,OACZI,EAAAhD,EAAAiD,cAAA,OAAKC,UAAWa,IAAW,OAAQ,CAACmD,OAAUtE,IAAMY,EAAMzC,YAAaqC,IAAKR,GAExEgE,EAAOpH,IAAI,SAAAgF,GAAK,OACdxB,EAAAhD,EAAAiD,cAACkE,EAAD,CACE/D,IAAKoB,EACLA,MAAOA,YCVV4C,mLAZX,OACEpE,EAAAhD,EAAAiD,cAAA,OAAKoE,GAAG,WAAWC,IAAI,YACrBtE,EAAAhD,EAAAiD,cAACsE,EAAD,MACAvE,EAAAhD,EAAAiD,cAACuE,EAAD,MACAxE,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,UACbF,EAAAhD,EAAAiD,cAACwE,EAAD,OAEFzE,EAAAhD,EAAAiD,cAACyE,EAAA1H,EAAD,CAAcqH,GAAG,aAAaM,WAAS,EAACC,MAAM,qBAThCC,IAAMC,2DC2IbzE,cAdS,SAAA5B,GAAK,MAAK,CAChCnC,KAAMmC,EAAMD,IAAIlC,KAChBqB,YAAac,EAAMD,IAAIb,YACvBC,MAAOa,EAAMD,IAAIZ,MACjBE,kBAAmBW,EAAMa,SAASxB,kBAClCM,qBAAsBK,EAAMc,YAAYnB,uBAGf,SAAAkC,GAAQ,MAAK,CACtCyE,WAAY,SAAAhG,GAAG,OAAIuB,EVvGK,SAAAvB,GAAG,MAAK,CAAED,KAlChB,cAkCmCC,OUuGzBgG,CAAWhG,KACvCiG,aAAc,SAAAjG,GAAG,OAAIuB,ETnHK,SAAAvB,GAAG,MAAK,CAAED,KA3BhB,gBA2BqCC,OSmH3BiG,CAAajG,KAC3CkG,QAAS,SAAAlG,GAAG,OAAIuB,EV1GK,SAAAvB,GAAG,MAAK,CAAED,KAlChB,WAkCgCC,OU0GtBkG,CAAQlG,OAGpBsB,CAhIH,SAAAG,GACV,IAuBM5C,EAAQ4C,EAAM5C,MAAMpB,IAAI,SAAC0I,EAAMtF,GAAP,OAC5BI,EAAAhD,EAAAiD,cAAA,QAAMG,IAAKR,GACNI,EAAAhD,EAAAiD,cAAA,KAAGG,IAAK8E,EAAKC,MACVD,EAAKC,MAERnF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,aAZF,SAAAkF,GAElB,GAAc,IAAVA,EAAa,MAAO,SACxB,IAAMxF,EAAIkE,SAAS5B,KAAKc,MAAMd,KAAKmD,IAAID,GAASlD,KAAKmD,IAAI,QACzD,OAAOnD,KAAKoD,MAAMF,EAAQlD,KAAKqD,IAAI,KAAM3F,GAAI,GAAK,IAHpC,CAAC,QAAS,KAAM,KAAM,KAAM,MAGoBA,GAStD4F,CAAYN,EAAKvB,UAgB3B,OACE3D,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,OACbF,EAAAhD,EAAAiD,cAAA,UAAQC,UAAU,UAChBF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,SAAf,mCAEFF,EAAAhD,EAAAiD,cAAA,OAAKC,UAAU,WACbF,EAAAhD,EAAAiD,cAAA,eACED,EAAAhD,EAAAiD,cAAA,wBACAD,EAAAhD,EAAAiD,cAACwF,EAAA,EAAD,CACEC,OAAO,WACPC,OAvDK,SAACC,EAAeC,GAC7BrF,EAAMuE,WAAWa,GACjBA,EAAcE,QAAQ,SAAAZ,GACpB,IAAMa,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,IAAM3J,EAAOyJ,EAAOG,OACdC,EAAS5E,IAAYjF,GAC3BkE,EAAMyE,QAAQkB,GACd3F,EAAMwE,cAAa,IAErBe,EAAOK,QAAU,kBAAMC,QAAQhB,IAAI,6BACnCU,EAAOO,QAAU,kBAAMD,QAAQhB,IAAI,4BACnCU,EAAOQ,mBAAmBrB,OA6CnB,SAAAsB,GAAiD,IAA/CC,EAA+CD,EAA/CC,aAAcC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,aAC9B,OACE3G,EAAAhD,EAAAiD,cAAA,MAAAhD,OAAA2J,OAAA,GACMH,IADN,CAEEvG,UAAWa,IAAW,WAAY,CAAC8F,qBAAsBF,EAAcG,qBAAsBlJ,EAAMe,WAEnGqB,EAAAhD,EAAAiD,cAAA,QAAWyG,KAEP9I,EAAMe,OACJqB,EAAAhD,EAAAiD,cAAA,QAAMC,UAAU,aACdF,EAAAhD,EAAAiD,cAAA,KAAGC,UAAU,iBACdtC,GAEDoC,EAAAhD,EAAAiD,cAAA,QAAMC,UAAU,kBACdF,EAAAhD,EAAAiD,cAAA,KAAGC,UAAU,iBADf,4BAE6BF,EAAAhD,EAAAiD,cAAA,wBAQ7CD,EAAAhD,EAAAiD,cAAA,eACED,EAAAhD,EAAAiD,cAAA,2BACAD,EAAAhD,EAAAiD,cAAC8G,EAAA/J,EAAD,CACEkD,UAAU,WACV8G,QAnDM,CAAC,gBAAiB,gBAAiB,gBAAiB,iBAoD1DC,YAAY,YACZC,SApDO,SAAAzK,GACI,kBAAfA,EAAKwF,OACPV,IAAO4F,KAAUC,KAAK,SAAA9K,GACpBkE,EAAMyE,QAAQ3I,GACdkE,EAAMwE,cAAa,KAClBqC,MAAM,SAAAC,GACP,MAAMA,QAkDJ9G,EAAM1C,mBACNkC,EAAAhD,EAAAiD,cAAA,eACED,EAAAhD,EAAAiD,cAAA,6BACAD,EAAAhD,EAAAiD,cAACsH,EAAD,CACEjL,KAAMkE,EAAMlE,KACZqB,YAAa6C,EAAM7C,eAKvB6C,EAAMpC,sBACN4B,EAAAhD,EAAAiD,cAAA,eACED,EAAAhD,EAAAiD,cAAA,yBACAD,EAAAhD,EAAAiD,cAACuH,EAAAxK,EAAD,CACEoD,IAAKI,EAAMlE,YC/GLmL,QACW,cAA7BxJ,OAAOyJ,SAASC,UAEe,UAA7B1J,OAAOyJ,SAASC,UAEhB1J,OAAOyJ,SAASC,SAASC,MACvB,2DCRN,IAAMC,EAAQC,YACZxJ,EACAL,OAAO8J,8BAAgC9J,OAAO8J,gCAGhDC,IAASC,OACPjI,EAAAhD,EAAAiD,cAACiI,EAAA,EAAD,CAAUL,MAAOA,GACf7H,EAAAhD,EAAAiD,cAACkI,EAAD,OAEFC,SAASC,eAAe,SD8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpB,KAAK,SAAAqB,GACjCA,EAAaC","file":"static/js/main.c9017b55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","import moment from 'moment';\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss').toDate();\n};\n\nconst parseTime = timeStamp => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${timeString}`, 'HHmmss').utc().format(\"HH:mm:ss\");\n};\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')//.toDate()\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst countOccurrences = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nconst parseData = data => {\n  const cleanedData = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleanedData.map(item => ({ timestamp: parseDate(item) }));\n  newData.push({ timestamp: parseDate(data.columns[0]) });\n  const x = newData.map(item => item.timestamp);\n  return countOccurrences(x);\n};\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, Object.create(null));\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]]) }));\n  newData.push({ date: parseDate(data.columns[0]), time: parseTimestamp(data.columns[0]) });\n  return groupBy(newData);\n};\n\nexport default parseData;\n","import parseData, { getDayInsights } from '../helpers/parser';\nimport moment from 'moment';\n\nconst SET_DATA = 'SET_DATA';\nconst UPLOAD_FILE = 'UPLOAD_FILE';\n\nconst initialState = {\n  data: [],\n  minDate: null,\n  maxDate: null,\n  dayInsights: [],\n  files: [],\n  showTooltip: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATA:\n      const data = parseData(action.val);\n      const moments = Object.keys(data).map(d => moment(d));\n      return {\n        ...state,\n        data,\n        dayInsights: getDayInsights(action.val),\n        minDate: moment.min(moments),\n        maxDate: moment.max(moments)\n      };\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        files: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setData = val => ({ type: SET_DATA, val });\nexport const uploadFile = val => ({ type: UPLOAD_FILE, val });\n","const SHOW_CALENDAR = 'SHOW_CALENDAR';\nconst CHANGE_YEAR = 'CHANGE_YEAR';\n\nconst initialState = {\n  isCalendarVisible: false,\n  yearIndex: 0,\n  cellSize: window.innerWidth / 125,\n  cellMargin: window.innerWidth / 400\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_CALENDAR:\n      return {\n        ...state,\n        isCalendarVisible: action.val\n      };\n    case CHANGE_YEAR:\n      return {\n        ...state,\n        yearIndex: state.yearIndex + action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showCalendar = val => ({ type: SHOW_CALENDAR, val });\nexport const changeYear = val => ({ type: CHANGE_YEAR, val });\n","const SHOW_RADIAL_CHART = 'SHOW_RADIAL_CHART';\nconst SELECT_DAY = 'SELECT_DAY';\n\nconst initialState = {\n  isRadialChartVisible: false,\n  selectedDay: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_RADIAL_CHART:\n      return {\n        ...state,\n        isRadialChartVisible: action.val\n      };\n    case SELECT_DAY:\n      return {\n        ...state,\n        selectedDay: action.val\n      };\n    default:\n      return state;\n  }\n}\n\nexport const showRadialChart = val => ({ type: SHOW_RADIAL_CHART, val });\nexport const selectDay = val => ({ type: SELECT_DAY, val });\n","import { combineReducers } from 'redux';\nimport app from './app';\nimport calendar from './calendar';\nimport radialChart from './radialChart';\n\nconst rootReducer = combineReducers({\n  app,\n  calendar,\n  radialChart\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport moment from 'moment';\n\nconst weekArray = Array.apply(null, Array(7)).map(function (_, i) {\n  return moment(i, 'e').startOf('week').isoWeekday(i+1).format('ddd');\n});\n\nconst DayLabels = () =>\n  <div className='dayLabelsContainer'>\n    <span>\n      {\n        weekArray.map(day =>\n          <text\n            key={day}\n            className='dayLabels'\n          >\n            {day}\n          </text>\n        )\n      }\n    </span>\n  </div>;\n\nexport default DayLabels;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { changeYear } from '../../reducers/calendar';\n\nconst YearLabel = props => {\n  const previousYear = moment(props.minDate).subtract(1, 'years').format('YYYY');\n  const nextYear = moment(props.maxDate).add(1, 'years').format('YYYY');\n  const showPreviousArrow = previousYear >= props.minDate.format('YYYY');\n  const showNextArrow = nextYear <= props.maxDate.format('YYYY');\n\n  return (\n    <div className='yearLabel'>\n      <i\n        className={classNames('fas fa-chevron-left', {'disabled': !showPreviousArrow})}\n        onClick={() => showPreviousArrow && props.changeYear(-1)}\n      />\n      { props.minDate.format('YYYY') }\n      <i\n        className={classNames('fas fa-chevron-right', {'disabled': !showNextArrow})}\n        onClick={() => showNextArrow && props.changeYear(+1)}\n      />\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeYear: val => dispatch(changeYear(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YearLabel);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport * as d3 from 'd3';\nimport { selectDay, showRadialChart } from '../../reducers/radialChart';\n\nconst Day = props => {\n  const cellMargin = props.cellMargin,\n    cellSize = props.cellSize;\n  const d = props.day;\n\n  let isCurrentDay = false;\n  if (moment(d).format('DD-MM-YY') === moment().format('DD-MM-YY')) {\n    isCurrentDay = true;\n  }\n\n  const day = d => (d.getDay() + 6) % 7,\n    week = d3.timeFormat('%W');\n\n  const normalize = (val, max, min) => (1 - 0.25) * ((val - min) / (max - min)) + 0.25;\n\n  const month = props.month;\n\n  const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n  let filters = days.map(d =>\n    Object.keys(props.data).find(key =>\n      new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0))\n  );\n  const count = filters.map(i => !!i && props.data[i]).filter(j => !!j);\n\n  const item = Object.keys(props.data).find(key =>\n    new Date(key).setHours(0,0,0,0) === d.setHours(0,0,0,0));\n  const value = !!props.data[item] && normalize(props.data[item], Math.max(...count), Math.min(...count));\n  const fillColor = !!props.data[item] ? d3.interpolatePurples(value) : '#ececec';\n  return (\n    <rect\n      key={d}\n      className={classNames('day', {'current-day': isCurrentDay})}\n      width={cellSize}\n      height={cellSize}\n      rx={50}\n      ry={50}\n      fill={fillColor}\n      y={(day(d) * cellSize) + (day(d) * cellMargin) + cellMargin}\n      x={((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin}\n      data-tip={`${moment(d).format('dddd, DD MMM YYYY')}<br>Count: ${props.data[item] || 0}`}\n      data-for='svgTooltip'\n    >\n    </rect>\n  )\n};\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  showRadialChart: val => dispatch(showRadialChart(val)),\n  selectDay: val => dispatch(selectDay(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Day);\n","import React from 'react';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport Day from './Day';\n\nconst Month = props => {\n  const month = props.month;\n\n  const weeksInMonth = month => {\n    const m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n  };\n\n  const cellMargin = props.cellMargin,\n    cellSize = props.cellSize;\n\n  const monthName = d3.timeFormat('%B');\n\n  const days = d3.timeDays(month, new Date(month.getFullYear(), month.getMonth()+1, 1));\n  const lastDay = moment(month).endOf('month').format('ddd'); // last day of current month\n  const firstDay = moment(month).add(1, 'months').startOf('month').format('ddd'); // first day of next month\n  let extraSpace = 0;\n  if ((lastDay === 'Mon' && firstDay === 'Tue') || (lastDay === 'Tue' && firstDay === 'Wed')) {\n    extraSpace += 10;\n  }\n\n  return (\n    <svg\n      className='month'\n      height={((cellSize * 7) + (cellMargin * 8) + 20)}\n      width={(cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 5)) + extraSpace}\n      key={month}\n    >\n      <g>\n        <text\n          className='month-name'\n          y={(cellSize * 7) + (cellMargin * 8) + 15}\n          x={((cellSize * weeksInMonth(month)) + (cellMargin * (weeksInMonth(month) + 1))) / 2}\n          textAnchor='middle'\n        >\n          { monthName(month) }\n        </text>\n        { days.map(d => <Day day={d} month={month} key={d} />) }\n      </g>\n    </svg>\n  )\n};\n\nconst mapStateToProps = state => ({\n  cellSize: state.calendar.cellSize,\n  cellMargin: state.calendar.cellMargin\n});\n\nexport default connect(mapStateToProps)(Month);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport * as d3 from 'd3';\n\nimport Month from './Month';\n\nconst Year = props => {\n  const minDate = props.minDate.format('YYYY-MM-DD'); // new Date(2016, 0, 1);\n  const maxDate = props.maxDate.format('YYYY-MM-DD'); // new Date(2020, 11, 31);\n\n  const months = d3.timeMonth.range(new Date(parseInt(`${minDate.split('-')[0]}`), 0, 1),\n    new Date(parseInt(`${maxDate.split('-')[0]}`), 11, 31));\n  const chunk = (target, size) => {\n    return target.reduce((memo, value, index) => {\n      if (index % (target.length / size) === 0 && index !== 0) memo.push([]);\n      memo[memo.length - 1].push(value);\n      return memo\n    }, [[]])\n  };\n  const monthsArr = chunk(months, months.length / 12);\n\n  return (\n    <div>\n      {\n        monthsArr.map((months, i) =>\n          <div className={classNames('year', {'hidden': i !== props.yearIndex})} key={i}>\n            {\n              months.map(month =>\n                <Month\n                  key={month}\n                  month={month}\n                />\n              )\n            }\n          </div>\n        )\n      }\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  minDate: state.app.minDate,\n  maxDate: state.app.maxDate,\n  yearIndex: state.calendar.yearIndex\n});\n\nexport default connect(mapStateToProps)(Year);\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport DayLabels from './DayLabels';\nimport YearLabel from './YearLabel';\nimport Year from './Year';\n\nclass Heatmap extends React.Component {\n  render() {\n    return (\n      <div id='calendar' ref='calendar'>\n        <DayLabels />\n        <YearLabel />\n        <div className='months'>\n          <Year />\n        </div>\n        <ReactTooltip id='svgTooltip' multiline class='tooltipx'/>\n      </div>\n    )\n  }\n}\nexport default Heatmap;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport Dropzone from 'react-dropzone';\nimport Dropdown from 'react-dropdown';\nimport * as d3 from 'd3';\n\nimport { setData, uploadFile } from '../reducers/app';\nimport { showCalendar } from '../reducers/calendar';\n\nimport Heatmap from './calendar/Heatmap';\nimport RadialChart from './radial-chart/RadialChart';\n\nimport 'react-dropdown/style.css';\nimport './App.css';\n\nimport dataset1 from '../data/data.csv';\n\nconst App = props => {\n  const onDrop = (acceptedFiles, rejectedFiles) => {\n    props.uploadFile(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        const parsed = d3.csvParse(data);\n        props.setData(parsed);\n        props.showCalendar(true);\n      };\n      reader.onabort = () => console.log('file reading was aborted');\n      reader.onerror = () => console.log('file reading has failed');\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  const bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  const files = props.files.map((file, i) => (\n    <span key={i}>\n         <b key={file.name}>\n           {file.name}\n         </b>\n         <div className='file-size'>\n           {bytesToSize(file.size)}\n         </div>\n      </span>\n  ));\n  const options = ['Dataset_1.csv', 'Dataset_2.csv', 'Dataset_3.csv', 'Dataset_4.csv'];\n  const onSelect = item => {\n    if (item.value === 'Dataset_1.csv') {\n      d3.csv(dataset1).then(data => {\n        props.setData(data);\n        props.showCalendar(true);\n      }).catch(err => {\n        throw err;\n      });\n    }\n  };\n\n  return (\n    <div className='app'>\n      <header className='header'>\n        <div className='title'> Visualizing Time-Series Data </div>\n      </header>\n      <div className='content'>\n        <section>\n          <p>Upload file</p>\n          <Dropzone\n            accept='text/csv'\n            onDrop={onDrop}\n          >\n            {({getRootProps, getInputProps, isDragActive}) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  className={classNames('dropzone', {'dropzone--isActive': isDragActive, 'dropzone--isDone': !!files.length})}\n                >\n                  <input {...getInputProps()} />\n                  {\n                    !!files.length\n                      ? <span className='file-name'>\n                          <i className=\"fa fa-remove\" />\n                        {files}\n                        </span>\n                      : <span className='upload-message'>\n                          <i className=\"fa fa-upload\" />\n                            Drag & Drop your file or <u>Browse</u>\n                        </span>\n                  }\n                </div>\n              )\n            }}\n          </Dropzone>\n        </section>\n        <section>\n          <p>Select dataset</p>\n          <Dropdown\n            className='dropdown'\n            options={options}\n            placeholder='Choose...'\n            onChange={onSelect}\n          />\n        </section>\n        {\n          props.isCalendarVisible &&\n          <section>\n            <p>Calendar heatmap</p>\n            <Heatmap\n              data={props.data}\n              dayInsights={props.dayInsights}\n            />\n          </section>\n        }\n        {\n          props.isRadialChartVisible &&\n          <section>\n            <p>Day overview</p>\n            <RadialChart\n              key={props.data}\n            />\n          </section>\n        }\n      </div>\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  data: state.app.data,\n  dayInsights: state.app.dayInsights,\n  files: state.app.files,\n  isCalendarVisible: state.calendar.isCalendarVisible,\n  isRadialChartVisible: state.radialChart.isRadialChartVisible\n});\n\nconst mapDispatchToProps = dispatch => ({\n  uploadFile: val => dispatch(uploadFile(val)),\n  showCalendar: val => dispatch(showCalendar(val)),\n  setData: val => dispatch(setData(val))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from './reducers';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}