{"version":3,"sources":["data.csv","logo.svg","parser.js","Calendar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTimestamp","timeStamp","dateString","split","timeString","slice","moment","concat","parseData","data","newData","map","item","timestamp","columns","push","Calendar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calendarHeatmap","settings","gutter","item_gutter","width","height","item_size","label_padding","max_block_height","transition_duration","tooltip_width","tooltip_padding","renderD3","bind","assertThisInitialized","updateD3","prevProps","prevState","react_default","a","createElement","chart","faux","connectFauxDOM","svgDoc","d3","append","attr","xBuffer","text","title","selectAll","enter","d","i","length","circle","select","exit","remove","getCx","merge","transition","duration","animateFauxDOM","Component","defaultProps","withFauxDOM","App","state","dataArray0","dataArray1","dataIndex","changeData","then","console","log","catch","err","setState","className","id","onClick","src_Calendar_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6036837.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data.2340907b.csv\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import moment from 'moment';\n\nconst parseTimestamp = timeStamp => {\n  const dateString = timeStamp.split('T')[0];\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  return moment(`${dateString} ${timeString}`, 'YYYYMMDD HHmmss');\n};\n\nconst parseData = data => {\n  let newData = data.map(item => ({ timestamp: parseTimestamp(item[data.columns[0]]) }));\n  newData.push({ timestamp: parseTimestamp(data.columns[0]) });\n  return newData;\n};\n\nexport default parseData;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport './Calendar.css';\nimport * as d3 from 'd3';\nimport { withFauxDOM } from 'react-faux-dom';\n\nclass Calendar extends  Component {\n  constructor (props) {\n    super(props);\n    this.calendarHeatmap = {\n      settings: {\n        gutter: 5,\n        item_gutter: 1,\n        width: 1000,\n        height: 200,\n        item_size: 10,\n        label_padding: 40,\n        max_block_height: 20,\n        transition_duration: 500,\n        tooltip_width: 250,\n        tooltip_padding: 15,\n      }\n    };\n    this.renderD3 = this.renderD3.bind(this);\n    this.updateD3 = this.updateD3.bind(this);\n  }\n\n  componentDidMount () {\n    this.renderD3()\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    // do not compare props.chart as it gets updated in updateD3()\n    if (this.props.data !== prevProps.data) {\n      this.updateD3()\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        {this.props.chart}\n      </div>\n    )\n  }\n\n  renderD3 () {\n    var data = this.props.data;\n\n    // This will create a faux div and store its virtual DOM in state.chart\n    var faux = this.props.connectFauxDOM('div', 'chart');\n\n    /*\n       D3 code below by Alan Smith, http://bl.ocks.org/alansmithy/e984477a741bc56db5a5\n       The only changes made for this example are...\n       1) feeding D3 the faux node created above\n       2) calling this.animateFauxDOM(duration) after each animation kickoff\n       3) move data generation and button code to parent component\n       4) data and title provided as props by parent component\n       5) reattach to faux dom for updates\n       6) move rejoining of data and chart updates to updateD3()\n       7) code update for D3 version 4\n    */\n\n    var xBuffer = 50;\n    var yBuffer = 150;\n    var lineLength = 400;\n\n    var svgDoc = d3.select(faux).append('svg');\n\n    svgDoc\n      .append('text')\n      .attr('x', xBuffer + lineLength / 2)\n      .attr('y', 50)\n      .text(this.props.title);\n\n    // create axis line\n    svgDoc\n      .append('line')\n      .attr('x1', xBuffer)\n      .attr('y1', yBuffer)\n      .attr('x1', xBuffer + lineLength)\n      .attr('y2', yBuffer);\n\n    // create basic circles\n    svgDoc\n      .append('g')\n      .selectAll('circle')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('cx', function (d, i) {\n        var spacing = lineLength / data.length;\n        return xBuffer + i * spacing\n      })\n      .attr('cy', yBuffer)\n      .attr('r', function (d, i) {\n        return d\n      })\n  }\n\n  updateD3 () {\n    var data = this.props.data;\n\n    /* code below from Alan Smith except changes mentioned previously */\n\n    var xBuffer = 50;\n    var yBuffer = 150;\n    var lineLength = 400;\n\n    // reattach to faux dom\n    var faux = this.props.connectFauxDOM('div', 'chart');\n    var svgDoc = d3.select(faux).select('svg');\n\n    // rejoin data\n    var circle = svgDoc.select('g').selectAll('circle').data(data);\n\n    circle.exit().remove(); // remove unneeded circles\n\n    const getCx = function (d, i) {\n      var spacing = lineLength / data.length;\n      return xBuffer + i * spacing\n    };\n    // create any new circles needed\n    const newCircles = circle\n      .enter()\n      .append('circle')\n      .attr('cy', yBuffer)\n      .attr('cx', getCx)\n      .attr('r', 0);\n\n    // update all circles to new positions\n    newCircles\n      .merge(circle)\n      .transition()\n      .duration(500)\n      .attr('cx', getCx)\n      .attr('r', function (d, i) {\n        return d\n      });\n\n    this.props.animateFauxDOM(800);\n\n    d3.select('text').text(this.props.title)\n  }\n}\n\nCalendar.defaultProps = {\n  chart: 'loading...'\n};\n\nCalendar.propTypes = {\n  title: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.number).isRequired\n};\n\nexport default withFauxDOM(Calendar);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as d3 from 'd3';\nimport { withFauxDOM } from 'react-faux-dom';\nimport data from './data.csv';\nimport parseData from './parser';\n\nimport Calendar from './Calendar';\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      data: [],\n      dataArray0: [30, 35, 45, 55, 70],\n      dataArray1: [50, 55, 45, 35, 20, 25, 25, 40],\n      dataIndex: 0\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n\n  componentDidMount () {\n    d3.csv(data).then(function(data) {\n      console.log(parseData(data));\n      // this.setState({ data: parseData(data) });\n    }).catch(function(err) {\n      throw err;\n    });\n  }\n\n  changeData () {\n    this.setState(state => ({\n      dataIndex: (state.dataIndex + 1) % 2\n    }))\n  }\n\n  render () {\n    return (\n      <div className='app'>\n        <div className='column' id='left'>\n          <div className='topLeft'>\n            <i className=\"fas fa-clock\" />\n          </div>\n          <div className='bottom'>\n          </div>\n        </div>\n        <div className='column' id='right'>\n          <div className='up' />\n          {/*<div className='topRight'>*/}\n          {/*</div>*/}\n          {/*<div className='bottom'>*/}\n          {/*</div>*/}\n          <div>\n            <button onClick={this.changeData}>Change data</button>\n            <Calendar\n              data={this.state['dataArray' + this.state.dataIndex]}\n              title={'dataset ' + this.state.dataIndex}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp.defaultProps = {\n  chart: 'loading'\n};\n\nexport default withFauxDOM(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}